

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jan 07 22:55:19 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   116   000000                     
   117                           ; Generated 23/03/2023 GMT
   118                           ; 
   119                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   120                           ; All rights reserved.
   121                           ; 
   122                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   123                           ; 
   124                           ; Redistribution and use in source and binary forms, with or without modification, are
   125                           ; permitted provided that the following conditions are met:
   126                           ; 
   127                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   128                           ;        conditions and the following disclaimer.
   129                           ; 
   130                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   131                           ;        of conditions and the following disclaimer in the documentation and/or other
   132                           ;        materials provided with the distribution. Publication is not required when
   133                           ;        this file is used in an embedded application.
   134                           ; 
   135                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   136                           ;        software without specific prior written permission.
   137                           ; 
   138                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   139                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   140                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   141                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   142                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   143                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   144                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   145                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   146                           ; 
   147                           ; 
   148                           ; Code-generator required, PIC18F4620 Definitions
   149                           ; 
   150                           ; SFR Addresses
   151   000000                     
   152                           	psect	idataCOMRAM
   153   0040C4                     __pidataCOMRAM:
   154                           	callstack 0
   155                           
   156                           ;initializer for _led1
   157   0040C4  71                 	db	113
   158                           
   159                           	psect	idataBANK0
   160   003FD8                     __pidataBANK0:
   161                           	callstack 0
   162                           
   163                           ;initializer for _lat_registers
   164   003FD8  89                 	db	137
   165   003FD9  0F                 	db	15
   166   003FDA  8A                 	db	138
   167   003FDB  0F                 	db	15
   168   003FDC  8B                 	db	139
   169   003FDD  0F                 	db	15
   170   003FDE  8C                 	db	140
   171   003FDF  0F                 	db	15
   172   003FE0  8D                 	db	141
   173   003FE1  0F                 	db	15
   174                           
   175                           ;initializer for _tris_registers
   176   003FE2  92                 	db	146
   177   003FE3  0F                 	db	15
   178   003FE4  93                 	db	147
   179   003FE5  0F                 	db	15
   180   003FE6  94                 	db	148
   181   003FE7  0F                 	db	15
   182   003FE8  95                 	db	149
   183   003FE9  0F                 	db	15
   184   003FEA  96                 	db	150
   185   003FEB  0F                 	db	15
   186                           
   187                           ;initializer for _lcd1
   188   003FEC  03                 	db	3
   189   003FED  0B                 	db	11
   190   003FEE  13                 	db	19
   191   003FEF  1B                 	db	27
   192   003FF0  23                 	db	35
   193   003FF1  2B                 	db	43
   194                           
   195                           	psect	idataBANK1
   196   003FF2                     __pidataBANK1:
   197                           	callstack 0
   198                           
   199                           ;initializer for _port_registers
   200   003FF2  80                 	db	128
   201   003FF3  0F                 	db	15
   202   003FF4  81                 	db	129
   203   003FF5  0F                 	db	15
   204   003FF6  82                 	db	130
   205   003FF7  0F                 	db	15
   206   003FF8  83                 	db	131
   207   003FF9  0F                 	db	15
   208   003FFA  84                 	db	132
   209   003FFB  0F                 	db	15
   210                           
   211                           ;initializer for _Hollow_Heart_Custom_Char
   212   003FFC  00                 	db	0
   213   003FFD  0A                 	db	10
   214   003FFE  15                 	db	21
   215   003FFF  11                 	db	17
   216   004000  0A                 	db	10
   217   004001  04                 	db	4
   218   004002  00                 	db	0
   219   004003  00                 	db	0
   220                           
   221                           ;initializer for _Full_Heart_Custom_Char
   222   004004  00                 	db	0
   223   004005  0A                 	db	10
   224   004006  1F                 	db	31
   225   004007  1F                 	db	31
   226   004008  0E                 	db	14
   227   004009  04                 	db	4
   228   00400A  00                 	db	0
   229   00400B  00                 	db	0
   230                           
   231                           	psect	smallconst
   232   001000                     __psmallconst:
   233                           	callstack 0
   234   001000  00                 	db	0
   235   001001                     _btn_values:
   236                           	callstack 0
   237   001001  37                 	db	55
   238   001002  38                 	db	56
   239   001003  39                 	db	57
   240   001004  2F                 	db	47
   241   001005  34                 	db	52
   242   001006  35                 	db	53
   243   001007  36                 	db	54
   244   001008  2A                 	db	42
   245   001009  31                 	db	49
   246   00100A  32                 	db	50
   247   00100B  33                 	db	51
   248   00100C  2D                 	db	45
   249   00100D  23                 	db	35
   250   00100E  30                 	db	48
   251   00100F  3D                 	db	61
   252   001010  2B                 	db	43
   253   001011                     __end_of_btn_values:
   254                           	callstack 0
   255   001011                     STR_4:
   256   001011  48                 	db	72	;'H'
   257   001012  65                 	db	101	;'e'
   258   001013  61                 	db	97	;'a'
   259   001014  72                 	db	114	;'r'
   260   001015  74                 	db	116	;'t'
   261   001016  52                 	db	82	;'R'
   262   001017  61                 	db	97	;'a'
   263   001018  74                 	db	116	;'t'
   264   001019  65                 	db	101	;'e'
   265   00101A  20                 	db	32
   266   00101B  4D                 	db	77	;'M'
   267   00101C  65                 	db	101	;'e'
   268   00101D  61                 	db	97	;'a'
   269   00101E  73                 	db	115	;'s'
   270   00101F  75                 	db	117	;'u'
   271   001020  72                 	db	114	;'r'
   272   001021  6D                 	db	109	;'m'
   273   001022  65                 	db	101	;'e'
   274   001023  6E                 	db	110	;'n'
   275   001024  74                 	db	116	;'t'
   276   001025  00                 	db	0
   277   001026                     STR_5:
   278   001026  20                 	db	32
   279   001027  20                 	db	32
   280   001028  50                 	db	80	;'P'
   281   001029  72                 	db	114	;'r'
   282   00102A  6F                 	db	111	;'o'
   283   00102B  6A                 	db	106	;'j'
   284   00102C  65                 	db	101	;'e'
   285   00102D  63                 	db	99	;'c'
   286   00102E  74                 	db	116	;'t'
   287   00102F  20                 	db	32
   288   001030  4D                 	db	77	;'M'
   289   001031  61                 	db	97	;'a'
   290   001032  64                 	db	100	;'d'
   291   001033  65                 	db	101	;'e'
   292   001034  20                 	db	32
   293   001035  62                 	db	98	;'b'
   294   001036  79                 	db	121	;'y'
   295   001037  00                 	db	0
   296   001038                     STR_6:
   297   001038  20                 	db	32
   298   001039  20                 	db	32
   299   00103A  20                 	db	32
   300   00103B  4D                 	db	77	;'M'
   301   00103C  6F                 	db	111	;'o'
   302   00103D  68                 	db	104	;'h'
   303   00103E  61                 	db	97	;'a'
   304   00103F  6D                 	db	109	;'m'
   305   001040  65                 	db	101	;'e'
   306   001041  64                 	db	100	;'d'
   307   001042  20                 	db	32
   308   001043  4F                 	db	79	;'O'
   309   001044  73                 	db	115	;'s'
   310   001045  61                 	db	97	;'a'
   311   001046  6D                 	db	109	;'m'
   312   001047  61                 	db	97	;'a'
   313   001048  00                 	db	0
   314   001049                     STR_7:
   315   001049  20                 	db	32
   316   00104A  42                 	db	66	;'B'
   317   00104B  50                 	db	80	;'P'
   318   00104C  4D                 	db	77	;'M'
   319   00104D  20                 	db	32
   320   00104E  3D                 	db	61	;'='
   321   00104F  20                 	db	32
   322   001050  00                 	db	0
   323   001051                     STR_1:
   324   001051  25                 	db	37
   325   001052  69                 	db	105	;'i'
   326   001053  00                 	db	0
   327   001054  00                 	db	0	; dummy byte at the end
   328   000000                     
   329                           	psect	nvCOMRAM
   330   000056                     __pnvCOMRAM:
   331                           	callstack 0
   332   000056                     _ret:
   333                           	callstack 0
   334   000056                     	ds	1
   335   000000                     _ADRESL	set	4035
   336   000000                     _ADRESH	set	4036
   337   000000                     _TMR0H	set	4055
   338                           
   339                           ; #config settings
   340                           
   341                           	psect	cinit
   342   0035A0                     __pcinit:
   343                           	callstack 0
   344   0035A0                     start_initialization:
   345                           	callstack 0
   346   0035A0                     __initialization:
   347                           	callstack 0
   348                           
   349                           ; Initialize objects allocated to BANK1 (26 bytes)
   350                           ; load TBLPTR registers with __pidataBANK1
   351   0035A0  0EF2               	movlw	low __pidataBANK1
   352   0035A2  6EF6               	movwf	tblptrl,c
   353   0035A4  0E3F               	movlw	high __pidataBANK1
   354   0035A6  6EF7               	movwf	tblptrh,c
   355   0035A8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   356   0035AA  6EF8               	movwf	tblptru,c
   357   0035AC  EE01  F065         	lfsr	0,__pdataBANK1
   358   0035B0  EE10 F01A          	lfsr	1,26
   359   0035B4                     copy_data0:
   360   0035B4  0009               	tblrd		*+
   361   0035B6  CFF5 FFEE          	movff	tablat,postinc0
   362   0035BA  50E5               	movf	postdec1,w,c
   363   0035BC  50E1               	movf	fsr1l,w,c
   364   0035BE  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to BANK0 (26 bytes)
   367                           ; load TBLPTR registers with __pidataBANK0
   368   0035C0  0ED8               	movlw	low __pidataBANK0
   369   0035C2  6EF6               	movwf	tblptrl,c
   370   0035C4  0E3F               	movlw	high __pidataBANK0
   371   0035C6  6EF7               	movwf	tblptrh,c
   372   0035C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   373   0035CA  6EF8               	movwf	tblptru,c
   374   0035CC  EE00  F0E6         	lfsr	0,__pdataBANK0
   375   0035D0  EE10 F01A          	lfsr	1,26
   376   0035D4                     copy_data1:
   377   0035D4  0009               	tblrd		*+
   378   0035D6  CFF5 FFEE          	movff	tablat,postinc0
   379   0035DA  50E5               	movf	postdec1,w,c
   380   0035DC  50E1               	movf	fsr1l,w,c
   381   0035DE  E1FA               	bnz	copy_data1
   382                           
   383                           ; Initialize objects allocated to COMRAM (1 bytes)
   384                           ; load TBLPTR registers with __pidataCOMRAM
   385   0035E0  0EC4               	movlw	low __pidataCOMRAM
   386   0035E2  6EF6               	movwf	tblptrl,c
   387   0035E4  0E40               	movlw	high __pidataCOMRAM
   388   0035E6  6EF7               	movwf	tblptrh,c
   389   0035E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   390   0035EA  6EF8               	movwf	tblptru,c
   391   0035EC  0009               	tblrd		*+	;fetch initializer
   392   0035EE  CFF5 F057          	movff	tablat,__pdataCOMRAM
   393                           
   394                           ; Clear objects allocated to BANK1 (62 bytes)
   395   0035F2  EE01  F000         	lfsr	0,__pbssBANK1
   396   0035F6  0E3E               	movlw	62
   397   0035F8                     clear_0:
   398   0035F8  6AEE               	clrf	postinc0,c
   399   0035FA  06E8               	decf	wreg,f,c
   400   0035FC  E1FD               	bnz	clear_0
   401                           
   402                           ; Clear objects allocated to BANK0 (51 bytes)
   403   0035FE  EE00  F080         	lfsr	0,__pbssBANK0
   404   003602  0E33               	movlw	51
   405   003604                     clear_1:
   406   003604  6AEE               	clrf	postinc0,c
   407   003606  06E8               	decf	wreg,f,c
   408   003608  E1FD               	bnz	clear_1
   409                           
   410                           ; Clear objects allocated to COMRAM (37 bytes)
   411   00360A  EE00  F031         	lfsr	0,__pbssCOMRAM
   412   00360E  0E25               	movlw	37
   413   003610                     clear_2:
   414   003610  6AEE               	clrf	postinc0,c
   415   003612  06E8               	decf	wreg,f,c
   416   003614  E1FD               	bnz	clear_2
   417   003616                     end_of_initialization:
   418                           	callstack 0
   419   003616                     __end_of__initialization:
   420                           	callstack 0
   421   003616  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   422   003618  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   423   00361A  0100               	movlb	0
   424   00361C  EFF8  F01E         	goto	_main	;jump to C main() function
   425                           
   426                           	psect	bssCOMRAM
   427   000031                     __pbssCOMRAM:
   428                           	callstack 0
   429   000031                     _CCP2_InterruptHandler:
   430                           	callstack 0
   431   000031                     	ds	2
   432   000033                     _CCP1_InterruptHandler:
   433                           	callstack 0
   434   000033                     	ds	2
   435   000035                     _timer3_preload:
   436                           	callstack 0
   437   000035                     	ds	2
   438   000037                     _TMR3_InterruptHandler:
   439                           	callstack 0
   440   000037                     	ds	2
   441   000039                     _timer1_preload:
   442                           	callstack 0
   443   000039                     	ds	2
   444   00003B                     _timer0_preload:
   445                           	callstack 0
   446   00003B                     	ds	2
   447   00003D                     _RB5_InterruptHandler:
   448                           	callstack 0
   449   00003D                     	ds	2
   450   00003F                     _RB4_InterruptHandler:
   451                           	callstack 0
   452   00003F                     	ds	2
   453   000041                     _INT2_InterruptHandler:
   454                           	callstack 0
   455   000041                     	ds	2
   456   000043                     _INT1_InterruptHandler:
   457                           	callstack 0
   458   000043                     	ds	2
   459   000045                     _ADC_InterruptHandler:
   460                           	callstack 0
   461   000045                     	ds	2
   462   000047                     _flags:
   463                           	callstack 0
   464   000047                     	ds	1
   465   000048                     _ovf_cnt:
   466                           	callstack 0
   467   000048                     	ds	1
   468   000049                     _timer2_preload:
   469                           	callstack 0
   470   000049                     	ds	1
   471   00004A                     _RB7_pin_init_value:
   472                           	callstack 0
   473   00004A                     	ds	1
   474   00004B                     _RB6_pin_init_value:
   475                           	callstack 0
   476   00004B                     	ds	1
   477   00004C                     _RB5_pin_init_value:
   478                           	callstack 0
   479   00004C                     	ds	1
   480   00004D                     _RB4_pin_init_value:
   481                           	callstack 0
   482   00004D                     	ds	1
   483   00004E                     relay_turn_off@F3323:
   484                           	callstack 0
   485   00004E                     	ds	1
   486   00004F                     relay_turn_on@F3318:
   487                           	callstack 0
   488   00004F                     	ds	1
   489   000050                     relay_initialize@F3313:
   490                           	callstack 0
   491   000050                     	ds	1
   492   000051                     led_toggle@F3334:
   493                           	callstack 0
   494   000051                     	ds	1
   495   000052                     led_turn_off@F3329:
   496                           	callstack 0
   497   000052                     	ds	1
   498   000053                     led_turn_on@F3324:
   499                           	callstack 0
   500   000053                     	ds	1
   501   000054                     led_initialize@F3319:
   502                           	callstack 0
   503   000054                     	ds	1
   504   000055                     _heart_rate_bpm:
   505                           	callstack 0
   506   000055                     	ds	1
   507                           
   508                           	psect	dataCOMRAM
   509   000057                     __pdataCOMRAM:
   510                           	callstack 0
   511   000057                     _led1:
   512                           	callstack 0
   513   000057                     	ds	1
   514                           
   515                           	psect	bssBANK0
   516   000080                     __pbssBANK0:
   517                           	callstack 0
   518   000080                     	ds	4
   519   000084                     	ds	4
   520   000088                     _width:
   521                           	callstack 0
   522   000088                     	ds	2
   523   00008A                     _prec:
   524                           	callstack 0
   525   00008A                     	ds	2
   526   00008C                     CCP_Capture_Mode_Read_Value@F3461:
   527                           	callstack 0
   528   00008C                     	ds	2
   529   00008E                     _TMR1_InterruptHandler:
   530                           	callstack 0
   531   00008E                     	ds	2
   532   000090                     _TMR0_InterruptHandler:
   533                           	callstack 0
   534   000090                     	ds	2
   535   000092                     _RB7_InterruptHandler:
   536                           	callstack 0
   537   000092                     	ds	2
   538   000094                     _RB6_InterruptHandler:
   539                           	callstack 0
   540   000094                     	ds	2
   541   000096                     _INT0_InterruptHandler:
   542                           	callstack 0
   543   000096                     	ds	2
   544   000098                     HeartRate_Display@flag:
   545                           	callstack 0
   546   000098                     	ds	1
   547   000099                     _cap_flag:
   548                           	callstack 0
   549   000099                     	ds	1
   550   00009A                     _ccp1_obj:
   551                           	callstack 0
   552   00009A                     	ds	13
   553   0000A7                     _timer3_obj:
   554                           	callstack 0
   555   0000A7                     	ds	6
   556   0000AD                     _Cap:
   557                           	callstack 0
   558   0000AD                     	ds	4
   559   0000B1                     _timer2_obj:
   560                           	callstack 0
   561   0000B1                     	ds	2
   562                           
   563                           	psect	dataBANK0
   564   0000E6                     __pdataBANK0:
   565                           	callstack 0
   566   0000E6                     _lat_registers:
   567                           	callstack 0
   568   0000E6                     	ds	10
   569   0000F0                     _tris_registers:
   570                           	callstack 0
   571   0000F0                     	ds	10
   572   0000FA                     _lcd1:
   573                           	callstack 0
   574   0000FA                     	ds	6
   575                           
   576                           	psect	bssBANK1
   577   000100                     __pbssBANK1:
   578                           	callstack 0
   579   000100                     	ds	11
   580   00010B                     	ds	6
   581   000111                     _dbuf:
   582                           	callstack 0
   583   000111                     	ds	32
   584   000131                     _ccp2_obj:
   585                           	callstack 0
   586   000131                     	ds	13
   587                           
   588                           	psect	dataBANK1
   589   000165                     __pdataBANK1:
   590                           	callstack 0
   591   000165                     _port_registers:
   592                           	callstack 0
   593   000165                     	ds	10
   594   00016F                     _Hollow_Heart_Custom_Char:
   595                           	callstack 0
   596   00016F                     	ds	8
   597   000177                     _Full_Heart_Custom_Char:
   598                           	callstack 0
   599   000177                     	ds	8
   600                           
   601                           	psect	cstackBANK1
   602   00013E                     __pcstackBANK1:
   603                           	callstack 0
   604   00013E                     ??___fldiv:
   605   00013E                     vfprintf@cfmt:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x0
   609   00013E                     	ds	2
   610   000140                     ?_sprintf:
   611                           	callstack 0
   612   000140                     sprintf@s:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616   000140                     	ds	2
   617   000142                     sprintf@fmt:
   618                           	callstack 0
   619   000142                     ___fldiv@rem:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x4
   623   000142                     	ds	4
   624   000146                     ___fldiv@sign:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x8
   628   000146                     	ds	1
   629   000147                     ___fldiv@new_exp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x9
   633   000147                     	ds	1
   634   000148                     sprintf@ap:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xA
   638   000148                     	ds	1
   639   000149                     ___fldiv@grs:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0xB
   643   000149                     	ds	1
   644   00014A                     sprintf@f:
   645                           	callstack 0
   646                           
   647                           ; 12 bytes @ 0xC
   648   00014A                     	ds	3
   649   00014D                     ___fldiv@bexp:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0xF
   653   00014D                     	ds	1
   654   00014E                     ___fldiv@aexp:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x10
   658   00014E                     	ds	1
   659   00014F                     ?___fltol:
   660                           	callstack 0
   661   00014F                     ___fltol@f1:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x11
   665   00014F                     	ds	4
   666   000153                     ??___fltol:
   667                           
   668                           ; 1 bytes @ 0x15
   669   000153                     	ds	3
   670   000156                     convert_uint8_to_string@str:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x18
   674   000156                     	ds	1
   675   000157                     ___fltol@sign1:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x19
   679   000157                     	ds	1
   680   000158                     ___fltol@exp1:
   681                           	callstack 0
   682   000158                     convert_uint8_to_string@Temp_str:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x1A
   686   000158                     	ds	1
   687   000159                     HeartRate_Calculate@XTAL_FREQ_MHZ:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x1B
   691   000159                     	ds	3
   692   00015C                     convert_uint8_to_string@value:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x1E
   696   00015C                     	ds	1
   697   00015D                     convert_uint8_to_string@cnt:
   698                           	callstack 0
   699   00015D                     HeartRate_Calculate@TimerPrescaler:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x1F
   703   00015D                     	ds	1
   704   00015E                     ??_HeartRate_Display:
   705   00015E                     HeartRate_Calculate@HeartRate_BPM:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x20
   709   00015E                     	ds	1
   710   00015F                     HeartRate_Display@HeartRate_BPM:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x21
   714   00015F                     	ds	1
   715   000160                     HeartRate_Calculate@beats_Time_Seconds:
   716                           	callstack 0
   717   000160                     HeartRate_Display@BPM_Str:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x22
   721   000160                     	ds	4
   722   000164                     HeartRate_Calculate@BPM:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x26
   726   000164                     	ds	1
   727                           
   728                           	psect	cstackBANK0
   729   0000B3                     __pcstackBANK0:
   730                           	callstack 0
   731   0000B3                     ??_abs:
   732   0000B3                     gpio_pin_write_logic@ret:
   733                           	callstack 0
   734   0000B3                     memset@k:
   735                           	callstack 0
   736   0000B3                     fputs@s:
   737                           	callstack 0
   738   0000B3                     ___lmul@product:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x0
   742   0000B3                     	ds	1
   743   0000B4                     lcd_send_4bits@lcd:
   744                           	callstack 0
   745   0000B4                     lcd_4bit_send_enable_signal@lcd:
   746                           	callstack 0
   747   0000B4                     gpio_pin_initialize@pin_config:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x1
   751   0000B4                     	ds	1
   752   0000B5                     memset@s:
   753                           	callstack 0
   754   0000B5                     fputs@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x2
   758   0000B5                     	ds	1
   759   0000B6                     ??_gpio_pin_initialize:
   760   0000B6                     lcd_send_4bits@_data_command:
   761                           	callstack 0
   762   0000B6                     lcd_4bit_send_enable_signal@ret:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x3
   766   0000B6                     	ds	1
   767   0000B7                     ?___lldiv:
   768                           	callstack 0
   769   0000B7                     ?___xxtofl:
   770                           	callstack 0
   771   0000B7                     lcd_send_4bits@ret:
   772                           	callstack 0
   773   0000B7                     gpio_pin_initialize@ret:
   774                           	callstack 0
   775   0000B7                     fputs@c:
   776                           	callstack 0
   777   0000B7                     ___lldiv@dividend:
   778                           	callstack 0
   779   0000B7                     ___xxtofl@val:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x4
   783   0000B7                     	ds	1
   784   0000B8                     lcd_4bit_send_command@lcd:
   785                           	callstack 0
   786   0000B8                     lcd_4bit_send_char_data@lcd:
   787                           	callstack 0
   788   0000B8                     fputs@i:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x5
   792   0000B8                     	ds	2
   793   0000BA                     lcd_4bit_send_command@command:
   794                           	callstack 0
   795   0000BA                     lcd_4bit_send_char_data@data:
   796                           	callstack 0
   797   0000BA                     pad@fp:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x7
   801   0000BA                     	ds	1
   802   0000BB                     ??___xxtofl:
   803   0000BB                     lcd_4bit_send_command@ret:
   804                           	callstack 0
   805   0000BB                     lcd_4bit_send_char_data@ret:
   806                           	callstack 0
   807   0000BB                     ___lldiv@divisor:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x8
   811   0000BB                     	ds	1
   812   0000BC                     lcd_4bit_initialize@lcd:
   813                           	callstack 0
   814   0000BC                     lcd_4bit_send_string@lcd:
   815                           	callstack 0
   816   0000BC                     lcd_4bit_set_cursor@lcd:
   817                           	callstack 0
   818   0000BC                     pad@buf:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x9
   822   0000BC                     	ds	2
   823   0000BE                     ??_lcd_4bit_initialize:
   824   0000BE                     lcd_4bit_set_cursor@row:
   825                           	callstack 0
   826   0000BE                     lcd_4bit_send_string@str:
   827                           	callstack 0
   828   0000BE                     pad@p:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0xB
   832   0000BE                     	ds	1
   833   0000BF                     lcd_4bit_set_cursor@column:
   834                           	callstack 0
   835   0000BF                     ___xxtofl@sign:
   836                           	callstack 0
   837   0000BF                     ___lldiv@quotient:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0xC
   841   0000BF                     	ds	1
   842   0000C0                     ??_lcd_4bit_set_cursor:
   843   0000C0                     ??_pad:
   844   0000C0                     lcd_4bit_initialize@l_data_pins_counter:
   845                           	callstack 0
   846   0000C0                     ___xxtofl@exp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0xD
   850   0000C0                     	ds	1
   851   0000C1                     lcd_4bit_initialize@ret:
   852                           	callstack 0
   853   0000C1                     pad@i:
   854                           	callstack 0
   855   0000C1                     ___xxtofl@arg:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0xE
   859   0000C1                     	ds	1
   860   0000C2                     lcd_4bit_send_char_data_pos@lcd:
   861                           	callstack 0
   862   0000C2                     lcd_4bit_send_string_pos@lcd:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0xF
   866   0000C2                     	ds	1
   867   0000C3                     ___lldiv@counter:
   868                           	callstack 0
   869   0000C3                     pad@w:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x10
   873   0000C3                     	ds	1
   874   0000C4                     lcd_4bit_send_char_data_pos@row:
   875                           	callstack 0
   876   0000C4                     lcd_4bit_send_string_pos@row:
   877                           	callstack 0
   878   0000C4                     CCP_PWM_Mode_Init@_ccp_obj:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x11
   882   0000C4                     	ds	1
   883   0000C5                     ?___flmul:
   884                           	callstack 0
   885   0000C5                     lcd_4bit_send_char_data_pos@column:
   886                           	callstack 0
   887   0000C5                     lcd_4bit_send_string_pos@column:
   888                           	callstack 0
   889   0000C5                     dtoa@fp:
   890                           	callstack 0
   891   0000C5                     ___flmul@b:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x12
   895   0000C5                     	ds	1
   896   0000C6                     lcd_4bit_send_char_data_pos@data:
   897                           	callstack 0
   898   0000C6                     CCP_PWM_Mode_Init@ret:
   899                           	callstack 0
   900   0000C6                     lcd_4bit_send_string_pos@str:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x13
   904   0000C6                     	ds	1
   905   0000C7                     lcd_4bit_send_char_data_pos@ret:
   906                           	callstack 0
   907   0000C7                     CCP_Init@_ccp_obj:
   908                           	callstack 0
   909   0000C7                     dtoa@d:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913   0000C7                     	ds	1
   914   0000C8                     lcd_4bit_send_custom_char@lcd:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x15
   918   0000C8                     	ds	1
   919   0000C9                     ??_CCP_Init:
   920   0000C9                     _dtoa$3368:
   921                           	callstack 0
   922   0000C9                     ___flmul@a:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x16
   926   0000C9                     	ds	1
   927   0000CA                     lcd_4bit_send_custom_char@row:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x17
   931   0000CA                     	ds	1
   932   0000CB                     lcd_4bit_send_custom_char@column:
   933                           	callstack 0
   934   0000CB                     CCP_Init@ret:
   935                           	callstack 0
   936   0000CB                     dtoa@p:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x18
   940   0000CB                     	ds	1
   941   0000CC                     lcd_4bit_send_custom_char@_chr:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x19
   945   0000CC                     	ds	1
   946   0000CD                     ??___flmul:
   947   0000CD                     dtoa@w:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x1A
   951   0000CD                     	ds	1
   952   0000CE                     lcd_4bit_send_custom_char@mem_pos:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x1B
   956   0000CE                     	ds	1
   957   0000CF                     lcd_4bit_send_custom_char@lcd_counter:
   958                           	callstack 0
   959   0000CF                     dtoa@s:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x1C
   963   0000CF                     	ds	1
   964   0000D0                     ??_Welcome_Message:
   965   0000D0                     dtoa@i:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x1D
   969   0000D0                     	ds	1
   970   0000D1                     ___flmul@sign:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x1E
   974   0000D1                     	ds	1
   975   0000D2                     ___flmul@aexp:
   976                           	callstack 0
   977   0000D2                     vfpfcnvrt@fp:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x1F
   981   0000D2                     	ds	1
   982   0000D3                     ___flmul@grs:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x20
   986   0000D3                     	ds	1
   987   0000D4                     vfpfcnvrt@fmt:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x21
   991   0000D4                     	ds	2
   992   0000D6                     vfpfcnvrt@ap:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x23
   996   0000D6                     	ds	1
   997   0000D7                     ___flmul@bexp:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x24
  1001   0000D7                     	ds	1
  1002   0000D8                     ??_vfpfcnvrt:
  1003   0000D8                     ___flmul@prod:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x25
  1007   0000D8                     	ds	2
  1008   0000DA                     vfpfcnvrt@convarg:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x27
  1012   0000DA                     	ds	2
  1013   0000DC                     ___flmul@temp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x29
  1017   0000DC                     	ds	2
  1018   0000DE                     ?___fldiv:
  1019                           	callstack 0
  1020   0000DE                     vfpfcnvrt@cp:
  1021                           	callstack 0
  1022   0000DE                     ___fldiv@b:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x2B
  1026   0000DE                     	ds	2
  1027   0000E0                     ?_vfprintf:
  1028                           	callstack 0
  1029   0000E0                     vfprintf@fp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x2D
  1033   0000E0                     	ds	2
  1034   0000E2                     vfprintf@fmt:
  1035                           	callstack 0
  1036   0000E2                     ___fldiv@a:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x2F
  1040   0000E2                     	ds	2
  1041   0000E4                     vfprintf@ap:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x31
  1045   0000E4                     	ds	2
  1046                           
  1047                           	psect	cstackCOMRAM
  1048   000001                     __pcstackCOMRAM:
  1049                           	callstack 0
  1050   000001                     i2Timer3_Write_Value@_timer:
  1051                           	callstack 0
  1052   000001                     i2CCP_Capture_Mode_Read_Value@_ccp_obj:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x0
  1056   000001                     	ds	2
  1057   000003                     i2Timer3_Write_Value@_value:
  1058                           	callstack 0
  1059   000003                     i2CCP_Capture_Mode_Read_Value@capture_value:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2
  1063   000003                     	ds	2
  1064   000005                     ??i2_CCP_Capture_Mode_Read_Value:
  1065                           
  1066                           ; 1 bytes @ 0x4
  1067   000005                     	ds	4
  1068   000009                     i2CCP_Capture_Mode_Read_Value@capture_temp_value:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x8
  1072   000009                     	ds	2
  1073   00000B                     ??i2_CCP1_Callback_ISR:
  1074                           
  1075                           ; 1 bytes @ 0xA
  1076   00000B                     	ds	4
  1077   00000F                     ??_InterruptManagerHigh:
  1078   00000F                     
  1079                           ; 1 bytes @ 0xE
  1080   00000F                     	ds	4
  1081   000013                     Timer3_Write_Value@_timer:
  1082                           	callstack 0
  1083   000013                     CCP_Capture_Mode_Read_Value@_ccp_obj:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x12
  1087   000013                     	ds	2
  1088   000015                     Timer3_Write_Value@_value:
  1089                           	callstack 0
  1090   000015                     CCP_Capture_Mode_Read_Value@capture_value:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x14
  1094   000015                     	ds	2
  1095   000017                     ??_CCP_Capture_Mode_Read_Value:
  1096                           
  1097                           ; 1 bytes @ 0x16
  1098   000017                     	ds	4
  1099   00001B                     CCP_Capture_Mode_Read_Value@capture_temp_value:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x1A
  1103   00001B                     	ds	2
  1104   00001D                     ??_CCP1_Callback_ISR:
  1105                           
  1106                           ; 1 bytes @ 0x1C
  1107   00001D                     	ds	4
  1108   000021                     ??_InterruptManagerLow:
  1109                           
  1110                           ; 1 bytes @ 0x20
  1111   000021                     	ds	7
  1112   000028                     ?___awdiv:
  1113                           	callstack 0
  1114   000028                     ?___awmod:
  1115                           	callstack 0
  1116   000028                     ?___lmul:
  1117                           	callstack 0
  1118   000028                     gpio_pin_direction_initialize@pin_config:
  1119                           	callstack 0
  1120   000028                     gpio_pin_write_logic@pin_config:
  1121                           	callstack 0
  1122   000028                     Timer2_Init@_timer:
  1123                           	callstack 0
  1124   000028                     Timer3_Mode_Select@_timer:
  1125                           	callstack 0
  1126   000028                     CCP_Capture_Compare_Timer_Config@_ccp_obj:
  1127                           	callstack 0
  1128   000028                     CCP1_Interrupt_Init@_ccp_obj:
  1129                           	callstack 0
  1130   000028                     CCP2_Interrupt_Init@_ccp_obj:
  1131                           	callstack 0
  1132   000028                     ___awdiv@dividend:
  1133                           	callstack 0
  1134   000028                     ___awmod@dividend:
  1135                           	callstack 0
  1136   000028                     memset@dest:
  1137                           	callstack 0
  1138   000028                     fputc@c:
  1139                           	callstack 0
  1140   000028                     ___lmul@multiplier:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x27
  1144   000028                     	ds	2
  1145   00002A                     ??_gpio_pin_direction_initialize:
  1146   00002A                     ??_Timer2_Init:
  1147   00002A                     gpio_pin_write_logic@logic:
  1148                           	callstack 0
  1149   00002A                     Timer3_Init@_timer:
  1150                           	callstack 0
  1151   00002A                     ___awdiv@divisor:
  1152                           	callstack 0
  1153   00002A                     ___awmod@divisor:
  1154                           	callstack 0
  1155   00002A                     memset@c:
  1156                           	callstack 0
  1157   00002A                     fputc@fp:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x29
  1161   00002A                     	ds	1
  1162   00002B                     ??_gpio_pin_write_logic:
  1163   00002B                     Timer2_Init@ret:
  1164                           	callstack 0
  1165   00002B                     CCP_Capture_Mode_Init@_ccp_obj:
  1166                           	callstack 0
  1167   00002B                     CCP_Interrupt_Init@_ccp_obj:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x2A
  1171   00002B                     	ds	1
  1172   00002C                     ??_fputc:
  1173   00002C                     ??_Timer3_Init:
  1174   00002C                     ___awdiv@counter:
  1175                           	callstack 0
  1176   00002C                     ___awmod@counter:
  1177                           	callstack 0
  1178   00002C                     memset@n:
  1179                           	callstack 0
  1180   00002C                     ___lmul@multiplicand:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x2B
  1184   00002C                     	ds	1
  1185   00002D                     ??_CCP_Capture_Mode_Init:
  1186   00002D                     ??_CCP_Interrupt_Init:
  1187   00002D                     ___awdiv@sign:
  1188                           	callstack 0
  1189   00002D                     ___awmod@sign:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x2C
  1193   00002D                     	ds	1
  1194   00002E                     ??_memset:
  1195   00002E                     ?_abs:
  1196                           	callstack 0
  1197   00002E                     Timer3_Init@ret:
  1198                           	callstack 0
  1199   00002E                     ___awdiv@quotient:
  1200                           	callstack 0
  1201   00002E                     abs@a:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x2D
  1205   00002E                     	ds	1
  1206   00002F                     CCP_Capture_Mode_Init@ret:
  1207                           	callstack 0
  1208   00002F                     CCP_Interrupt_Init@ret:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x2E
  1212   00002F                     	ds	1
  1213   000030                     ??_CCP_PWM_Mode_Init:
  1214   000030                     gpio_pin_direction_initialize@ret:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x2F
  1218   000030                     	ds	1
  1219   000031                     
  1220                           ; 1 bytes @ 0x30
  1221 ;;
  1222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1223 ;;
  1224 ;; *************** function _main *****************
  1225 ;; Defined at:
  1226 ;;		line 13 in file "application.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2  1197[None  ] int 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels required when called: 18
  1246 ;; This function calls:
  1247 ;;		_HeartRate_Calculate
  1248 ;;		_HeartRate_Display
  1249 ;;		_HeartRate_Measure_Init
  1250 ;;		_Welcome_Message
  1251 ;; This function is called by:
  1252 ;;		Startup code after reset
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text0
  1257   003DF0                     __ptext0:
  1258                           	callstack 0
  1259   003DF0                     _main:
  1260                           	callstack 13
  1261   003DF0                     
  1262                           ;application.c: 15:     HeartRate_Measure_Init();
  1263   003DF0  EC36  F020         	call	_HeartRate_Measure_Init	;wreg free
  1264   003DF4                     
  1265                           ;application.c: 16:     Welcome_Message();
  1266   003DF4  ECA7  F014         	call	_Welcome_Message	;wreg free
  1267   003DF8                     l10163:
  1268                           
  1269                           ;application.c: 18:     {;application.c: 19:         HeartRate_Calculate(4,8,&heart_rate
      +                          _bpm);
  1270   003DF8  0E04               	movlw	4
  1271   003DFA  0101               	movlb	1	; () banked
  1272   003DFC  6F59               	movwf	HeartRate_Calculate@XTAL_FREQ_MHZ& (0+255),b
  1273   003DFE  0E00               	movlw	0
  1274   003E00  6F5A               	movwf	(HeartRate_Calculate@XTAL_FREQ_MHZ+1)& (0+255),b
  1275   003E02  0E00               	movlw	0
  1276   003E04  6F5B               	movwf	(HeartRate_Calculate@XTAL_FREQ_MHZ+2)& (0+255),b
  1277   003E06  0E00               	movlw	0
  1278   003E08  6F5C               	movwf	(HeartRate_Calculate@XTAL_FREQ_MHZ+3)& (0+255),b
  1279   003E0A  0E08               	movlw	8
  1280   003E0C  6F5D               	movwf	HeartRate_Calculate@TimerPrescaler& (0+255),b
  1281   003E0E  0E55               	movlw	low _heart_rate_bpm
  1282   003E10  6F5E               	movwf	HeartRate_Calculate@HeartRate_BPM& (0+255),b
  1283   003E12  0E00               	movlw	high _heart_rate_bpm
  1284   003E14  6F5F               	movwf	(HeartRate_Calculate@HeartRate_BPM+1)& (0+255),b
  1285   003E16  ECE0  F011         	call	_HeartRate_Calculate	;wreg free
  1286   003E1A                     
  1287                           ;application.c: 20:         HeartRate_Display(heart_rate_bpm);
  1288   003E1A  5055               	movf	_heart_rate_bpm^0,w,c
  1289   003E1C  EC0E  F016         	call	_HeartRate_Display
  1290   003E20  EFFC  F01E         	goto	l10163
  1291   003E24  EF30  F001         	goto	start
  1292   003E28                     __end_of_main:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _Welcome_Message *****************
  1296 ;; Defined at:
  1297 ;;		line 13 in file "HeartRate_Measure.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;Total ram usage:        2 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 14
  1318 ;; This function calls:
  1319 ;;		_lcd_4bit_send_command
  1320 ;;		_lcd_4bit_send_custom_char
  1321 ;;		_lcd_4bit_send_string_pos
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text1
  1328   00294E                     __ptext1:
  1329                           	callstack 0
  1330   00294E                     _Welcome_Message:
  1331                           	callstack 16
  1332   00294E                     
  1333                           ;HeartRate_Measure.c: 15:     lcd_4bit_send_string_pos(&lcd1,1,1,"HeartRate Measurment")
      +                          ;
  1334   00294E  0EFA               	movlw	low _lcd1
  1335   002950  0100               	movlb	0	; () banked
  1336   002952  6FC2               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1337   002954  0E00               	movlw	high _lcd1
  1338   002956  6FC3               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1339   002958  0E01               	movlw	1
  1340   00295A  6FC4               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1341   00295C  0E01               	movlw	1
  1342   00295E  6FC5               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1343   002960  0E11               	movlw	low STR_4
  1344   002962  6FC6               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1345   002964  0E10               	movlw	high STR_4
  1346   002966  6FC7               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1347   002968  EC3A  F01D         	call	_lcd_4bit_send_string_pos	;wreg free
  1348   00296C                     
  1349                           ;HeartRate_Measure.c: 16:     _delay((unsigned long)((300)*(4000000UL/4000.0)));
  1350   00296C  0E02               	movlw	2
  1351   00296E  0100               	movlb	0	; () banked
  1352   002970  6FD1               	movwf	(??_Welcome_Message+1)& (0+255),b
  1353   002972  0E86               	movlw	134
  1354   002974  6FD0               	movwf	??_Welcome_Message& (0+255),b
  1355   002976  0E99               	movlw	153
  1356   002978                     u10417:
  1357   002978  2EE8               	decfsz	wreg,f,c
  1358   00297A  D7FE               	bra	u10417
  1359   00297C  2FD0               	decfsz	??_Welcome_Message& (0+255),f,b
  1360   00297E  D7FC               	bra	u10417
  1361   002980  2FD1               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1362   002982  D7FA               	bra	u10417
  1363   002984                     
  1364                           ;HeartRate_Measure.c: 17:     lcd_4bit_send_string_pos(&lcd1,2,1,"  Project Made by");
  1365   002984  0EFA               	movlw	low _lcd1
  1366   002986  0100               	movlb	0	; () banked
  1367   002988  6FC2               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1368   00298A  0E00               	movlw	high _lcd1
  1369   00298C  6FC3               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1370   00298E  0E02               	movlw	2
  1371   002990  6FC4               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1372   002992  0E01               	movlw	1
  1373   002994  6FC5               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1374   002996  0E26               	movlw	low STR_5
  1375   002998  6FC6               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1376   00299A  0E10               	movlw	high STR_5
  1377   00299C  6FC7               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1378   00299E  EC3A  F01D         	call	_lcd_4bit_send_string_pos	;wreg free
  1379                           
  1380                           ;HeartRate_Measure.c: 18:     _delay((unsigned long)((300)*(4000000UL/4000.0)));
  1381   0029A2  0E02               	movlw	2
  1382   0029A4  0100               	movlb	0	; () banked
  1383   0029A6  6FD1               	movwf	(??_Welcome_Message+1)& (0+255),b
  1384   0029A8  0E86               	movlw	134
  1385   0029AA  6FD0               	movwf	??_Welcome_Message& (0+255),b
  1386   0029AC  0E99               	movlw	153
  1387   0029AE                     u10427:
  1388   0029AE  2EE8               	decfsz	wreg,f,c
  1389   0029B0  D7FE               	bra	u10427
  1390   0029B2  2FD0               	decfsz	??_Welcome_Message& (0+255),f,b
  1391   0029B4  D7FC               	bra	u10427
  1392   0029B6  2FD1               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1393   0029B8  D7FA               	bra	u10427
  1394   0029BA                     
  1395                           ;HeartRate_Measure.c: 19:     lcd_4bit_send_string_pos(&lcd1,3,1,"   Mohamed Osama");
  1396   0029BA  0EFA               	movlw	low _lcd1
  1397   0029BC  0100               	movlb	0	; () banked
  1398   0029BE  6FC2               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1399   0029C0  0E00               	movlw	high _lcd1
  1400   0029C2  6FC3               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1401   0029C4  0E03               	movlw	3
  1402   0029C6  6FC4               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1403   0029C8  0E01               	movlw	1
  1404   0029CA  6FC5               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1405   0029CC  0E38               	movlw	low STR_6
  1406   0029CE  6FC6               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1407   0029D0  0E10               	movlw	high STR_6
  1408   0029D2  6FC7               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1409   0029D4  EC3A  F01D         	call	_lcd_4bit_send_string_pos	;wreg free
  1410   0029D8                     
  1411                           ;HeartRate_Measure.c: 20:     _delay((unsigned long)((300)*(4000000UL/4000.0)));
  1412   0029D8  0E02               	movlw	2
  1413   0029DA  0100               	movlb	0	; () banked
  1414   0029DC  6FD1               	movwf	(??_Welcome_Message+1)& (0+255),b
  1415   0029DE  0E86               	movlw	134
  1416   0029E0  6FD0               	movwf	??_Welcome_Message& (0+255),b
  1417   0029E2  0E99               	movlw	153
  1418   0029E4                     u10437:
  1419   0029E4  2EE8               	decfsz	wreg,f,c
  1420   0029E6  D7FE               	bra	u10437
  1421   0029E8  2FD0               	decfsz	??_Welcome_Message& (0+255),f,b
  1422   0029EA  D7FC               	bra	u10437
  1423   0029EC  2FD1               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1424   0029EE  D7FA               	bra	u10437
  1425   0029F0                     
  1426                           ;HeartRate_Measure.c: 21:     lcd_4bit_send_custom_char(&lcd1,4,10,Hollow_Heart_Custom_C
      +                          har,0);
  1427   0029F0  0EFA               	movlw	low _lcd1
  1428   0029F2  0100               	movlb	0	; () banked
  1429   0029F4  6FC8               	movwf	lcd_4bit_send_custom_char@lcd& (0+255),b
  1430   0029F6  0E00               	movlw	high _lcd1
  1431   0029F8  6FC9               	movwf	(lcd_4bit_send_custom_char@lcd+1)& (0+255),b
  1432   0029FA  0E04               	movlw	4
  1433   0029FC  6FCA               	movwf	lcd_4bit_send_custom_char@row& (0+255),b
  1434   0029FE  0E0A               	movlw	10
  1435   002A00  6FCB               	movwf	lcd_4bit_send_custom_char@column& (0+255),b
  1436   002A02  0E6F               	movlw	low _Hollow_Heart_Custom_Char
  1437   002A04  6FCC               	movwf	lcd_4bit_send_custom_char@_chr& (0+255),b
  1438   002A06  0E01               	movlw	high _Hollow_Heart_Custom_Char
  1439   002A08  6FCD               	movwf	(lcd_4bit_send_custom_char@_chr+1)& (0+255),b
  1440   002A0A  0E00               	movlw	0
  1441   002A0C  6FCE               	movwf	lcd_4bit_send_custom_char@mem_pos& (0+255),b
  1442   002A0E  EC8F  F01A         	call	_lcd_4bit_send_custom_char	;wreg free
  1443   002A12                     
  1444                           ;HeartRate_Measure.c: 22:     _delay((unsigned long)((1300)*(4000000UL/4000.0)));
  1445   002A12  0E07               	movlw	7
  1446   002A14  0100               	movlb	0	; () banked
  1447   002A16  6FD1               	movwf	(??_Welcome_Message+1)& (0+255),b
  1448   002A18  0E99               	movlw	153
  1449   002A1A  6FD0               	movwf	??_Welcome_Message& (0+255),b
  1450   002A1C  0E49               	movlw	73
  1451   002A1E                     u10447:
  1452   002A1E  2EE8               	decfsz	wreg,f,c
  1453   002A20  D7FE               	bra	u10447
  1454   002A22  2FD0               	decfsz	??_Welcome_Message& (0+255),f,b
  1455   002A24  D7FC               	bra	u10447
  1456   002A26  2FD1               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1457   002A28  D7FA               	bra	u10447
  1458   002A2A                     
  1459                           ;HeartRate_Measure.c: 23:     lcd_4bit_send_command(&lcd1,0X01);
  1460   002A2A  0EFA               	movlw	low _lcd1
  1461   002A2C  0100               	movlb	0	; () banked
  1462   002A2E  6FB8               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  1463   002A30  0E00               	movlw	high _lcd1
  1464   002A32  6FB9               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  1465   002A34  0E01               	movlw	1
  1466   002A36  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  1467   002A38  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  1468   002A3C  0012               	return		;funcret
  1469   002A3E                     __end_of_Welcome_Message:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _HeartRate_Measure_Init *****************
  1473 ;; Defined at:
  1474 ;;		line 25 in file "HeartRate_Measure.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 13
  1495 ;; This function calls:
  1496 ;;		_ecu_layer_initialize
  1497 ;;		_mcal_layer_initialize
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text2
  1504   00406C                     __ptext2:
  1505                           	callstack 0
  1506   00406C                     _HeartRate_Measure_Init:
  1507                           	callstack 17
  1508   00406C                     
  1509                           ;HeartRate_Measure.c: 27:     mcal_layer_initialize();
  1510   00406C  EC06  F020         	call	_mcal_layer_initialize	;wreg free
  1511                           
  1512                           ;HeartRate_Measure.c: 28:      ecu_layer_initialize();
  1513   004070  EC0F  F020         	call	_ecu_layer_initialize	;wreg free
  1514   004074  0012               	return		;funcret
  1515   004076                     __end_of_HeartRate_Measure_Init:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _mcal_layer_initialize *****************
  1519 ;; Defined at:
  1520 ;;		line 2 in file "MCAL_Layer/mcal_layer_init.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 12
  1541 ;; This function calls:
  1542 ;;		_CCP1_Capture_Mode_Init
  1543 ;;		_CCP2_PWM_200KHZ_INIT
  1544 ;;		_Timer2_Timer_Init
  1545 ;;		_Timer3_Timer_Init
  1546 ;; This function is called by:
  1547 ;;		_HeartRate_Measure_Init
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text3
  1552   00400C                     __ptext3:
  1553                           	callstack 0
  1554   00400C                     _mcal_layer_initialize:
  1555                           	callstack 17
  1556   00400C                     
  1557                           ;MCAL_Layer/mcal_layer_init.c: 4:     Timer2_Timer_Init();
  1558   00400C  ECBB  F01F         	call	_Timer2_Timer_Init	;wreg free
  1559                           
  1560                           ;MCAL_Layer/mcal_layer_init.c: 5:     Timer3_Timer_Init();
  1561   004010  ECA6  F01F         	call	_Timer3_Timer_Init	;wreg free
  1562   004014                     
  1563                           ;MCAL_Layer/mcal_layer_init.c: 6:     CCP2_PWM_200KHZ_INIT();
  1564   004014  EC98  F01E         	call	_CCP2_PWM_200KHZ_INIT	;wreg free
  1565   004018                     
  1566                           ;MCAL_Layer/mcal_layer_init.c: 7:     CCP1_Capture_Mode_Init();
  1567   004018  ECDB  F01E         	call	_CCP1_Capture_Mode_Init	;wreg free
  1568   00401C  0012               	return		;funcret
  1569   00401E                     __end_of_mcal_layer_initialize:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _Timer3_Timer_Init *****************
  1573 ;; Defined at:
  1574 ;;		line 39 in file "MCAL_Layer/mcal_layer_init.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 10
  1595 ;; This function calls:
  1596 ;;		_Timer3_Init
  1597 ;; This function is called by:
  1598 ;;		_mcal_layer_initialize
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text4
  1603   003F4C                     __ptext4:
  1604                           	callstack 0
  1605   003F4C                     _Timer3_Timer_Init:
  1606                           	callstack 18
  1607   003F4C                     
  1608                           ;MCAL_Layer/mcal_layer_init.c: 40:     timer3_obj.timer3_preload_value = 0;
  1609   003F4C  0E00               	movlw	0
  1610   003F4E  0100               	movlb	0	; () banked
  1611   003F50  6FAB               	movwf	(_timer3_obj+4)& (0+255),b
  1612   003F52  0E00               	movlw	0
  1613   003F54  6FAA               	movwf	(_timer3_obj+3)& (0+255),b
  1614   003F56                     
  1615                           ; BSR set to: 0
  1616                           ;MCAL_Layer/mcal_layer_init.c: 41:     timer3_obj.timer3_mode = 0;
  1617   003F56  95AC               	bcf	(_timer3_obj+5)& (0+255),2,b
  1618   003F58                     
  1619                           ; BSR set to: 0
  1620                           ;MCAL_Layer/mcal_layer_init.c: 42:     timer3_obj.timer3_reg_wr_mode = 0U;
  1621   003F58  99AC               	bcf	(_timer3_obj+5)& (0+255),4,b
  1622                           
  1623                           ;MCAL_Layer/mcal_layer_init.c: 43:     timer3_obj.prescaler_value = 3U;
  1624   003F5A  0E03               	movlw	3
  1625   003F5C  13AC               	iorwf	(_timer3_obj+5)& (0+255),f,b
  1626   003F5E                     
  1627                           ; BSR set to: 0
  1628                           ;MCAL_Layer/mcal_layer_init.c: 44:     timer3_obj.TMR3_InterruptHandler = TMR3_Callback_
      +                          ISR;
  1629   003F5E  0E2E               	movlw	low _TMR3_Callback_ISR
  1630   003F60  6FA7               	movwf	_timer3_obj& (0+255),b
  1631   003F62  0E40               	movlw	high _TMR3_Callback_ISR
  1632   003F64  6FA8               	movwf	(_timer3_obj+1)& (0+255),b
  1633   003F66                     
  1634                           ; BSR set to: 0
  1635                           ;MCAL_Layer/mcal_layer_init.c: 45:     ret=Timer3_Init(&timer3_obj);
  1636   003F66  0EA7               	movlw	low _timer3_obj
  1637   003F68  6E2A               	movwf	Timer3_Init@_timer^0,c
  1638   003F6A  0E00               	movlw	high _timer3_obj
  1639   003F6C  6E2B               	movwf	(Timer3_Init@_timer+1)^0,c
  1640   003F6E  EC97  F015         	call	_Timer3_Init	;wreg free
  1641   003F72  6E56               	movwf	_ret^0,c
  1642   003F74  0012               	return		;funcret
  1643   003F76                     __end_of_Timer3_Timer_Init:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _Timer3_Init *****************
  1647 ;; Defined at:
  1648 ;;		line 12 in file "MCAL_Layer/Timer3/hal_timer3.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  _timer          2   41[COMRAM] PTR const struct .
  1651 ;;		 -> timer3_obj(6), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  ret             1   45[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      unsigned char 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        5 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 9
  1670 ;; This function calls:
  1671 ;;		_Timer3_Mode_Select
  1672 ;; This function is called by:
  1673 ;;		_Timer3_Timer_Init
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text5
  1678   002B2E                     __ptext5:
  1679                           	callstack 0
  1680   002B2E                     _Timer3_Init:
  1681                           	callstack 18
  1682   002B2E                     
  1683                           ;MCAL_Layer/Timer3/hal_timer3.c: 12: Std_ReturnType Timer3_Init(const timer3_t *_timer);
      +                          MCAL_Layer/Timer3/hal_timer3.c: 13: {;MCAL_Layer/Timer3/hal_timer3.c: 14:      Std_Retur
      +                          nType ret=(Std_ReturnType)0x01;
  1684   002B2E  0E01               	movlw	1
  1685   002B30  6E2E               	movwf	Timer3_Init@ret^0,c
  1686   002B32                     
  1687                           ;MCAL_Layer/Timer3/hal_timer3.c: 15:     if(_timer==((void*)0)){
  1688   002B32  502A               	movf	Timer3_Init@_timer^0,w,c
  1689   002B34  102B               	iorwf	(Timer3_Init@_timer+1)^0,w,c
  1690   002B36  A4D8               	btfss	status,2,c
  1691   002B38  EFA0  F015         	goto	u5421
  1692   002B3C  EFA2  F015         	goto	u5420
  1693   002B40                     u5421:
  1694   002B40  EFA6  F015         	goto	l1135
  1695   002B44                     u5420:
  1696   002B44                     
  1697                           ;MCAL_Layer/Timer3/hal_timer3.c: 16:         ret=(Std_ReturnType)0x00;
  1698   002B44  0E00               	movlw	0
  1699   002B46  6E2E               	movwf	Timer3_Init@ret^0,c
  1700                           
  1701                           ;MCAL_Layer/Timer3/hal_timer3.c: 17:     }
  1702   002B48  EF0C  F016         	goto	l6287
  1703   002B4C                     l1135:
  1704                           
  1705                           ;MCAL_Layer/Timer3/hal_timer3.c: 19:     {;MCAL_Layer/Timer3/hal_timer3.c: 20:         (
      +                          (*((volatile T3CON_t *)(0xFB1))).TMR3ON = 0);
  1706   002B4C  90B1               	bcf	177,0,c	;volatile
  1707   002B4E                     
  1708                           ;MCAL_Layer/Timer3/hal_timer3.c: 21:         ((*((volatile T3CON_t *)(0xFB1))).T3CKPS = 
      +                          _timer->prescaler_value);
  1709   002B4E  EE20 F005          	lfsr	2,5
  1710   002B52  502A               	movf	Timer3_Init@_timer^0,w,c
  1711   002B54  26D9               	addwf	fsr2l,f,c
  1712   002B56  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1713   002B58  22DA               	addwfc	fsr2h,f,c
  1714   002B5A  50DF               	movf	223,w,c
  1715   002B5C  0B03               	andlw	3
  1716   002B5E  6E2C               	movwf	??_Timer3_Init^0,c
  1717   002B60  3A2C               	swapf	??_Timer3_Init^0,f,c
  1718   002B62  50B1               	movf	177,w,c	;volatile
  1719   002B64  182C               	xorwf	??_Timer3_Init^0,w,c
  1720   002B66  0BCF               	andlw	-49
  1721   002B68  182C               	xorwf	??_Timer3_Init^0,w,c
  1722   002B6A  6EB1               	movwf	177,c	;volatile
  1723   002B6C                     
  1724                           ;MCAL_Layer/Timer3/hal_timer3.c: 22:         Timer3_Mode_Select(_timer);
  1725   002B6C  C02A  F028         	movff	Timer3_Init@_timer,Timer3_Mode_Select@_timer
  1726   002B70  C02B  F029         	movff	Timer3_Init@_timer+1,Timer3_Mode_Select@_timer+1
  1727   002B74  EC10  F01B         	call	_Timer3_Mode_Select	;wreg free
  1728   002B78                     
  1729                           ;MCAL_Layer/Timer3/hal_timer3.c: 23:         (*((volatile uint8 *)(0xFB3))) = (_timer->t
      +                          imer3_preload_value) >> 8 ;
  1730   002B78  EE20 F003          	lfsr	2,3
  1731   002B7C  502A               	movf	Timer3_Init@_timer^0,w,c
  1732   002B7E  26D9               	addwf	fsr2l,f,c
  1733   002B80  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1734   002B82  22DA               	addwfc	fsr2h,f,c
  1735   002B84  CFDE F02C          	movff	postinc2,??_Timer3_Init
  1736   002B88  CFDD F02D          	movff	postdec2,??_Timer3_Init+1
  1737   002B8C  C02D  F02C         	movff	??_Timer3_Init+1,??_Timer3_Init
  1738   002B90  6A2D               	clrf	(??_Timer3_Init+1)^0,c
  1739   002B92  502C               	movf	??_Timer3_Init^0,w,c
  1740   002B94  6EB3               	movwf	179,c	;volatile
  1741   002B96                     
  1742                           ;MCAL_Layer/Timer3/hal_timer3.c: 24:         (*((volatile uint8 *)(0xFB2))) = (uint8)(_t
      +                          imer->timer3_preload_value);
  1743   002B96  EE20 F003          	lfsr	2,3
  1744   002B9A  502A               	movf	Timer3_Init@_timer^0,w,c
  1745   002B9C  26D9               	addwf	fsr2l,f,c
  1746   002B9E  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1747   002BA0  22DA               	addwfc	fsr2h,f,c
  1748   002BA2  50DF               	movf	indf2,w,c
  1749   002BA4  6EB2               	movwf	178,c	;volatile
  1750   002BA6                     
  1751                           ;MCAL_Layer/Timer3/hal_timer3.c: 25:         timer3_preload = _timer->timer3_preload_val
      +                          ue;
  1752   002BA6  EE20 F003          	lfsr	2,3
  1753   002BAA  502A               	movf	Timer3_Init@_timer^0,w,c
  1754   002BAC  26D9               	addwf	fsr2l,f,c
  1755   002BAE  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1756   002BB0  22DA               	addwfc	fsr2h,f,c
  1757   002BB2  CFDE F035          	movff	postinc2,_timer3_preload
  1758   002BB6  CFDD F036          	movff	postdec2,_timer3_preload+1
  1759   002BBA                     
  1760                           ;MCAL_Layer/Timer3/hal_timer3.c: 28:         ((*((volatile PIE2_t *)(0xFA0))).TMR3IE=1);
  1761   002BBA  82A0               	bsf	160,1,c	;volatile
  1762   002BBC                     
  1763                           ;MCAL_Layer/Timer3/hal_timer3.c: 29:         ((*((volatile PIR2_t *)(0xFA1))).TMR3IF=0);
  1764   002BBC  92A1               	bcf	161,1,c	;volatile
  1765   002BBE                     
  1766                           ;MCAL_Layer/Timer3/hal_timer3.c: 30:         TMR3_InterruptHandler = _timer->TMR3_Interr
      +                          uptHandler;
  1767   002BBE  C02A  FFD9         	movff	Timer3_Init@_timer,fsr2l
  1768   002BC2  C02B  FFDA         	movff	Timer3_Init@_timer+1,fsr2h
  1769   002BC6  CFDE F037          	movff	postinc2,_TMR3_InterruptHandler
  1770   002BCA  CFDD F038          	movff	postdec2,_TMR3_InterruptHandler+1
  1771   002BCE                     
  1772                           ;MCAL_Layer/Timer3/hal_timer3.c: 37:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1
      +                          );
  1773   002BCE  8ED0               	bsf	208,7,c	;volatile
  1774   002BD0                     
  1775                           ;MCAL_Layer/Timer3/hal_timer3.c: 38:             if(_timer->priority == INTERRUPT_HIGH_P
      +                          RIORITY){
  1776   002BD0  EE20 F002          	lfsr	2,2
  1777   002BD4  502A               	movf	Timer3_Init@_timer^0,w,c
  1778   002BD6  26D9               	addwf	fsr2l,f,c
  1779   002BD8  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1780   002BDA  22DA               	addwfc	fsr2h,f,c
  1781   002BDC  04DE               	decf	postinc2,w,c
  1782   002BDE  A4D8               	btfss	status,2,c
  1783   002BE0  EFF4  F015         	goto	u5431
  1784   002BE4  EFF6  F015         	goto	u5430
  1785   002BE8                     u5431:
  1786   002BE8  EFFA  F015         	goto	l6283
  1787   002BEC                     u5430:
  1788   002BEC                     
  1789                           ;MCAL_Layer/Timer3/hal_timer3.c: 39:                 ((*((volatile IPR2_t *)(0xFA2))).TM
      +                          R3IP=1);
  1790   002BEC  82A2               	bsf	162,1,c	;volatile
  1791                           
  1792                           ;MCAL_Layer/Timer3/hal_timer3.c: 40:                 ((*((volatile INTCON_t *)(0xFF2))).
      +                          GIEH = 1);
  1793   002BEE  8EF2               	bsf	242,7,c	;volatile
  1794                           
  1795                           ;MCAL_Layer/Timer3/hal_timer3.c: 41:             }
  1796   002BF0  EF0B  F016         	goto	l1138
  1797   002BF4                     l6283:
  1798   002BF4  EE20 F002          	lfsr	2,2
  1799   002BF8  502A               	movf	Timer3_Init@_timer^0,w,c
  1800   002BFA  26D9               	addwf	fsr2l,f,c
  1801   002BFC  502B               	movf	(Timer3_Init@_timer+1)^0,w,c
  1802   002BFE  22DA               	addwfc	fsr2h,f,c
  1803   002C00  50DF               	movf	indf2,w,c
  1804   002C02  A4D8               	btfss	status,2,c
  1805   002C04  EF06  F016         	goto	u5441
  1806   002C08  EF08  F016         	goto	u5440
  1807   002C0C                     u5441:
  1808   002C0C  EF0B  F016         	goto	l1138
  1809   002C10                     u5440:
  1810   002C10                     
  1811                           ;MCAL_Layer/Timer3/hal_timer3.c: 43:             {;MCAL_Layer/Timer3/hal_timer3.c: 44:  
      +                                      ((*((volatile IPR2_t *)(0xFA2))).TMR3IP=0);
  1812   002C10  92A2               	bcf	162,1,c	;volatile
  1813                           
  1814                           ;MCAL_Layer/Timer3/hal_timer3.c: 45:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          H = 1);
  1815   002C12  8EF2               	bsf	242,7,c	;volatile
  1816                           
  1817                           ;MCAL_Layer/Timer3/hal_timer3.c: 46:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          L = 1);
  1818   002C14  8CF2               	bsf	242,6,c	;volatile
  1819   002C16                     l1138:
  1820                           
  1821                           ;MCAL_Layer/Timer3/hal_timer3.c: 50:         ((*((volatile T3CON_t *)(0xFB1))).TMR3ON = 
      +                          1);
  1822   002C16  80B1               	bsf	177,0,c	;volatile
  1823   002C18                     l6287:
  1824                           
  1825                           ;MCAL_Layer/Timer3/hal_timer3.c: 52:     return ret;
  1826   002C18  502E               	movf	Timer3_Init@ret^0,w,c
  1827   002C1A  0012               	return		;funcret
  1828   002C1C                     __end_of_Timer3_Init:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _Timer3_Mode_Select *****************
  1832 ;; Defined at:
  1833 ;;		line 119 in file "MCAL_Layer/Timer3/hal_timer3.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  _timer          2   39[COMRAM] PTR const struct .
  1836 ;;		 -> timer3_obj(6), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 8
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_Timer3_Init
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text6
  1863   003620                     __ptext6:
  1864                           	callstack 0
  1865   003620                     _Timer3_Mode_Select:
  1866                           	callstack 18
  1867   003620                     
  1868                           ;MCAL_Layer/Timer3/hal_timer3.c: 120:    if (0 == _timer->timer3_mode){
  1869   003620  EE20 F005          	lfsr	2,5
  1870   003624  5028               	movf	Timer3_Mode_Select@_timer^0,w,c
  1871   003626  26D9               	addwf	fsr2l,f,c
  1872   003628  5029               	movf	(Timer3_Mode_Select@_timer+1)^0,w,c
  1873   00362A  22DA               	addwfc	fsr2h,f,c
  1874   00362C  B4DF               	btfsc	indf2,2,c
  1875   00362E  EF1B  F01B         	goto	u5221
  1876   003632  EF1D  F01B         	goto	u5220
  1877   003636                     u5221:
  1878   003636  EF20  F01B         	goto	l6053
  1879   00363A                     u5220:
  1880   00363A                     
  1881                           ;MCAL_Layer/Timer3/hal_timer3.c: 121:         ((*((volatile T3CON_t *)(0xFB1))).TMR3CS =
      +                           0);
  1882   00363A  92B1               	bcf	177,1,c	;volatile
  1883                           
  1884                           ;MCAL_Layer/Timer3/hal_timer3.c: 122:     }
  1885   00363C  EF4E  F01B         	goto	l1168
  1886   003640                     l6053:
  1887   003640  EE20 F005          	lfsr	2,5
  1888   003644  5028               	movf	Timer3_Mode_Select@_timer^0,w,c
  1889   003646  26D9               	addwf	fsr2l,f,c
  1890   003648  5029               	movf	(Timer3_Mode_Select@_timer+1)^0,w,c
  1891   00364A  22DA               	addwfc	fsr2h,f,c
  1892   00364C  A4DF               	btfss	indf2,2,c
  1893   00364E  EF2B  F01B         	goto	u5231
  1894   003652  EF2D  F01B         	goto	u5230
  1895   003656                     u5231:
  1896   003656  EF4E  F01B         	goto	l1168
  1897   00365A                     u5230:
  1898   00365A                     
  1899                           ;MCAL_Layer/Timer3/hal_timer3.c: 124:         ((*((volatile T3CON_t *)(0xFB1))).TMR3CS =
      +                           1);
  1900   00365A  82B1               	bsf	177,1,c	;volatile
  1901   00365C                     
  1902                           ;MCAL_Layer/Timer3/hal_timer3.c: 125:             if (0 == _timer->timer3_counter_mode)
  1903   00365C  EE20 F005          	lfsr	2,5
  1904   003660  5028               	movf	Timer3_Mode_Select@_timer^0,w,c
  1905   003662  26D9               	addwf	fsr2l,f,c
  1906   003664  5029               	movf	(Timer3_Mode_Select@_timer+1)^0,w,c
  1907   003666  22DA               	addwfc	fsr2h,f,c
  1908   003668  B6DF               	btfsc	indf2,3,c
  1909   00366A  EF39  F01B         	goto	u5241
  1910   00366E  EF3B  F01B         	goto	u5240
  1911   003672                     u5241:
  1912   003672  EF3E  F01B         	goto	l6061
  1913   003676                     u5240:
  1914   003676                     
  1915                           ;MCAL_Layer/Timer3/hal_timer3.c: 126:             {;MCAL_Layer/Timer3/hal_timer3.c: 127:
      +                                          ((*((volatile T3CON_t *)(0xFB1))).T3SYNC = 0);
  1916   003676  94B1               	bcf	177,2,c	;volatile
  1917                           
  1918                           ;MCAL_Layer/Timer3/hal_timer3.c: 128:             }
  1919   003678  EF4E  F01B         	goto	l1168
  1920   00367C                     l6061:
  1921   00367C  EE20 F005          	lfsr	2,5
  1922   003680  5028               	movf	Timer3_Mode_Select@_timer^0,w,c
  1923   003682  26D9               	addwf	fsr2l,f,c
  1924   003684  5029               	movf	(Timer3_Mode_Select@_timer+1)^0,w,c
  1925   003686  22DA               	addwfc	fsr2h,f,c
  1926   003688  A6DF               	btfss	indf2,3,c
  1927   00368A  EF49  F01B         	goto	u5251
  1928   00368E  EF4B  F01B         	goto	u5250
  1929   003692                     u5251:
  1930   003692  EF4E  F01B         	goto	l1167
  1931   003696                     u5250:
  1932   003696                     
  1933                           ;MCAL_Layer/Timer3/hal_timer3.c: 130:             {;MCAL_Layer/Timer3/hal_timer3.c: 131:
      +                                          ((*((volatile T3CON_t *)(0xFB1))).T3SYNC = 1);
  1934   003696  84B1               	bsf	177,2,c	;volatile
  1935                           
  1936                           ;MCAL_Layer/Timer3/hal_timer3.c: 132:             }
  1937   003698  EF4E  F01B         	goto	l1168
  1938   00369C                     l1167:
  1939   00369C                     l1168:
  1940   00369C  0012               	return		;funcret
  1941   00369E                     __end_of_Timer3_Mode_Select:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _Timer2_Timer_Init *****************
  1945 ;; Defined at:
  1946 ;;		line 9 in file "MCAL_Layer/mcal_layer_init.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 9
  1967 ;; This function calls:
  1968 ;;		_Timer2_Init
  1969 ;; This function is called by:
  1970 ;;		_mcal_layer_initialize
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975   003F76                     __ptext7:
  1976                           	callstack 0
  1977   003F76                     _Timer2_Timer_Init:
  1978                           	callstack 19
  1979   003F76                     
  1980                           ;MCAL_Layer/mcal_layer_init.c: 10:     timer2_obj.timer2_preload_value = 0;
  1981   003F76  0E00               	movlw	0
  1982   003F78  0100               	movlb	0	; () banked
  1983   003F7A  6FB1               	movwf	_timer2_obj& (0+255),b
  1984                           
  1985                           ;MCAL_Layer/mcal_layer_init.c: 11:     timer2_obj.postscaler_value =1U;
  1986   003F7C  51B2               	movf	(_timer2_obj+1)& (0+255),w,b
  1987   003F7E  0BC3               	andlw	-61
  1988   003F80  0904               	iorlw	4
  1989   003F82  6FB2               	movwf	(_timer2_obj+1)& (0+255),b
  1990                           
  1991                           ;MCAL_Layer/mcal_layer_init.c: 12:     timer2_obj.prescaler_value = 0U;
  1992   003F84  0EFC               	movlw	-4
  1993   003F86  17B2               	andwf	(_timer2_obj+1)& (0+255),f,b
  1994   003F88                     
  1995                           ; BSR set to: 0
  1996                           ;MCAL_Layer/mcal_layer_init.c: 13:     ret=Timer2_Init(&timer2_obj);
  1997   003F88  0EB1               	movlw	low _timer2_obj
  1998   003F8A  6E28               	movwf	Timer2_Init@_timer^0,c
  1999   003F8C  0E00               	movlw	high _timer2_obj
  2000   003F8E  6E29               	movwf	(Timer2_Init@_timer+1)^0,c
  2001   003F90  EC4F  F01B         	call	_Timer2_Init	;wreg free
  2002   003F94  6E56               	movwf	_ret^0,c
  2003   003F96  0012               	return		;funcret
  2004   003F98                     __end_of_Timer2_Timer_Init:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _Timer2_Init *****************
  2008 ;; Defined at:
  2009 ;;		line 13 in file "MCAL_Layer/Timer2/hal_timer2.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  _timer          2   39[COMRAM] PTR const struct .
  2012 ;;		 -> timer2_obj(2), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  ret             1   42[COMRAM] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      unsigned char 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        4 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 8
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_Timer2_Timer_Init
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text8
  2039   00369E                     __ptext8:
  2040                           	callstack 0
  2041   00369E                     _Timer2_Init:
  2042                           	callstack 19
  2043   00369E                     
  2044                           ;MCAL_Layer/Timer2/hal_timer2.c: 13: Std_ReturnType Timer2_Init(const timer2_t *_timer);
      +                          MCAL_Layer/Timer2/hal_timer2.c: 14: {;MCAL_Layer/Timer2/hal_timer2.c: 15:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  2045   00369E  0E01               	movlw	1
  2046   0036A0  6E2B               	movwf	Timer2_Init@ret^0,c
  2047   0036A2                     
  2048                           ;MCAL_Layer/Timer2/hal_timer2.c: 16:     if(_timer==((void*)0)){
  2049   0036A2  5028               	movf	Timer2_Init@_timer^0,w,c
  2050   0036A4  1029               	iorwf	(Timer2_Init@_timer+1)^0,w,c
  2051   0036A6  A4D8               	btfss	status,2,c
  2052   0036A8  EF58  F01B         	goto	u5411
  2053   0036AC  EF5A  F01B         	goto	u5410
  2054   0036B0                     u5411:
  2055   0036B0  EF5E  F01B         	goto	l1104
  2056   0036B4                     u5410:
  2057   0036B4                     
  2058                           ;MCAL_Layer/Timer2/hal_timer2.c: 17:         ret=(Std_ReturnType)0x00;
  2059   0036B4  0E00               	movlw	0
  2060   0036B6  6E2B               	movwf	Timer2_Init@ret^0,c
  2061                           
  2062                           ;MCAL_Layer/Timer2/hal_timer2.c: 18:     }
  2063   0036B8  EF8C  F01B         	goto	l6251
  2064   0036BC                     l1104:
  2065                           
  2066                           ;MCAL_Layer/Timer2/hal_timer2.c: 20:     {;MCAL_Layer/Timer2/hal_timer2.c: 21:         (
      +                          (*((volatile T2CON_t *)(0xFCA))).TMR2ON = 0);
  2067   0036BC  94CA               	bcf	202,2,c	;volatile
  2068   0036BE                     
  2069                           ;MCAL_Layer/Timer2/hal_timer2.c: 22:         ((*((volatile T2CON_t *)(0xFCA))).T2OUTPS =
      +                           _timer->postscaler_value);
  2070   0036BE  EE20 F001          	lfsr	2,1
  2071   0036C2  5028               	movf	Timer2_Init@_timer^0,w,c
  2072   0036C4  26D9               	addwf	fsr2l,f,c
  2073   0036C6  5029               	movf	(Timer2_Init@_timer+1)^0,w,c
  2074   0036C8  22DA               	addwfc	fsr2h,f,c
  2075   0036CA  30DF               	rrcf	223,w,c
  2076   0036CC  32E8               	rrcf	wreg,f,c
  2077   0036CE  0B0F               	andlw	15
  2078   0036D0  6E2A               	movwf	??_Timer2_Init^0,c
  2079   0036D2  462A               	rlncf	??_Timer2_Init^0,f,c
  2080   0036D4  462A               	rlncf	??_Timer2_Init^0,f,c
  2081   0036D6  462A               	rlncf	??_Timer2_Init^0,f,c
  2082   0036D8  50CA               	movf	202,w,c	;volatile
  2083   0036DA  182A               	xorwf	??_Timer2_Init^0,w,c
  2084   0036DC  0B87               	andlw	-121
  2085   0036DE  182A               	xorwf	??_Timer2_Init^0,w,c
  2086   0036E0  6ECA               	movwf	202,c	;volatile
  2087                           
  2088                           ;MCAL_Layer/Timer2/hal_timer2.c: 23:         ((*((volatile T2CON_t *)(0xFCA))).T2CKPS = 
      +                          _timer->prescaler_value);
  2089   0036E2  EE20 F001          	lfsr	2,1
  2090   0036E6  5028               	movf	Timer2_Init@_timer^0,w,c
  2091   0036E8  26D9               	addwf	fsr2l,f,c
  2092   0036EA  5029               	movf	(Timer2_Init@_timer+1)^0,w,c
  2093   0036EC  22DA               	addwfc	fsr2h,f,c
  2094   0036EE  50DF               	movf	223,w,c
  2095   0036F0  0B03               	andlw	3
  2096   0036F2  6E2A               	movwf	??_Timer2_Init^0,c
  2097   0036F4  50CA               	movf	202,w,c	;volatile
  2098   0036F6  182A               	xorwf	??_Timer2_Init^0,w,c
  2099   0036F8  0BFC               	andlw	-4
  2100   0036FA  182A               	xorwf	??_Timer2_Init^0,w,c
  2101   0036FC  6ECA               	movwf	202,c	;volatile
  2102   0036FE                     
  2103                           ;MCAL_Layer/Timer2/hal_timer2.c: 24:         (*((volatile uint8 *)(0xFCC))) = _timer->ti
      +                          mer2_preload_value;
  2104   0036FE  C028  FFD9         	movff	Timer2_Init@_timer,fsr2l
  2105   003702  C029  FFDA         	movff	Timer2_Init@_timer+1,fsr2h
  2106   003706  50DF               	movf	indf2,w,c
  2107   003708  6ECC               	movwf	204,c	;volatile
  2108   00370A                     
  2109                           ;MCAL_Layer/Timer2/hal_timer2.c: 25:         timer2_preload = _timer->timer2_preload_val
      +                          ue;
  2110   00370A  C028  FFD9         	movff	Timer2_Init@_timer,fsr2l
  2111   00370E  C029  FFDA         	movff	Timer2_Init@_timer+1,fsr2h
  2112   003712  50DF               	movf	indf2,w,c
  2113   003714  6E49               	movwf	_timer2_preload^0,c
  2114   003716                     
  2115                           ;MCAL_Layer/Timer2/hal_timer2.c: 50:         ((*((volatile T2CON_t *)(0xFCA))).TMR2ON = 
      +                          1);
  2116   003716  84CA               	bsf	202,2,c	;volatile
  2117   003718                     l6251:
  2118                           
  2119                           ;MCAL_Layer/Timer2/hal_timer2.c: 52:     return ret;
  2120   003718  502B               	movf	Timer2_Init@ret^0,w,c
  2121   00371A  0012               	return		;funcret
  2122   00371C                     __end_of_Timer2_Init:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _CCP2_PWM_200KHZ_INIT *****************
  2126 ;; Defined at:
  2127 ;;		line 15 in file "MCAL_Layer/mcal_layer_init.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 11
  2148 ;; This function calls:
  2149 ;;		_CCP_Init
  2150 ;; This function is called by:
  2151 ;;		_mcal_layer_initialize
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text9
  2156   003D30                     __ptext9:
  2157                           	callstack 0
  2158   003D30                     _CCP2_PWM_200KHZ_INIT:
  2159                           	callstack 17
  2160   003D30                     
  2161                           ;MCAL_Layer/mcal_layer_init.c: 17:     ccp2_obj.ccp_inst =CCP2_INST;
  2162   003D30  0E01               	movlw	1
  2163   003D32  0101               	movlb	1	; () banked
  2164   003D34  6F32               	movwf	(_ccp2_obj+1)& (0+255),b
  2165                           
  2166                           ;MCAL_Layer/mcal_layer_init.c: 18:     ccp2_obj.ccp_mode =CCP_PWM_MODE_SELECTED;
  2167   003D36  0E02               	movlw	2
  2168   003D38  6F33               	movwf	(_ccp2_obj+2)& (0+255),b
  2169                           
  2170                           ;MCAL_Layer/mcal_layer_init.c: 19:     ccp2_obj.ccp_mode_variant = ((uint8)0x0C);
  2171   003D3A  0E0C               	movlw	12
  2172   003D3C  6F34               	movwf	(_ccp2_obj+3)& (0+255),b
  2173   003D3E                     
  2174                           ; BSR set to: 1
  2175                           ;MCAL_Layer/mcal_layer_init.c: 20:     ccp2_obj.ccp_pin.direction=OUTPUT;
  2176   003D3E  9D35               	bcf	(_ccp2_obj+4)& (0+255),6,b
  2177                           
  2178                           ;MCAL_Layer/mcal_layer_init.c: 21:     ccp2_obj.ccp_pin.port=PORTC_INDEX;
  2179   003D40  5135               	movf	(_ccp2_obj+4)& (0+255),w,b
  2180   003D42  0BF8               	andlw	-8
  2181   003D44  0902               	iorlw	2
  2182   003D46  6F35               	movwf	(_ccp2_obj+4)& (0+255),b
  2183                           
  2184                           ;MCAL_Layer/mcal_layer_init.c: 22:     ccp2_obj.ccp_pin.pin=PIN1;
  2185   003D48  5135               	movf	(_ccp2_obj+4)& (0+255),w,b
  2186   003D4A  0BC7               	andlw	-57
  2187   003D4C  0908               	iorlw	8
  2188   003D4E  6F35               	movwf	(_ccp2_obj+4)& (0+255),b
  2189                           
  2190                           ;MCAL_Layer/mcal_layer_init.c: 23:     ccp2_obj.Timer2_Prescaler_Value=1U;
  2191   003D50  0E01               	movlw	1
  2192   003D52  6F3D               	movwf	(_ccp2_obj+12)& (0+255),b
  2193                           
  2194                           ;MCAL_Layer/mcal_layer_init.c: 24:     ccp2_obj.PWM_Frequency=20000;
  2195   003D54  0E20               	movlw	32
  2196   003D56  6F39               	movwf	(_ccp2_obj+8)& (0+255),b
  2197   003D58  0E4E               	movlw	78
  2198   003D5A  6F3A               	movwf	(_ccp2_obj+9)& (0+255),b
  2199   003D5C  0E00               	movlw	0
  2200   003D5E  6F3B               	movwf	(_ccp2_obj+10)& (0+255),b
  2201   003D60  0E00               	movlw	0
  2202   003D62  6F3C               	movwf	(_ccp2_obj+11)& (0+255),b
  2203   003D64                     
  2204                           ; BSR set to: 1
  2205                           ;MCAL_Layer/mcal_layer_init.c: 25:     CCP_Init(&ccp2_obj);
  2206   003D64  0E31               	movlw	low _ccp2_obj
  2207   003D66  0100               	movlb	0	; () banked
  2208   003D68  6FC7               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2209   003D6A  0E01               	movlw	high _ccp2_obj
  2210   003D6C  6FC8               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2211   003D6E  EC2B  F014         	call	_CCP_Init	;wreg free
  2212   003D72  0012               	return		;funcret
  2213   003D74                     __end_of_CCP2_PWM_200KHZ_INIT:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _CCP1_Capture_Mode_Init *****************
  2217 ;; Defined at:
  2218 ;;		line 27 in file "MCAL_Layer/mcal_layer_init.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 11
  2239 ;; This function calls:
  2240 ;;		_CCP_Init
  2241 ;; This function is called by:
  2242 ;;		_mcal_layer_initialize
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text10
  2247   003DB6                     __ptext10:
  2248                           	callstack 0
  2249   003DB6                     _CCP1_Capture_Mode_Init:
  2250                           	callstack 17
  2251   003DB6                     
  2252                           ;MCAL_Layer/mcal_layer_init.c: 29:     ccp1_obj.CCP_Interrupt_Handler =CCP1_Callback_ISR
      +                          ;
  2253   003DB6  0E46               	movlw	low _CCP1_Callback_ISR
  2254   003DB8  0100               	movlb	0	; () banked
  2255   003DBA  6F9F               	movwf	(_ccp1_obj+5)& (0+255),b
  2256   003DBC  0E2F               	movlw	high _CCP1_Callback_ISR
  2257   003DBE  6FA0               	movwf	(_ccp1_obj+6)& (0+255),b
  2258   003DC0                     
  2259                           ; BSR set to: 0
  2260                           ;MCAL_Layer/mcal_layer_init.c: 30:     ccp1_obj.ccp_capt_comp_timer = CCP1_CCP2_TIMER3;
  2261   003DC0  0E02               	movlw	2
  2262   003DC2  6F9A               	movwf	_ccp1_obj& (0+255),b
  2263   003DC4                     
  2264                           ; BSR set to: 0
  2265                           ;MCAL_Layer/mcal_layer_init.c: 31:     ccp1_obj.ccp_inst =CCP1_INST;
  2266   003DC4  0E00               	movlw	0
  2267   003DC6  6F9B               	movwf	(_ccp1_obj+1)& (0+255),b
  2268   003DC8                     
  2269                           ; BSR set to: 0
  2270                           ;MCAL_Layer/mcal_layer_init.c: 32:     ccp1_obj.ccp_mode =CCP_CAPTURE_MODE_SELECTED;
  2271   003DC8  0E00               	movlw	0
  2272   003DCA  6F9C               	movwf	(_ccp1_obj+2)& (0+255),b
  2273   003DCC                     
  2274                           ; BSR set to: 0
  2275                           ;MCAL_Layer/mcal_layer_init.c: 33:     ccp1_obj.ccp_mode_variant = ((uint8)0x05);
  2276   003DCC  0E05               	movlw	5
  2277   003DCE  6F9D               	movwf	(_ccp1_obj+3)& (0+255),b
  2278   003DD0                     
  2279                           ; BSR set to: 0
  2280                           ;MCAL_Layer/mcal_layer_init.c: 34:     ccp1_obj.ccp_pin.direction=INPUT;
  2281   003DD0  8D9E               	bsf	(_ccp1_obj+4)& (0+255),6,b
  2282   003DD2                     
  2283                           ; BSR set to: 0
  2284                           ;MCAL_Layer/mcal_layer_init.c: 35:     ccp1_obj.ccp_pin.port=PORTC_INDEX;
  2285   003DD2  519E               	movf	(_ccp1_obj+4)& (0+255),w,b
  2286   003DD4  0BF8               	andlw	-8
  2287   003DD6  0902               	iorlw	2
  2288   003DD8  6F9E               	movwf	(_ccp1_obj+4)& (0+255),b
  2289   003DDA                     
  2290                           ; BSR set to: 0
  2291                           ;MCAL_Layer/mcal_layer_init.c: 36:     ccp1_obj.ccp_pin.pin=PIN2;
  2292   003DDA  519E               	movf	(_ccp1_obj+4)& (0+255),w,b
  2293   003DDC  0BC7               	andlw	-57
  2294   003DDE  0910               	iorlw	16
  2295   003DE0  6F9E               	movwf	(_ccp1_obj+4)& (0+255),b
  2296   003DE2                     
  2297                           ; BSR set to: 0
  2298                           ;MCAL_Layer/mcal_layer_init.c: 37:     CCP_Init(&ccp1_obj);
  2299   003DE2  0E9A               	movlw	low _ccp1_obj
  2300   003DE4  6FC7               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2301   003DE6  0E00               	movlw	high _ccp1_obj
  2302   003DE8  6FC8               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2303   003DEA  EC2B  F014         	call	_CCP_Init	;wreg free
  2304   003DEE  0012               	return		;funcret
  2305   003DF0                     __end_of_CCP1_Capture_Mode_Init:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _CCP_Init *****************
  2309 ;; Defined at:
  2310 ;;		line 26 in file "MCAL_Layer/CCP/hal_ccp.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  _ccp_obj        2   20[BANK0 ] PTR const struct .
  2313 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  ret             1   24[BANK0 ] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      unsigned char 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;Total ram usage:        5 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 10
  2332 ;; This function calls:
  2333 ;;		_CCP_Capture_Mode_Init
  2334 ;;		_CCP_Interrupt_Init
  2335 ;;		_CCP_PWM_Mode_Init
  2336 ;;		_gpio_pin_initialize
  2337 ;; This function is called by:
  2338 ;;		_CCP2_PWM_200KHZ_INIT
  2339 ;;		_CCP1_Capture_Mode_Init
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text11
  2344   002856                     __ptext11:
  2345                           	callstack 0
  2346   002856                     _CCP_Init:
  2347                           	callstack 17
  2348   002856                     
  2349                           ;MCAL_Layer/CCP/hal_ccp.c: 27:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2350   002856  0E01               	movlw	1
  2351   002858  0100               	movlb	0	; () banked
  2352   00285A  6FCB               	movwf	CCP_Init@ret& (0+255),b
  2353   00285C                     
  2354                           ; BSR set to: 0
  2355                           ;MCAL_Layer/CCP/hal_ccp.c: 28:     if(_ccp_obj==((void*)0))
  2356   00285C  51C7               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2357   00285E  11C8               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2358   002860  A4D8               	btfss	status,2,c
  2359   002862  EF35  F014         	goto	u9001
  2360   002866  EF37  F014         	goto	u9000
  2361   00286A                     u9001:
  2362   00286A  EF39  F014         	goto	l8937
  2363   00286E                     u9000:
  2364   00286E                     
  2365                           ; BSR set to: 0
  2366                           ;MCAL_Layer/CCP/hal_ccp.c: 31:     }
  2367   00286E  EFA6  F014         	goto	l1272
  2368   002872                     l8937:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;MCAL_Layer/CCP/hal_ccp.c: 33:     {;MCAL_Layer/CCP/hal_ccp.c: 35:         if (_ccp_obj-
      +                          >ccp_inst == CCP1_INST){
  2372   002872  EE20 F001          	lfsr	2,1
  2373   002876  51C7               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2374   002878  26D9               	addwf	fsr2l,f,c
  2375   00287A  51C8               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2376   00287C  22DA               	addwfc	fsr2h,f,c
  2377   00287E  50DF               	movf	indf2,w,c
  2378   002880  A4D8               	btfss	status,2,c
  2379   002882  EF45  F014         	goto	u9011
  2380   002886  EF47  F014         	goto	u9010
  2381   00288A                     u9011:
  2382   00288A  EF4B  F014         	goto	l8941
  2383   00288E                     u9010:
  2384   00288E                     
  2385                           ; BSR set to: 0
  2386                           ;MCAL_Layer/CCP/hal_ccp.c: 36:             ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = (
      +                          (uint8)0x00));
  2387   00288E  0EF0               	movlw	-16
  2388   002890  16BD               	andwf	189,f,c	;volatile
  2389                           
  2390                           ;MCAL_Layer/CCP/hal_ccp.c: 37:         }
  2391   002892  EF79  F014         	goto	l8953
  2392   002896                     l8941:
  2393                           
  2394                           ; BSR set to: 0
  2395   002896  EE20 F001          	lfsr	2,1
  2396   00289A  51C7               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2397   00289C  26D9               	addwf	fsr2l,f,c
  2398   00289E  51C8               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2399   0028A0  22DA               	addwfc	fsr2h,f,c
  2400   0028A2  04DE               	decf	postinc2,w,c
  2401   0028A4  A4D8               	btfss	status,2,c
  2402   0028A6  EF57  F014         	goto	u9021
  2403   0028AA  EF59  F014         	goto	u9020
  2404   0028AE                     u9021:
  2405   0028AE  EF5D  F014         	goto	l8945
  2406   0028B2                     u9020:
  2407   0028B2                     
  2408                           ; BSR set to: 0
  2409                           ;MCAL_Layer/CCP/hal_ccp.c: 39:             ((*((volatile CCP2CON_t *)(0xFBA))).CCP2M = (
      +                          (uint8)0x00));
  2410   0028B2  0EF0               	movlw	-16
  2411   0028B4  16BA               	andwf	186,f,c	;volatile
  2412                           
  2413                           ;MCAL_Layer/CCP/hal_ccp.c: 40:         }
  2414   0028B6  EF79  F014         	goto	l8953
  2415   0028BA                     l8945:
  2416                           
  2417                           ; BSR set to: 0
  2418   0028BA  0E00               	movlw	0
  2419   0028BC  6FCB               	movwf	CCP_Init@ret& (0+255),b
  2420   0028BE  EF79  F014         	goto	l8953
  2421   0028C2                     l8947:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;MCAL_Layer/CCP/hal_ccp.c: 48:                 ret &= CCP_Capture_Mode_Init(_ccp_obj);
  2425   0028C2  C0C7  F02B         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Init@_ccp_obj
  2426   0028C6  C0C8  F02C         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Init@_ccp_obj+1
  2427   0028CA  EC8C  F010         	call	_CCP_Capture_Mode_Init	;wreg free
  2428   0028CE  0100               	movlb	0	; () banked
  2429   0028D0  17CB               	andwf	CCP_Init@ret& (0+255),f,b
  2430                           
  2431                           ;MCAL_Layer/CCP/hal_ccp.c: 49:                 break;
  2432   0028D2  EF94  F014         	goto	l8955
  2433   0028D6                     l8949:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;MCAL_Layer/CCP/hal_ccp.c: 60:                 ret &= CCP_PWM_Mode_Init(_ccp_obj);
  2437   0028D6  C0C7  F0C4         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Init@_ccp_obj
  2438   0028DA  C0C8  F0C5         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Init@_ccp_obj+1
  2439   0028DE  EC12  F013         	call	_CCP_PWM_Mode_Init	;wreg free
  2440   0028E2  0100               	movlb	0	; () banked
  2441   0028E4  17CB               	andwf	CCP_Init@ret& (0+255),f,b
  2442                           
  2443                           ;MCAL_Layer/CCP/hal_ccp.c: 61:                 break;
  2444   0028E6  EF94  F014         	goto	l8955
  2445   0028EA                     l8951:
  2446                           
  2447                           ; BSR set to: 0
  2448   0028EA  0E00               	movlw	0
  2449   0028EC  6FCB               	movwf	CCP_Init@ret& (0+255),b
  2450                           
  2451                           ;MCAL_Layer/CCP/hal_ccp.c: 64:         }
  2452   0028EE  EF94  F014         	goto	l8955
  2453   0028F2                     l8953:
  2454                           
  2455                           ; BSR set to: 0
  2456   0028F2  EE20 F002          	lfsr	2,2
  2457   0028F6  51C7               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2458   0028F8  26D9               	addwf	fsr2l,f,c
  2459   0028FA  51C8               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2460   0028FC  22DA               	addwfc	fsr2h,f,c
  2461   0028FE  50DF               	movf	indf2,w,c
  2462   002900  6FC9               	movwf	??_CCP_Init& (0+255),b
  2463   002902  6BCA               	clrf	(??_CCP_Init+1)& (0+255),b
  2464                           
  2465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2466                           ; Switch size 1, requested type "simple"
  2467                           ; Number of cases is 1, Range of values is 0 to 0
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte            4     3 (average)
  2471                           ;	Chosen strategy is simple_byte
  2472   002904  51CA               	movf	(??_CCP_Init+1)& (0+255),w,b
  2473   002906  0A00               	xorlw	0	; case 0
  2474   002908  B4D8               	btfsc	status,2,c
  2475   00290A  EF89  F014         	goto	l10337
  2476   00290E  EF75  F014         	goto	l8951
  2477   002912                     l10337:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ; Switch size 1, requested type "simple"
  2481                           ; Number of cases is 2, Range of values is 0 to 2
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte            7     4 (average)
  2485                           ;	Chosen strategy is simple_byte
  2486   002912  51C9               	movf	??_CCP_Init& (0+255),w,b
  2487   002914  0A00               	xorlw	0	; case 0
  2488   002916  B4D8               	btfsc	status,2,c
  2489   002918  EF61  F014         	goto	l8947
  2490   00291C  0A02               	xorlw	2	; case 2
  2491   00291E  B4D8               	btfsc	status,2,c
  2492   002920  EF6B  F014         	goto	l8949
  2493   002924  EF75  F014         	goto	l8951
  2494   002928                     l8955:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;MCAL_Layer/CCP/hal_ccp.c: 66:         ret &= gpio_pin_initialize(&(_ccp_obj->ccp_pin));
  2498   002928  0E04               	movlw	4
  2499   00292A  25C7               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  2500   00292C  6FB4               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  2501   00292E  0E00               	movlw	0
  2502   002930  21C8               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2503   002932  6FB5               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  2504   002934  EC47  F01A         	call	_gpio_pin_initialize	;wreg free
  2505   002938  0100               	movlb	0	; () banked
  2506   00293A  17CB               	andwf	CCP_Init@ret& (0+255),f,b
  2507   00293C                     
  2508                           ; BSR set to: 0
  2509                           ;MCAL_Layer/CCP/hal_ccp.c: 69:        ret&= CCP_Interrupt_Init(_ccp_obj);
  2510   00293C  C0C7  F02B         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Init@_ccp_obj
  2511   002940  C0C8  F02C         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Init@_ccp_obj+1
  2512   002944  EC4B  F01C         	call	_CCP_Interrupt_Init	;wreg free
  2513   002948  0100               	movlb	0	; () banked
  2514   00294A  17CB               	andwf	CCP_Init@ret& (0+255),f,b
  2515   00294C                     l1272:
  2516                           
  2517                           ; BSR set to: 0
  2518   00294C  0012               	return		;funcret
  2519   00294E                     __end_of_CCP_Init:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _CCP_PWM_Mode_Init *****************
  2523 ;; Defined at:
  2524 ;;		line 431 in file "MCAL_Layer/CCP/hal_ccp.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  _ccp_obj        2   17[BANK0 ] PTR const struct .
  2527 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  ret             1   19[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      unsigned char 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;Total ram usage:        4 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 9
  2546 ;; This function calls:
  2547 ;;		___lldiv
  2548 ;;		___lmul
  2549 ;; This function is called by:
  2550 ;;		_CCP_Init
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text12
  2555   002624                     __ptext12:
  2556                           	callstack 0
  2557   002624                     _CCP_PWM_Mode_Init:
  2558                           	callstack 17
  2559   002624                     
  2560                           ;MCAL_Layer/CCP/hal_ccp.c: 431: static Std_ReturnType CCP_PWM_Mode_Init(const ccp_t * _c
      +                          cp_obj );MCAL_Layer/CCP/hal_ccp.c: 432: {;MCAL_Layer/CCP/hal_ccp.c: 433:     Std_ReturnT
      +                          ype ret = (Std_ReturnType)0x01;
  2561   002624  0E01               	movlw	1
  2562   002626  0100               	movlb	0	; () banked
  2563   002628  6FC6               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2564   00262A                     
  2565                           ; BSR set to: 0
  2566                           ;MCAL_Layer/CCP/hal_ccp.c: 434:     if (((void*)0) == _ccp_obj)
  2567   00262A  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2568   00262C  11C5               	iorwf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2569   00262E  A4D8               	btfss	status,2,c
  2570   002630  EF1C  F013         	goto	u8881
  2571   002634  EF1E  F013         	goto	u8880
  2572   002638                     u8881:
  2573   002638  EF22  F013         	goto	l8815
  2574   00263C                     u8880:
  2575   00263C                     
  2576                           ; BSR set to: 0
  2577                           ;MCAL_Layer/CCP/hal_ccp.c: 435:     {;MCAL_Layer/CCP/hal_ccp.c: 436:         ret = (Std_
      +                          ReturnType)0x00;
  2578   00263C  0E00               	movlw	0
  2579   00263E  6FC6               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2580                           
  2581                           ;MCAL_Layer/CCP/hal_ccp.c: 437:     }
  2582   002640  EFA5  F013         	goto	l8835
  2583   002644                     l8815:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;MCAL_Layer/CCP/hal_ccp.c: 439:     {;MCAL_Layer/CCP/hal_ccp.c: 440:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
  2587   002644  EE20 F001          	lfsr	2,1
  2588   002648  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2589   00264A  26D9               	addwf	fsr2l,f,c
  2590   00264C  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2591   00264E  22DA               	addwfc	fsr2h,f,c
  2592   002650  50DF               	movf	indf2,w,c
  2593   002652  A4D8               	btfss	status,2,c
  2594   002654  EF2E  F013         	goto	u8891
  2595   002658  EF30  F013         	goto	u8890
  2596   00265C                     u8891:
  2597   00265C  EF49  F013         	goto	l8823
  2598   002660                     u8890:
  2599   002660                     
  2600                           ; BSR set to: 0
  2601                           ;MCAL_Layer/CCP/hal_ccp.c: 441:         {;MCAL_Layer/CCP/hal_ccp.c: 442:             if(
      +                          ((uint8)0x0C) ==_ccp_obj->ccp_mode_variant)
  2602   002660  EE20 F003          	lfsr	2,3
  2603   002664  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2604   002666  26D9               	addwf	fsr2l,f,c
  2605   002668  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2606   00266A  22DA               	addwfc	fsr2h,f,c
  2607   00266C  0E0C               	movlw	12
  2608   00266E  18DE               	xorwf	postinc2,w,c
  2609   002670  A4D8               	btfss	status,2,c
  2610   002672  EF3D  F013         	goto	u8901
  2611   002676  EF3F  F013         	goto	u8900
  2612   00267A                     u8901:
  2613   00267A  EF45  F013         	goto	l8821
  2614   00267E                     u8900:
  2615   00267E                     
  2616                           ; BSR set to: 0
  2617                           ;MCAL_Layer/CCP/hal_ccp.c: 443:             {;MCAL_Layer/CCP/hal_ccp.c: 444:            
      +                           ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8)0x0C));
  2618   00267E  50BD               	movf	189,w,c	;volatile
  2619   002680  0BF0               	andlw	-16
  2620   002682  090C               	iorlw	12
  2621   002684  6EBD               	movwf	189,c	;volatile
  2622                           
  2623                           ;MCAL_Layer/CCP/hal_ccp.c: 445:             }
  2624   002686  EF6A  F013         	goto	l8833
  2625   00268A                     l8821:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;MCAL_Layer/CCP/hal_ccp.c: 447:             {;MCAL_Layer/CCP/hal_ccp.c: 448:            
      +                           ret = (Std_ReturnType)0x00;
  2629   00268A  0E00               	movlw	0
  2630   00268C  6FC6               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2631   00268E  EF6A  F013         	goto	l8833
  2632   002692                     l8823:
  2633                           
  2634                           ; BSR set to: 0
  2635   002692  EE20 F001          	lfsr	2,1
  2636   002696  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2637   002698  26D9               	addwf	fsr2l,f,c
  2638   00269A  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2639   00269C  22DA               	addwfc	fsr2h,f,c
  2640   00269E  04DE               	decf	postinc2,w,c
  2641   0026A0  A4D8               	btfss	status,2,c
  2642   0026A2  EF55  F013         	goto	u8911
  2643   0026A6  EF57  F013         	goto	u8910
  2644   0026AA                     u8911:
  2645   0026AA  EF45  F013         	goto	l8821
  2646   0026AE                     u8910:
  2647   0026AE                     
  2648                           ; BSR set to: 0
  2649                           ;MCAL_Layer/CCP/hal_ccp.c: 452:         {;MCAL_Layer/CCP/hal_ccp.c: 453:             if(
      +                          ((uint8)0x0C) ==_ccp_obj->ccp_mode_variant)
  2650   0026AE  EE20 F003          	lfsr	2,3
  2651   0026B2  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2652   0026B4  26D9               	addwf	fsr2l,f,c
  2653   0026B6  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2654   0026B8  22DA               	addwfc	fsr2h,f,c
  2655   0026BA  0E0C               	movlw	12
  2656   0026BC  18DE               	xorwf	postinc2,w,c
  2657   0026BE  A4D8               	btfss	status,2,c
  2658   0026C0  EF64  F013         	goto	u8921
  2659   0026C4  EF66  F013         	goto	u8920
  2660   0026C8                     u8921:
  2661   0026C8  EF45  F013         	goto	l8821
  2662   0026CC                     u8920:
  2663   0026CC                     
  2664                           ; BSR set to: 0
  2665                           ;MCAL_Layer/CCP/hal_ccp.c: 454:             {;MCAL_Layer/CCP/hal_ccp.c: 455:            
      +                           ((*((volatile CCP2CON_t *)(0xFBA))).CCP2M = ((uint8)0x0C));
  2666   0026CC  50BA               	movf	186,w,c	;volatile
  2667   0026CE  0BF0               	andlw	-16
  2668   0026D0  090C               	iorlw	12
  2669   0026D2  6EBA               	movwf	186,c	;volatile
  2670   0026D4                     l8833:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;MCAL_Layer/CCP/hal_ccp.c: 464:          (*((volatile uint8 *)(0xFCB))) = (uint8)((40000
      +                          00UL/(_ccp_obj->PWM_Frequency * _ccp_obj->Timer2_Prescaler_Value * 4))-1);
  2674   0026D4  0E00               	movlw	0
  2675   0026D6  6FB7               	movwf	___lldiv@dividend& (0+255),b
  2676   0026D8  0E09               	movlw	9
  2677   0026DA  6FB8               	movwf	(___lldiv@dividend+1)& (0+255),b
  2678   0026DC  0E3D               	movlw	61
  2679   0026DE  6FB9               	movwf	(___lldiv@dividend+2)& (0+255),b
  2680   0026E0  0E00               	movlw	0
  2681   0026E2  6FBA               	movwf	(___lldiv@dividend+3)& (0+255),b
  2682   0026E4  EE20 F00C          	lfsr	2,12
  2683   0026E8  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2684   0026EA  26D9               	addwf	fsr2l,f,c
  2685   0026EC  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2686   0026EE  22DA               	addwfc	fsr2h,f,c
  2687   0026F0  50DF               	movf	indf2,w,c
  2688   0026F2  6E30               	movwf	??_CCP_PWM_Mode_Init^0,c
  2689   0026F4  5030               	movf	??_CCP_PWM_Mode_Init^0,w,c
  2690   0026F6  6E28               	movwf	___lmul@multiplier^0,c
  2691   0026F8  6A29               	clrf	(___lmul@multiplier+1)^0,c
  2692   0026FA  6A2A               	clrf	(___lmul@multiplier+2)^0,c
  2693   0026FC  6A2B               	clrf	(___lmul@multiplier+3)^0,c
  2694   0026FE  EE20 F008          	lfsr	2,8
  2695   002702  51C4               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2696   002704  26D9               	addwf	fsr2l,f,c
  2697   002706  51C5               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2698   002708  22DA               	addwfc	fsr2h,f,c
  2699   00270A  CFDE F02C          	movff	postinc2,___lmul@multiplicand
  2700   00270E  CFDE F02D          	movff	postinc2,___lmul@multiplicand+1
  2701   002712  CFDE F02E          	movff	postinc2,___lmul@multiplicand+2
  2702   002716  CFDE F02F          	movff	postinc2,___lmul@multiplicand+3
  2703   00271A  EC73  F01D         	call	___lmul	;wreg free
  2704   00271E  0E02               	movlw	2
  2705   002720                     u8935:
  2706   002720  90D8               	bcf	status,0,c
  2707   002722  3628               	rlcf	?___lmul^0,f,c
  2708   002724  3629               	rlcf	(?___lmul+1)^0,f,c
  2709   002726  362A               	rlcf	(?___lmul+2)^0,f,c
  2710   002728  362B               	rlcf	(?___lmul+3)^0,f,c
  2711   00272A  2EE8               	decfsz	wreg,f,c
  2712   00272C  EF90  F013         	goto	u8935
  2713   002730  C028  F0BB         	movff	?___lmul,___lldiv@divisor
  2714   002734  C029  F0BC         	movff	?___lmul+1,___lldiv@divisor+1
  2715   002738  C02A  F0BD         	movff	?___lmul+2,___lldiv@divisor+2
  2716   00273C  C02B  F0BE         	movff	?___lmul+3,___lldiv@divisor+3
  2717   002740  EC05  F019         	call	___lldiv	;wreg free
  2718   002744  0100               	movlb	0	; () banked
  2719   002746  05B7               	decf	?___lldiv& (0+255),w,b
  2720   002748  6ECB               	movwf	203,c	;volatile
  2721   00274A                     l8835:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;MCAL_Layer/CCP/hal_ccp.c: 466:     return ret;
  2725   00274A  51C6               	movf	CCP_PWM_Mode_Init@ret& (0+255),w,b
  2726   00274C                     
  2727                           ; BSR set to: 0
  2728   00274C  0012               	return		;funcret
  2729   00274E                     __end_of_CCP_PWM_Mode_Init:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function ___lldiv *****************
  2733 ;; Defined at:
  2734 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  dividend        4    4[BANK0 ] unsigned long 
  2737 ;;  divisor         4    8[BANK0 ] unsigned long 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  quotient        4   12[BANK0 ] unsigned long 
  2740 ;;  counter         1   16[BANK0 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  4    4[BANK0 ] unsigned long 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2750 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;Total ram usage:       13 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 8
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_CCP_PWM_Mode_Init
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text13
  2765   00320A                     __ptext13:
  2766                           	callstack 0
  2767   00320A                     ___lldiv:
  2768                           	callstack 17
  2769   00320A  0E00               	movlw	0
  2770   00320C  0100               	movlb	0	; () banked
  2771   00320E  6FBF               	movwf	___lldiv@quotient& (0+255),b
  2772   003210  0E00               	movlw	0
  2773   003212  6FC0               	movwf	(___lldiv@quotient+1)& (0+255),b
  2774   003214  0E00               	movlw	0
  2775   003216  6FC1               	movwf	(___lldiv@quotient+2)& (0+255),b
  2776   003218  0E00               	movlw	0
  2777   00321A  6FC2               	movwf	(___lldiv@quotient+3)& (0+255),b
  2778   00321C                     
  2779                           ; BSR set to: 0
  2780   00321C  51BB               	movf	___lldiv@divisor& (0+255),w,b
  2781   00321E  11BC               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  2782   003220  11BD               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  2783   003222  11BE               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  2784   003224  B4D8               	btfsc	status,2,c
  2785   003226  EF17  F019         	goto	u8681
  2786   00322A  EF19  F019         	goto	u8680
  2787   00322E                     u8681:
  2788   00322E  EF4F  F019         	goto	l1532
  2789   003232                     u8680:
  2790   003232                     
  2791                           ; BSR set to: 0
  2792   003232  0E01               	movlw	1
  2793   003234  6FC3               	movwf	___lldiv@counter& (0+255),b
  2794   003236  EF23  F019         	goto	l8665
  2795   00323A                     l8663:
  2796                           
  2797                           ; BSR set to: 0
  2798   00323A  90D8               	bcf	status,0,c
  2799   00323C  37BB               	rlcf	___lldiv@divisor& (0+255),f,b
  2800   00323E  37BC               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  2801   003240  37BD               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  2802   003242  37BE               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  2803   003244  2BC3               	incf	___lldiv@counter& (0+255),f,b
  2804   003246                     l8665:
  2805                           
  2806                           ; BSR set to: 0
  2807   003246  AFBE               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  2808   003248  EF28  F019         	goto	u8691
  2809   00324C  EF2A  F019         	goto	u8690
  2810   003250                     u8691:
  2811   003250  EF1D  F019         	goto	l8663
  2812   003254                     u8690:
  2813   003254                     l8667:
  2814                           
  2815                           ; BSR set to: 0
  2816   003254  90D8               	bcf	status,0,c
  2817   003256  37BF               	rlcf	___lldiv@quotient& (0+255),f,b
  2818   003258  37C0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  2819   00325A  37C1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  2820   00325C  37C2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  2821   00325E                     
  2822                           ; BSR set to: 0
  2823   00325E  51BB               	movf	___lldiv@divisor& (0+255),w,b
  2824   003260  5DB7               	subwf	___lldiv@dividend& (0+255),w,b
  2825   003262  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2826   003264  59B8               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  2827   003266  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2828   003268  59B9               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  2829   00326A  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2830   00326C  59BA               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  2831   00326E  A0D8               	btfss	status,0,c
  2832   003270  EF3C  F019         	goto	u8701
  2833   003274  EF3E  F019         	goto	u8700
  2834   003278                     u8701:
  2835   003278  EF47  F019         	goto	l8675
  2836   00327C                     u8700:
  2837   00327C                     
  2838                           ; BSR set to: 0
  2839   00327C  51BB               	movf	___lldiv@divisor& (0+255),w,b
  2840   00327E  5FB7               	subwf	___lldiv@dividend& (0+255),f,b
  2841   003280  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2842   003282  5BB8               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  2843   003284  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2844   003286  5BB9               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  2845   003288  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2846   00328A  5BBA               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  2847   00328C                     
  2848                           ; BSR set to: 0
  2849   00328C  81BF               	bsf	___lldiv@quotient& (0+255),0,b
  2850   00328E                     l8675:
  2851                           
  2852                           ; BSR set to: 0
  2853   00328E  90D8               	bcf	status,0,c
  2854   003290  33BE               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  2855   003292  33BD               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  2856   003294  33BC               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  2857   003296  33BB               	rrcf	___lldiv@divisor& (0+255),f,b
  2858   003298                     
  2859                           ; BSR set to: 0
  2860   003298  2FC3               	decfsz	___lldiv@counter& (0+255),f,b
  2861   00329A  EF2A  F019         	goto	l8667
  2862   00329E                     l1532:
  2863                           
  2864                           ; BSR set to: 0
  2865   00329E  C0BF  F0B7         	movff	___lldiv@quotient,?___lldiv
  2866   0032A2  C0C0  F0B8         	movff	___lldiv@quotient+1,?___lldiv+1
  2867   0032A6  C0C1  F0B9         	movff	___lldiv@quotient+2,?___lldiv+2
  2868   0032AA  C0C2  F0BA         	movff	___lldiv@quotient+3,?___lldiv+3
  2869   0032AE                     
  2870                           ; BSR set to: 0
  2871   0032AE  0012               	return		;funcret
  2872   0032B0                     __end_of___lldiv:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _CCP_Interrupt_Init *****************
  2876 ;; Defined at:
  2877 ;;		line 570 in file "MCAL_Layer/CCP/hal_ccp.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  _ccp_obj        2   42[COMRAM] PTR const struct .
  2880 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  ret             1   46[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      unsigned char 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        5 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; Hardware stack levels required when called: 9
  2899 ;; This function calls:
  2900 ;;		_CCP1_Interrupt_Init
  2901 ;;		_CCP2_Interrupt_Init
  2902 ;; This function is called by:
  2903 ;;		_CCP_Init
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text14
  2908   003896                     __ptext14:
  2909                           	callstack 0
  2910   003896                     _CCP_Interrupt_Init:
  2911                           	callstack 17
  2912   003896                     
  2913                           ;MCAL_Layer/CCP/hal_ccp.c: 570: static Std_ReturnType CCP_Interrupt_Init(const ccp_t * _
      +                          ccp_obj );MCAL_Layer/CCP/hal_ccp.c: 571: {;MCAL_Layer/CCP/hal_ccp.c: 572:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  2914   003896  0E01               	movlw	1
  2915   003898  6E2F               	movwf	CCP_Interrupt_Init@ret^0,c
  2916   00389A                     
  2917                           ;MCAL_Layer/CCP/hal_ccp.c: 573:     if(_ccp_obj==((void*)0))
  2918   00389A  502B               	movf	CCP_Interrupt_Init@_ccp_obj^0,w,c
  2919   00389C  102C               	iorwf	(CCP_Interrupt_Init@_ccp_obj+1)^0,w,c
  2920   00389E  A4D8               	btfss	status,2,c
  2921   0038A0  EF54  F01C         	goto	u8941
  2922   0038A4  EF56  F01C         	goto	u8940
  2923   0038A8                     u8941:
  2924   0038A8  EF6A  F01C         	goto	l8851
  2925   0038AC                     u8940:
  2926   0038AC                     l8843:
  2927                           
  2928                           ;MCAL_Layer/CCP/hal_ccp.c: 574:     {;MCAL_Layer/CCP/hal_ccp.c: 575:         ret=(Std_Re
      +                          turnType)0x00;
  2929   0038AC  0E00               	movlw	0
  2930   0038AE  6E2F               	movwf	CCP_Interrupt_Init@ret^0,c
  2931                           
  2932                           ;MCAL_Layer/CCP/hal_ccp.c: 576:     }
  2933   0038B0  EF85  F01C         	goto	l8853
  2934   0038B4                     l8845:
  2935   0038B4  C02B  F028         	movff	CCP_Interrupt_Init@_ccp_obj,CCP1_Interrupt_Init@_ccp_obj
  2936   0038B8  C02C  F029         	movff	CCP_Interrupt_Init@_ccp_obj+1,CCP1_Interrupt_Init@_ccp_obj+1
  2937   0038BC  ECC3  F01C         	call	_CCP1_Interrupt_Init	;wreg free
  2938                           
  2939                           ;MCAL_Layer/CCP/hal_ccp.c: 582:                 break;
  2940   0038C0  EF85  F01C         	goto	l8853
  2941   0038C4                     l8847:
  2942   0038C4  C02B  F028         	movff	CCP_Interrupt_Init@_ccp_obj,CCP2_Interrupt_Init@_ccp_obj
  2943   0038C8  C02C  F029         	movff	CCP_Interrupt_Init@_ccp_obj+1,CCP2_Interrupt_Init@_ccp_obj+1
  2944   0038CC  EC87  F01C         	call	_CCP2_Interrupt_Init	;wreg free
  2945                           
  2946                           ;MCAL_Layer/CCP/hal_ccp.c: 586:                 break;
  2947   0038D0  EF85  F01C         	goto	l8853
  2948   0038D4                     l8851:
  2949   0038D4  EE20 F001          	lfsr	2,1
  2950   0038D8  502B               	movf	CCP_Interrupt_Init@_ccp_obj^0,w,c
  2951   0038DA  26D9               	addwf	fsr2l,f,c
  2952   0038DC  502C               	movf	(CCP_Interrupt_Init@_ccp_obj+1)^0,w,c
  2953   0038DE  22DA               	addwfc	fsr2h,f,c
  2954   0038E0  50DF               	movf	indf2,w,c
  2955   0038E2  6E2D               	movwf	??_CCP_Interrupt_Init^0,c
  2956   0038E4  6A2E               	clrf	(??_CCP_Interrupt_Init+1)^0,c
  2957                           
  2958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2959                           ; Switch size 1, requested type "simple"
  2960                           ; Number of cases is 1, Range of values is 0 to 0
  2961                           ; switch strategies available:
  2962                           ; Name         Instructions Cycles
  2963                           ; simple_byte            4     3 (average)
  2964                           ;	Chosen strategy is simple_byte
  2965   0038E6  502E               	movf	(??_CCP_Interrupt_Init+1)^0,w,c
  2966   0038E8  0A00               	xorlw	0	; case 0
  2967   0038EA  B4D8               	btfsc	status,2,c
  2968   0038EC  EF7A  F01C         	goto	l10339
  2969   0038F0  EF56  F01C         	goto	l8843
  2970   0038F4                     l10339:
  2971                           
  2972                           ; Switch size 1, requested type "simple"
  2973                           ; Number of cases is 2, Range of values is 0 to 1
  2974                           ; switch strategies available:
  2975                           ; Name         Instructions Cycles
  2976                           ; simple_byte            7     4 (average)
  2977                           ;	Chosen strategy is simple_byte
  2978   0038F4  502D               	movf	??_CCP_Interrupt_Init^0,w,c
  2979   0038F6  0A00               	xorlw	0	; case 0
  2980   0038F8  B4D8               	btfsc	status,2,c
  2981   0038FA  EF5A  F01C         	goto	l8845
  2982   0038FE  0A01               	xorlw	1	; case 1
  2983   003900  B4D8               	btfsc	status,2,c
  2984   003902  EF62  F01C         	goto	l8847
  2985   003906  EF56  F01C         	goto	l8843
  2986   00390A                     l8853:
  2987                           
  2988                           ;MCAL_Layer/CCP/hal_ccp.c: 591:     return ret;
  2989   00390A  502F               	movf	CCP_Interrupt_Init@ret^0,w,c
  2990   00390C  0012               	return		;funcret
  2991   00390E                     __end_of_CCP_Interrupt_Init:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _CCP2_Interrupt_Init *****************
  2995 ;; Defined at:
  2996 ;;		line 533 in file "MCAL_Layer/CCP/hal_ccp.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  2999 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  ret             1    0        unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      unsigned char 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;Total ram usage:        3 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 8
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_CCP_Interrupt_Init
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text15
  3026   00390E                     __ptext15:
  3027                           	callstack 0
  3028   00390E                     _CCP2_Interrupt_Init:
  3029                           	callstack 17
  3030   00390E                     
  3031                           ;MCAL_Layer/CCP/hal_ccp.c: 536:     if(_ccp_obj==((void*)0))
  3032   00390E  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3033   003910  1029               	iorwf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3034   003912  A4D8               	btfss	status,2,c
  3035   003914  EF8E  F01C         	goto	u8631
  3036   003918  EF90  F01C         	goto	u8630
  3037   00391C                     u8631:
  3038   00391C  EF92  F01C         	goto	l1405
  3039   003920                     u8630:
  3040   003920                     l8631:
  3041                           
  3042                           ;MCAL_Layer/CCP/hal_ccp.c: 539:     }
  3043   003920  EFC2  F01C         	goto	l1411
  3044   003924                     l1405:
  3045                           
  3046                           ;MCAL_Layer/CCP/hal_ccp.c: 541:     {;MCAL_Layer/CCP/hal_ccp.c: 542:         ((*((volati
      +                          le PIE2_t *)(0xFA0))).CCP2IE=1);
  3047   003924  80A0               	bsf	160,0,c	;volatile
  3048                           
  3049                           ;MCAL_Layer/CCP/hal_ccp.c: 543:         ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
  3050   003926  90A1               	bcf	161,0,c	;volatile
  3051   003928                     
  3052                           ;MCAL_Layer/CCP/hal_ccp.c: 544:         CCP2_InterruptHandler = _ccp_obj->CCP_Interrupt_
      +                          Handler;
  3053   003928  EE20 F005          	lfsr	2,5
  3054   00392C  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3055   00392E  26D9               	addwf	fsr2l,f,c
  3056   003930  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3057   003932  22DA               	addwfc	fsr2h,f,c
  3058   003934  CFDE F031          	movff	postinc2,_CCP2_InterruptHandler
  3059   003938  CFDD F032          	movff	postdec2,_CCP2_InterruptHandler+1
  3060   00393C                     
  3061                           ;MCAL_Layer/CCP/hal_ccp.c: 551:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1);
  3062   00393C  8ED0               	bsf	208,7,c	;volatile
  3063                           
  3064                           ;MCAL_Layer/CCP/hal_ccp.c: 552:             if(_ccp_obj->priority == INTERRUPT_HIGH_PRIO
      +                          RITY){
  3065   00393E  EE20 F007          	lfsr	2,7
  3066   003942  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3067   003944  26D9               	addwf	fsr2l,f,c
  3068   003946  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3069   003948  22DA               	addwfc	fsr2h,f,c
  3070   00394A  04DE               	decf	postinc2,w,c
  3071   00394C  A4D8               	btfss	status,2,c
  3072   00394E  EFAB  F01C         	goto	u8641
  3073   003952  EFAD  F01C         	goto	u8640
  3074   003956                     u8641:
  3075   003956  EFB1  F01C         	goto	l8639
  3076   00395A                     u8640:
  3077   00395A                     
  3078                           ;MCAL_Layer/CCP/hal_ccp.c: 553:                 ((*((volatile IPR2_t *)(0xFA2))).CCP2IP=
      +                          1);
  3079   00395A  80A2               	bsf	162,0,c	;volatile
  3080                           
  3081                           ;MCAL_Layer/CCP/hal_ccp.c: 554:                 ((*((volatile INTCON_t *)(0xFF2))).GIEH 
      +                          = 1);
  3082   00395C  8EF2               	bsf	242,7,c	;volatile
  3083                           
  3084                           ;MCAL_Layer/CCP/hal_ccp.c: 555:             }
  3085   00395E  EFC2  F01C         	goto	l1411
  3086   003962                     l8639:
  3087   003962  EE20 F007          	lfsr	2,7
  3088   003966  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3089   003968  26D9               	addwf	fsr2l,f,c
  3090   00396A  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3091   00396C  22DA               	addwfc	fsr2h,f,c
  3092   00396E  50DF               	movf	indf2,w,c
  3093   003970  A4D8               	btfss	status,2,c
  3094   003972  EFBD  F01C         	goto	u8651
  3095   003976  EFBF  F01C         	goto	u8650
  3096   00397A                     u8651:
  3097   00397A  EF90  F01C         	goto	l8631
  3098   00397E                     u8650:
  3099   00397E                     
  3100                           ;MCAL_Layer/CCP/hal_ccp.c: 557:             {;MCAL_Layer/CCP/hal_ccp.c: 558:            
      +                            ((*((volatile IPR2_t *)(0xFA2))).CCP2IP=0);
  3101   00397E  90A2               	bcf	162,0,c	;volatile
  3102                           
  3103                           ;MCAL_Layer/CCP/hal_ccp.c: 559:              ((*((volatile INTCON_t *)(0xFF2))).GIEH = 1
      +                          );
  3104   003980  8EF2               	bsf	242,7,c	;volatile
  3105                           
  3106                           ;MCAL_Layer/CCP/hal_ccp.c: 560:              ((*((volatile INTCON_t *)(0xFF2))).GIEL = 1
      +                          );
  3107   003982  8CF2               	bsf	242,6,c	;volatile
  3108   003984                     l1411:
  3109   003984  0012               	return		;funcret
  3110   003986                     __end_of_CCP2_Interrupt_Init:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _CCP1_Interrupt_Init *****************
  3114 ;; Defined at:
  3115 ;;		line 496 in file "MCAL_Layer/CCP/hal_ccp.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  3118 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  ret             1    0        unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      unsigned char 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        3 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 8
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_CCP_Interrupt_Init
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text16
  3145   003986                     __ptext16:
  3146                           	callstack 0
  3147   003986                     _CCP1_Interrupt_Init:
  3148                           	callstack 17
  3149   003986                     
  3150                           ;MCAL_Layer/CCP/hal_ccp.c: 499:     if(_ccp_obj==((void*)0))
  3151   003986  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3152   003988  1029               	iorwf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3153   00398A  A4D8               	btfss	status,2,c
  3154   00398C  EFCA  F01C         	goto	u8601
  3155   003990  EFCC  F01C         	goto	u8600
  3156   003994                     u8601:
  3157   003994  EFCE  F01C         	goto	l1396
  3158   003998                     u8600:
  3159   003998                     l8611:
  3160                           
  3161                           ;MCAL_Layer/CCP/hal_ccp.c: 502:     }
  3162   003998  EFFE  F01C         	goto	l1402
  3163   00399C                     l1396:
  3164                           
  3165                           ;MCAL_Layer/CCP/hal_ccp.c: 504:     {;MCAL_Layer/CCP/hal_ccp.c: 505:         ((*((volati
      +                          le PIE1_t *)(0xF9D))).CCP1IE=1);
  3166   00399C  849D               	bsf	157,2,c	;volatile
  3167                           
  3168                           ;MCAL_Layer/CCP/hal_ccp.c: 506:         ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
  3169   00399E  949E               	bcf	158,2,c	;volatile
  3170   0039A0                     
  3171                           ;MCAL_Layer/CCP/hal_ccp.c: 507:         CCP1_InterruptHandler = _ccp_obj->CCP_Interrupt_
      +                          Handler;
  3172   0039A0  EE20 F005          	lfsr	2,5
  3173   0039A4  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3174   0039A6  26D9               	addwf	fsr2l,f,c
  3175   0039A8  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3176   0039AA  22DA               	addwfc	fsr2h,f,c
  3177   0039AC  CFDE F033          	movff	postinc2,_CCP1_InterruptHandler
  3178   0039B0  CFDD F034          	movff	postdec2,_CCP1_InterruptHandler+1
  3179   0039B4                     
  3180                           ;MCAL_Layer/CCP/hal_ccp.c: 514:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1);
  3181   0039B4  8ED0               	bsf	208,7,c	;volatile
  3182                           
  3183                           ;MCAL_Layer/CCP/hal_ccp.c: 515:             if(_ccp_obj->priority == INTERRUPT_HIGH_PRIO
      +                          RITY){
  3184   0039B6  EE20 F007          	lfsr	2,7
  3185   0039BA  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3186   0039BC  26D9               	addwf	fsr2l,f,c
  3187   0039BE  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3188   0039C0  22DA               	addwfc	fsr2h,f,c
  3189   0039C2  04DE               	decf	postinc2,w,c
  3190   0039C4  A4D8               	btfss	status,2,c
  3191   0039C6  EFE7  F01C         	goto	u8611
  3192   0039CA  EFE9  F01C         	goto	u8610
  3193   0039CE                     u8611:
  3194   0039CE  EFED  F01C         	goto	l8619
  3195   0039D2                     u8610:
  3196   0039D2                     
  3197                           ;MCAL_Layer/CCP/hal_ccp.c: 516:                 ((*((volatile IPR1_t *)(0xF9F))).CCP1IP=
      +                          1);
  3198   0039D2  849F               	bsf	159,2,c	;volatile
  3199                           
  3200                           ;MCAL_Layer/CCP/hal_ccp.c: 517:                 ((*((volatile INTCON_t *)(0xFF2))).GIEH 
      +                          = 1);
  3201   0039D4  8EF2               	bsf	242,7,c	;volatile
  3202                           
  3203                           ;MCAL_Layer/CCP/hal_ccp.c: 518:             }
  3204   0039D6  EFFE  F01C         	goto	l1402
  3205   0039DA                     l8619:
  3206   0039DA  EE20 F007          	lfsr	2,7
  3207   0039DE  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3208   0039E0  26D9               	addwf	fsr2l,f,c
  3209   0039E2  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3210   0039E4  22DA               	addwfc	fsr2h,f,c
  3211   0039E6  50DF               	movf	indf2,w,c
  3212   0039E8  A4D8               	btfss	status,2,c
  3213   0039EA  EFF9  F01C         	goto	u8621
  3214   0039EE  EFFB  F01C         	goto	u8620
  3215   0039F2                     u8621:
  3216   0039F2  EFCC  F01C         	goto	l8611
  3217   0039F6                     u8620:
  3218   0039F6                     
  3219                           ;MCAL_Layer/CCP/hal_ccp.c: 520:             {;MCAL_Layer/CCP/hal_ccp.c: 521:            
      +                            ((*((volatile IPR1_t *)(0xF9F))).CCP1IP=0);
  3220   0039F6  949F               	bcf	159,2,c	;volatile
  3221                           
  3222                           ;MCAL_Layer/CCP/hal_ccp.c: 522:              ((*((volatile INTCON_t *)(0xFF2))).GIEH = 1
      +                          );
  3223   0039F8  8EF2               	bsf	242,7,c	;volatile
  3224                           
  3225                           ;MCAL_Layer/CCP/hal_ccp.c: 523:              ((*((volatile INTCON_t *)(0xFF2))).GIEL = 1
      +                          );
  3226   0039FA  8CF2               	bsf	242,6,c	;volatile
  3227   0039FC                     l1402:
  3228   0039FC  0012               	return		;funcret
  3229   0039FE                     __end_of_CCP1_Interrupt_Init:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _CCP_Capture_Mode_Init *****************
  3233 ;; Defined at:
  3234 ;;		line 314 in file "MCAL_Layer/CCP/hal_ccp.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  _ccp_obj        2   42[COMRAM] PTR const struct .
  3237 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  ret             1   46[COMRAM] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        5 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 9
  3256 ;; This function calls:
  3257 ;;		_CCP_Capture_Compare_Timer_Config
  3258 ;; This function is called by:
  3259 ;;		_CCP_Init
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text17
  3264   002118                     __ptext17:
  3265                           	callstack 0
  3266   002118                     _CCP_Capture_Mode_Init:
  3267                           	callstack 17
  3268   002118                     
  3269                           ;MCAL_Layer/CCP/hal_ccp.c: 314: static Std_ReturnType CCP_Capture_Mode_Init(const ccp_t 
      +                          * _ccp_obj );MCAL_Layer/CCP/hal_ccp.c: 315: {;MCAL_Layer/CCP/hal_ccp.c: 316:     Std_Ret
      +                          urnType ret = (Std_ReturnType)0x01;
  3270   002118  0E01               	movlw	1
  3271   00211A  6E2F               	movwf	CCP_Capture_Mode_Init@ret^0,c
  3272   00211C                     
  3273                           ;MCAL_Layer/CCP/hal_ccp.c: 317:     if (((void*)0) == _ccp_obj)
  3274   00211C  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3275   00211E  102C               	iorwf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3276   002120  A4D8               	btfss	status,2,c
  3277   002122  EF95  F010         	goto	u8851
  3278   002126  EF97  F010         	goto	u8850
  3279   00212A                     u8851:
  3280   00212A  EF9B  F010         	goto	l8763
  3281   00212E                     u8850:
  3282   00212E                     l8761:
  3283                           
  3284                           ;MCAL_Layer/CCP/hal_ccp.c: 318:     {;MCAL_Layer/CCP/hal_ccp.c: 319:         ret = (Std_
      +                          ReturnType)0x00;
  3285   00212E  0E00               	movlw	0
  3286   002130  6E2F               	movwf	CCP_Capture_Mode_Init@ret^0,c
  3287                           
  3288                           ;MCAL_Layer/CCP/hal_ccp.c: 320:     }
  3289   002132  EF37  F011         	goto	l1344
  3290   002136                     l8763:
  3291                           
  3292                           ;MCAL_Layer/CCP/hal_ccp.c: 322:     {;MCAL_Layer/CCP/hal_ccp.c: 323:         CCP_Capture
      +                          _Compare_Timer_Config(_ccp_obj);
  3293   002136  C02B  F028         	movff	CCP_Capture_Mode_Init@_ccp_obj,CCP_Capture_Compare_Timer_Config@_ccp_obj
  3294   00213A  C02C  F029         	movff	CCP_Capture_Mode_Init@_ccp_obj+1,CCP_Capture_Compare_Timer_Config@_ccp_obj+1
  3295   00213E  ECFF  F01C         	call	_CCP_Capture_Compare_Timer_Config	;wreg free
  3296   002142                     
  3297                           ;MCAL_Layer/CCP/hal_ccp.c: 324:         if (_ccp_obj->ccp_inst == CCP1_INST)
  3298   002142  EE20 F001          	lfsr	2,1
  3299   002146  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3300   002148  26D9               	addwf	fsr2l,f,c
  3301   00214A  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3302   00214C  22DA               	addwfc	fsr2h,f,c
  3303   00214E  50DF               	movf	indf2,w,c
  3304   002150  A4D8               	btfss	status,2,c
  3305   002152  EFAD  F010         	goto	u8861
  3306   002156  EFAF  F010         	goto	u8860
  3307   00215A                     u8861:
  3308   00215A  EFEC  F010         	goto	l8781
  3309   00215E                     u8860:
  3310   00215E  EFC9  F010         	goto	l8779
  3311   002162                     l8769:
  3312                           
  3313                           ;MCAL_Layer/CCP/hal_ccp.c: 329:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x04));
  3314   002162  50BD               	movf	189,w,c	;volatile
  3315   002164  0BF0               	andlw	-16
  3316   002166  0904               	iorlw	4
  3317   002168  6EBD               	movwf	189,c	;volatile
  3318                           
  3319                           ;MCAL_Layer/CCP/hal_ccp.c: 330:                 break;
  3320   00216A  EF37  F011         	goto	l1344
  3321   00216E                     l8771:
  3322                           
  3323                           ;MCAL_Layer/CCP/hal_ccp.c: 332:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x05));
  3324   00216E  50BD               	movf	189,w,c	;volatile
  3325   002170  0BF0               	andlw	-16
  3326   002172  0905               	iorlw	5
  3327   002174  6EBD               	movwf	189,c	;volatile
  3328                           
  3329                           ;MCAL_Layer/CCP/hal_ccp.c: 333:                 break;
  3330   002176  EF37  F011         	goto	l1344
  3331   00217A                     l8773:
  3332                           
  3333                           ;MCAL_Layer/CCP/hal_ccp.c: 335:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x06));
  3334   00217A  50BD               	movf	189,w,c	;volatile
  3335   00217C  0BF0               	andlw	-16
  3336   00217E  0906               	iorlw	6
  3337   002180  6EBD               	movwf	189,c	;volatile
  3338                           
  3339                           ;MCAL_Layer/CCP/hal_ccp.c: 336:                 break;
  3340   002182  EF37  F011         	goto	l1344
  3341   002186                     l8775:
  3342                           
  3343                           ;MCAL_Layer/CCP/hal_ccp.c: 338:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x07));
  3344   002186  50BD               	movf	189,w,c	;volatile
  3345   002188  0BF0               	andlw	-16
  3346   00218A  0907               	iorlw	7
  3347   00218C  6EBD               	movwf	189,c	;volatile
  3348                           
  3349                           ;MCAL_Layer/CCP/hal_ccp.c: 339:                 break;
  3350   00218E  EF37  F011         	goto	l1344
  3351   002192                     l8779:
  3352   002192  EE20 F003          	lfsr	2,3
  3353   002196  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3354   002198  26D9               	addwf	fsr2l,f,c
  3355   00219A  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3356   00219C  22DA               	addwfc	fsr2h,f,c
  3357   00219E  50DF               	movf	indf2,w,c
  3358   0021A0  6E2D               	movwf	??_CCP_Capture_Mode_Init^0,c
  3359   0021A2  6A2E               	clrf	(??_CCP_Capture_Mode_Init+1)^0,c
  3360                           
  3361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 1, Range of values is 0 to 0
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte            4     3 (average)
  3367                           ;	Chosen strategy is simple_byte
  3368   0021A4  502E               	movf	(??_CCP_Capture_Mode_Init+1)^0,w,c
  3369   0021A6  0A00               	xorlw	0	; case 0
  3370   0021A8  B4D8               	btfsc	status,2,c
  3371   0021AA  EFD9  F010         	goto	l10341
  3372   0021AE  EF97  F010         	goto	l8761
  3373   0021B2                     l10341:
  3374                           
  3375                           ; Switch size 1, requested type "simple"
  3376                           ; Number of cases is 4, Range of values is 4 to 7
  3377                           ; switch strategies available:
  3378                           ; Name         Instructions Cycles
  3379                           ; simple_byte           13     7 (average)
  3380                           ;	Chosen strategy is simple_byte
  3381   0021B2  502D               	movf	??_CCP_Capture_Mode_Init^0,w,c
  3382   0021B4  0A04               	xorlw	4	; case 4
  3383   0021B6  B4D8               	btfsc	status,2,c
  3384   0021B8  EFB1  F010         	goto	l8769
  3385   0021BC  0A01               	xorlw	1	; case 5
  3386   0021BE  B4D8               	btfsc	status,2,c
  3387   0021C0  EFB7  F010         	goto	l8771
  3388   0021C4  0A03               	xorlw	3	; case 6
  3389   0021C6  B4D8               	btfsc	status,2,c
  3390   0021C8  EFBD  F010         	goto	l8773
  3391   0021CC  0A01               	xorlw	1	; case 7
  3392   0021CE  B4D8               	btfsc	status,2,c
  3393   0021D0  EFC3  F010         	goto	l8775
  3394   0021D4  EF97  F010         	goto	l8761
  3395   0021D8                     l8781:
  3396   0021D8  EE20 F001          	lfsr	2,1
  3397   0021DC  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3398   0021DE  26D9               	addwf	fsr2l,f,c
  3399   0021E0  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3400   0021E2  22DA               	addwfc	fsr2h,f,c
  3401   0021E4  04DE               	decf	postinc2,w,c
  3402   0021E6  A4D8               	btfss	status,2,c
  3403   0021E8  EFF8  F010         	goto	u8871
  3404   0021EC  EFFA  F010         	goto	u8870
  3405   0021F0                     u8871:
  3406   0021F0  EF97  F010         	goto	l8761
  3407   0021F4                     u8870:
  3408   0021F4  EF14  F011         	goto	l8795
  3409   0021F8                     l8785:
  3410                           
  3411                           ;MCAL_Layer/CCP/hal_ccp.c: 348:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x04));
  3412   0021F8  50BA               	movf	186,w,c	;volatile
  3413   0021FA  0BF0               	andlw	-16
  3414   0021FC  0904               	iorlw	4
  3415   0021FE  6EBA               	movwf	186,c	;volatile
  3416                           
  3417                           ;MCAL_Layer/CCP/hal_ccp.c: 349:                 break;
  3418   002200  EF37  F011         	goto	l1344
  3419   002204                     l8787:
  3420                           
  3421                           ;MCAL_Layer/CCP/hal_ccp.c: 351:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x05));
  3422   002204  50BA               	movf	186,w,c	;volatile
  3423   002206  0BF0               	andlw	-16
  3424   002208  0905               	iorlw	5
  3425   00220A  6EBA               	movwf	186,c	;volatile
  3426                           
  3427                           ;MCAL_Layer/CCP/hal_ccp.c: 352:                 break;
  3428   00220C  EF37  F011         	goto	l1344
  3429   002210                     l8789:
  3430                           
  3431                           ;MCAL_Layer/CCP/hal_ccp.c: 354:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x06));
  3432   002210  50BA               	movf	186,w,c	;volatile
  3433   002212  0BF0               	andlw	-16
  3434   002214  0906               	iorlw	6
  3435   002216  6EBA               	movwf	186,c	;volatile
  3436                           
  3437                           ;MCAL_Layer/CCP/hal_ccp.c: 355:                 break;
  3438   002218  EF37  F011         	goto	l1344
  3439   00221C                     l8791:
  3440                           
  3441                           ;MCAL_Layer/CCP/hal_ccp.c: 357:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x07));
  3442   00221C  50BA               	movf	186,w,c	;volatile
  3443   00221E  0BF0               	andlw	-16
  3444   002220  0907               	iorlw	7
  3445   002222  6EBA               	movwf	186,c	;volatile
  3446                           
  3447                           ;MCAL_Layer/CCP/hal_ccp.c: 358:                 break;
  3448   002224  EF37  F011         	goto	l1344
  3449   002228                     l8795:
  3450   002228  EE20 F003          	lfsr	2,3
  3451   00222C  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3452   00222E  26D9               	addwf	fsr2l,f,c
  3453   002230  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3454   002232  22DA               	addwfc	fsr2h,f,c
  3455   002234  50DF               	movf	indf2,w,c
  3456   002236  6E2D               	movwf	??_CCP_Capture_Mode_Init^0,c
  3457   002238  6A2E               	clrf	(??_CCP_Capture_Mode_Init+1)^0,c
  3458                           
  3459                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3460                           ; Switch size 1, requested type "simple"
  3461                           ; Number of cases is 1, Range of values is 0 to 0
  3462                           ; switch strategies available:
  3463                           ; Name         Instructions Cycles
  3464                           ; simple_byte            4     3 (average)
  3465                           ;	Chosen strategy is simple_byte
  3466   00223A  502E               	movf	(??_CCP_Capture_Mode_Init+1)^0,w,c
  3467   00223C  0A00               	xorlw	0	; case 0
  3468   00223E  B4D8               	btfsc	status,2,c
  3469   002240  EF24  F011         	goto	l10343
  3470   002244  EF97  F010         	goto	l8761
  3471   002248                     l10343:
  3472                           
  3473                           ; Switch size 1, requested type "simple"
  3474                           ; Number of cases is 4, Range of values is 4 to 7
  3475                           ; switch strategies available:
  3476                           ; Name         Instructions Cycles
  3477                           ; simple_byte           13     7 (average)
  3478                           ;	Chosen strategy is simple_byte
  3479   002248  502D               	movf	??_CCP_Capture_Mode_Init^0,w,c
  3480   00224A  0A04               	xorlw	4	; case 4
  3481   00224C  B4D8               	btfsc	status,2,c
  3482   00224E  EFFC  F010         	goto	l8785
  3483   002252  0A01               	xorlw	1	; case 5
  3484   002254  B4D8               	btfsc	status,2,c
  3485   002256  EF02  F011         	goto	l8787
  3486   00225A  0A03               	xorlw	3	; case 6
  3487   00225C  B4D8               	btfsc	status,2,c
  3488   00225E  EF08  F011         	goto	l8789
  3489   002262  0A01               	xorlw	1	; case 7
  3490   002264  B4D8               	btfsc	status,2,c
  3491   002266  EF0E  F011         	goto	l8791
  3492   00226A  EF97  F010         	goto	l8761
  3493   00226E                     l1344:
  3494                           
  3495                           ;MCAL_Layer/CCP/hal_ccp.c: 365:     return ret;
  3496   00226E  502F               	movf	CCP_Capture_Mode_Init@ret^0,w,c
  3497   002270  0012               	return		;funcret
  3498   002272                     __end_of_CCP_Capture_Mode_Init:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _CCP_Capture_Compare_Timer_Config *****************
  3502 ;; Defined at:
  3503 ;;		line 469 in file "MCAL_Layer/CCP/hal_ccp.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  3506 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  ret             1    0        unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      unsigned char 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;Total ram usage:        3 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 8
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_CCP_Capture_Mode_Init
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text18
  3533   0039FE                     __ptext18:
  3534                           	callstack 0
  3535   0039FE                     _CCP_Capture_Compare_Timer_Config:
  3536                           	callstack 17
  3537   0039FE                     
  3538                           ;MCAL_Layer/CCP/hal_ccp.c: 472:     if (((void*)0) == _ccp_obj)
  3539   0039FE  5028               	movf	CCP_Capture_Compare_Timer_Config@_ccp_obj^0,w,c
  3540   003A00  1029               	iorwf	(CCP_Capture_Compare_Timer_Config@_ccp_obj+1)^0,w,c
  3541   003A02  A4D8               	btfss	status,2,c
  3542   003A04  EF06  F01D         	goto	u8561
  3543   003A08  EF08  F01D         	goto	u8560
  3544   003A0C                     u8561:
  3545   003A0C  EF0A  F01D         	goto	l8597
  3546   003A10                     u8560:
  3547   003A10                     l8595:
  3548                           
  3549                           ;MCAL_Layer/CCP/hal_ccp.c: 475:     }
  3550   003A10  EF39  F01D         	goto	l1393
  3551   003A14                     l8597:
  3552                           
  3553                           ;MCAL_Layer/CCP/hal_ccp.c: 477:     {;MCAL_Layer/CCP/hal_ccp.c: 478:         if (_ccp_ob
      +                          j->ccp_capt_comp_timer == CCP1_CCP2_TIMER1)
  3554   003A14  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3555   003A18  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3556   003A1C  50DF               	movf	indf2,w,c
  3557   003A1E  A4D8               	btfss	status,2,c
  3558   003A20  EF14  F01D         	goto	u8571
  3559   003A24  EF16  F01D         	goto	u8570
  3560   003A28                     u8571:
  3561   003A28  EF1A  F01D         	goto	l8599
  3562   003A2C                     u8570:
  3563   003A2C  96B1               	bcf	177,3,c	;volatile
  3564   003A2E  9CB1               	bcf	177,6,c	;volatile
  3565   003A30  EF39  F01D         	goto	l1393
  3566   003A34                     l8599:
  3567   003A34  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3568   003A38  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3569   003A3C  04DE               	decf	postinc2,w,c
  3570   003A3E  A4D8               	btfss	status,2,c
  3571   003A40  EF24  F01D         	goto	u8581
  3572   003A44  EF26  F01D         	goto	u8580
  3573   003A48                     u8581:
  3574   003A48  EF2A  F01D         	goto	l8601
  3575   003A4C                     u8580:
  3576   003A4C  86B1               	bsf	177,3,c	;volatile
  3577   003A4E  9CB1               	bcf	177,6,c	;volatile
  3578   003A50  EF39  F01D         	goto	l1393
  3579   003A54                     l8601:
  3580   003A54  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3581   003A58  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3582   003A5C  0E02               	movlw	2
  3583   003A5E  18DE               	xorwf	postinc2,w,c
  3584   003A60  A4D8               	btfss	status,2,c
  3585   003A62  EF35  F01D         	goto	u8591
  3586   003A66  EF37  F01D         	goto	u8590
  3587   003A6A                     u8591:
  3588   003A6A  EF08  F01D         	goto	l8595
  3589   003A6E                     u8590:
  3590   003A6E  96B1               	bcf	177,3,c	;volatile
  3591   003A70  8CB1               	bsf	177,6,c	;volatile
  3592   003A72                     l1393:
  3593   003A72  0012               	return		;funcret
  3594   003A74                     __end_of_CCP_Capture_Compare_Timer_Config:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _ecu_layer_initialize *****************
  3598 ;; Defined at:
  3599 ;;		line 154 in file "ECU_Layer/ecu_layer_init.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  ret             1    0        unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 12
  3620 ;; This function calls:
  3621 ;;		_lcd_4bit_initialize
  3622 ;; This function is called by:
  3623 ;;		_HeartRate_Measure_Init
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text19
  3628   00401E                     __ptext19:
  3629                           	callstack 0
  3630   00401E                     _ecu_layer_initialize:
  3631                           	callstack 17
  3632   00401E  0EFA               	movlw	low _lcd1
  3633   004020  0100               	movlb	0	; () banked
  3634   004022  6FBC               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  3635   004024  0E00               	movlw	high _lcd1
  3636   004026  6FBD               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  3637   004028  EC1F  F015         	call	_lcd_4bit_initialize	;wreg free
  3638   00402C  0012               	return		;funcret
  3639   00402E                     __end_of_ecu_layer_initialize:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _lcd_4bit_initialize *****************
  3643 ;; Defined at:
  3644 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  lcd             2    9[BANK0 ] PTR const struct .
  3647 ;;		 -> lcd1(6), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  ret             1   14[BANK0 ] unsigned char 
  3650 ;;  l_data_pins_    1   13[BANK0 ] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      unsigned char 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        6 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 11
  3667 ;; This function calls:
  3668 ;;		_gpio_pin_initialize
  3669 ;;		_lcd_4bit_send_command
  3670 ;; This function is called by:
  3671 ;;		_ecu_layer_initialize
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text20
  3676   002A3E                     __ptext20:
  3677                           	callstack 0
  3678   002A3E                     _lcd_4bit_initialize:
  3679                           	callstack 17
  3680   002A3E                     
  3681                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  3682   002A3E  0E00               	movlw	0
  3683   002A40  0100               	movlb	0	; () banked
  3684   002A42  6FC0               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3685   002A44                     
  3686                           ; BSR set to: 0
  3687                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  3688   002A44  51BC               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  3689   002A46  11BD               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3690   002A48  A4D8               	btfss	status,2,c
  3691   002A4A  EF29  F015         	goto	u9041
  3692   002A4E  EF2B  F015         	goto	u9040
  3693   002A52                     u9041:
  3694   002A52  EF2F  F015         	goto	l8981
  3695   002A56                     u9040:
  3696   002A56                     
  3697                           ; BSR set to: 0
  3698                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  3699   002A56  0E00               	movlw	0
  3700   002A58  6FC1               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3701                           
  3702                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  3703   002A5A  EF95  F015         	goto	l9009
  3704   002A5E                     l8981:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  3708   002A5E  C0BC  F0B4         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  3709   002A62  C0BD  F0B5         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  3710   002A66  EC47  F01A         	call	_gpio_pin_initialize	;wreg free
  3711   002A6A  0100               	movlb	0	; () banked
  3712   002A6C  6FC1               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3713                           
  3714                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  3715   002A6E  0E01               	movlw	1
  3716   002A70  25BC               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  3717   002A72  6FB4               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  3718   002A74  0E00               	movlw	0
  3719   002A76  21BD               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3720   002A78  6FB5               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  3721   002A7A  EC47  F01A         	call	_gpio_pin_initialize	;wreg free
  3722   002A7E  0100               	movlb	0	; () banked
  3723   002A80  6FC1               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3724   002A82                     
  3725                           ; BSR set to: 0
  3726                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  3727   002A82  0E00               	movlw	0
  3728   002A84  6FC0               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3729   002A86                     l8989:
  3730                           
  3731                           ; BSR set to: 0
  3732   002A86  51C0               	movf	lcd_4bit_initialize@l_data_pins_counter& (0+255),w,b
  3733   002A88  25BC               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  3734   002A8A  6FBE               	movwf	??_lcd_4bit_initialize& (0+255),b
  3735   002A8C  0E00               	movlw	0
  3736   002A8E  21BD               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3737   002A90  6FBF               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  3738   002A92  0E02               	movlw	2
  3739   002A94  25BE               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  3740   002A96  6FB4               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  3741   002A98  0E00               	movlw	0
  3742   002A9A  21BF               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  3743   002A9C  6FB5               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  3744   002A9E  EC47  F01A         	call	_gpio_pin_initialize	;wreg free
  3745   002AA2                     
  3746                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  3747   002AA2  0100               	movlb	0	; () banked
  3748   002AA4  2BC0               	incf	lcd_4bit_initialize@l_data_pins_counter& (0+255),f,b
  3749   002AA6                     
  3750                           ; BSR set to: 0
  3751   002AA6  0E03               	movlw	3
  3752   002AA8  65C0               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3753   002AAA  EF59  F015         	goto	u9051
  3754   002AAE  EF5B  F015         	goto	u9050
  3755   002AB2                     u9051:
  3756   002AB2  EF43  F015         	goto	l8989
  3757   002AB6                     u9050:
  3758   002AB6                     
  3759                           ; BSR set to: 0
  3760   002AB6  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3761   002ABA  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3762   002ABE  0E33               	movlw	51
  3763   002AC0  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3764   002AC2  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3765   002AC6                     
  3766                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  3767   002AC6  0E32               	movlw	50
  3768   002AC8                     u10457:
  3769   002AC8  2EE8               	decfsz	wreg,f,c
  3770   002ACA  D7FE               	bra	u10457
  3771   002ACC  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3772   002AD0  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3773   002AD4  0E32               	movlw	50
  3774   002AD6  0100               	movlb	0	; () banked
  3775   002AD8  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3776   002ADA  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3777   002ADE  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3778   002AE2  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3779   002AE6  0E28               	movlw	40
  3780   002AE8  0100               	movlb	0	; () banked
  3781   002AEA  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3782   002AEC  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3783   002AF0  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3784   002AF4  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3785   002AF8  0E01               	movlw	1
  3786   002AFA  0100               	movlb	0	; () banked
  3787   002AFC  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3788   002AFE  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3789   002B02  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3790   002B06  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3791   002B0A  0E06               	movlw	6
  3792   002B0C  0100               	movlb	0	; () banked
  3793   002B0E  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3794   002B10  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3795   002B14                     
  3796                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret=lcd_4bit_send_command(lcd,0X0C);
  3797   002B14  C0BC  F0B8         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3798   002B18  C0BD  F0B9         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3799   002B1C  0E0C               	movlw	12
  3800   002B1E  0100               	movlb	0	; () banked
  3801   002B20  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  3802   002B22  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  3803   002B26  0100               	movlb	0	; () banked
  3804   002B28  6FC1               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3805   002B2A                     l9009:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     return ret;
  3809   002B2A  51C1               	movf	lcd_4bit_initialize@ret& (0+255),w,b
  3810   002B2C                     
  3811                           ; BSR set to: 0
  3812   002B2C  0012               	return		;funcret
  3813   002B2E                     __end_of_lcd_4bit_initialize:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _gpio_pin_initialize *****************
  3817 ;; Defined at:
  3818 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  pin_config      2    1[BANK0 ] PTR const struct .
  3821 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  3822 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  ret             1    4[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      unsigned char 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3834 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;Total ram usage:        4 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 9
  3841 ;; This function calls:
  3842 ;;		_gpio_pin_direction_initialize
  3843 ;;		_gpio_pin_write_logic
  3844 ;; This function is called by:
  3845 ;;		_lcd_4bit_initialize
  3846 ;;		_CCP_Init
  3847 ;;		_seven_segment_initialize
  3848 ;;		_lcd_8bit_initialize
  3849 ;;		_dc_motor_initialize
  3850 ;;		_keypad_initialize
  3851 ;;		_led_initialize
  3852 ;;		_relay_initialize
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text21
  3857   00348E                     __ptext21:
  3858                           	callstack 0
  3859   00348E                     _gpio_pin_initialize:
  3860                           	callstack 17
  3861   00348E                     
  3862                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  3863   00348E  0100               	movlb	0	; () banked
  3864   003490  51B4               	movf	gpio_pin_initialize@pin_config& (0+255),w,b
  3865   003492  11B5               	iorwf	(gpio_pin_initialize@pin_config+1)& (0+255),w,b
  3866   003494  B4D8               	btfsc	status,2,c
  3867   003496  EF4F  F01A         	goto	u8811
  3868   00349A  EF51  F01A         	goto	u8810
  3869   00349E                     u8811:
  3870   00349E  EF71  F01A         	goto	l8737
  3871   0034A2                     u8810:
  3872   0034A2                     
  3873                           ; BSR set to: 0
  3874   0034A2  C0B4  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  3875   0034A6  C0B5  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  3876   0034AA  30DF               	rrcf	223,w,c
  3877   0034AC  32E8               	rrcf	wreg,f,c
  3878   0034AE  32E8               	rrcf	wreg,f,c
  3879   0034B0  0B07               	andlw	7
  3880   0034B2  6FB6               	movwf	??_gpio_pin_initialize& (0+255),b
  3881   0034B4  0E08               	movlw	8
  3882   0034B6  61B6               	cpfslt	??_gpio_pin_initialize& (0+255),b
  3883   0034B8  EF60  F01A         	goto	u8821
  3884   0034BC  EF62  F01A         	goto	u8820
  3885   0034C0                     u8821:
  3886   0034C0  EF71  F01A         	goto	l8737
  3887   0034C4                     u8820:
  3888   0034C4                     
  3889                           ; BSR set to: 0
  3890   0034C4  C0B4  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  3891   0034C8  C0B5  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  3892   0034CC  50DF               	movf	223,w,c
  3893   0034CE  0B07               	andlw	7
  3894   0034D0  6FB6               	movwf	??_gpio_pin_initialize& (0+255),b
  3895   0034D2  0E04               	movlw	4
  3896   0034D4  65B6               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  3897   0034D6  EF6F  F01A         	goto	u8831
  3898   0034DA  EF71  F01A         	goto	u8830
  3899   0034DE                     u8831:
  3900   0034DE  EF75  F01A         	goto	l8739
  3901   0034E2                     u8830:
  3902   0034E2                     l8737:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  3906   0034E2  0E00               	movlw	0
  3907   0034E4  6FB7               	movwf	gpio_pin_initialize@ret& (0+255),b
  3908                           
  3909                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  3910   0034E6  EF8D  F01A         	goto	l8741
  3911   0034EA                     l8739:
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  3915   0034EA  C0B4  F028         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  3916   0034EE  C0B5  F029         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  3917   0034F2  ECDB  F00F         	call	_gpio_pin_direction_initialize	;wreg free
  3918   0034F6  0100               	movlb	0	; () banked
  3919   0034F8  6FB7               	movwf	gpio_pin_initialize@ret& (0+255),b
  3920                           
  3921                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  3922   0034FA  C0B4  F028         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  3923   0034FE  C0B5  F029         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  3924   003502  C0B4  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  3925   003506  C0B5  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  3926   00350A  0E00               	movlw	0
  3927   00350C  BEDF               	btfsc	indf2,7,c
  3928   00350E  0E01               	movlw	1
  3929   003510  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  3930   003512  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  3931   003516  0100               	movlb	0	; () banked
  3932   003518  6FB7               	movwf	gpio_pin_initialize@ret& (0+255),b
  3933   00351A                     l8741:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  3937   00351A  51B7               	movf	gpio_pin_initialize@ret& (0+255),w,b
  3938   00351C                     
  3939                           ; BSR set to: 0
  3940   00351C  0012               	return		;funcret
  3941   00351E                     __end_of_gpio_pin_initialize:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _gpio_pin_direction_initialize *****************
  3945 ;; Defined at:
  3946 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  pin_config      2   39[COMRAM] PTR const struct .
  3949 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  3950 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  ret             1   47[COMRAM] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      unsigned char 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;Total ram usage:        9 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 8
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_gpio_pin_initialize
  3973 ;;		_button_initialize
  3974 ;;		_keypad_initialize
  3975 ;;		_Interrupt_INTx_Pin_Init
  3976 ;;		_Interrupt_RBx_Pin_Init
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text22
  3981   001FB6                     __ptext22:
  3982                           	callstack 0
  3983   001FB6                     _gpio_pin_direction_initialize:
  3984                           	callstack 17
  3985   001FB6                     
  3986                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  3987   001FB6  0E01               	movlw	1
  3988   001FB8  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  3989   001FBA                     
  3990                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  3991   001FBA  5028               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  3992   001FBC  1029               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  3993   001FBE  B4D8               	btfsc	status,2,c
  3994   001FC0  EFE4  F00F         	goto	u8471
  3995   001FC4  EFE6  F00F         	goto	u8470
  3996   001FC8                     u8471:
  3997   001FC8  EF06  F010         	goto	l8547
  3998   001FCC                     u8470:
  3999   001FCC  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4000   001FD0  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4001   001FD4  30DF               	rrcf	223,w,c
  4002   001FD6  32E8               	rrcf	wreg,f,c
  4003   001FD8  32E8               	rrcf	wreg,f,c
  4004   001FDA  0B07               	andlw	7
  4005   001FDC  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4006   001FDE  0E08               	movlw	8
  4007   001FE0  602A               	cpfslt	??_gpio_pin_direction_initialize^0,c
  4008   001FE2  EFF5  F00F         	goto	u8481
  4009   001FE6  EFF7  F00F         	goto	u8480
  4010   001FEA                     u8481:
  4011   001FEA  EF06  F010         	goto	l8547
  4012   001FEE                     u8480:
  4013   001FEE  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4014   001FF2  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4015   001FF6  50DF               	movf	223,w,c
  4016   001FF8  0B07               	andlw	7
  4017   001FFA  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4018   001FFC  0E04               	movlw	4
  4019   001FFE  642A               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4020   002000  EF04  F010         	goto	u8491
  4021   002004  EF06  F010         	goto	u8490
  4022   002008                     u8491:
  4023   002008  EF69  F010         	goto	l8555
  4024   00200C                     u8490:
  4025   00200C                     l8547:
  4026                           
  4027                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  4028   00200C  0E00               	movlw	0
  4029   00200E  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  4030                           
  4031                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  4032   002010  EF8A  F010         	goto	l8557
  4033   002014                     l8549:
  4034                           
  4035                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4036   002014  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4037   002018  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4038   00201C  30DF               	rrcf	223,w,c
  4039   00201E  32E8               	rrcf	wreg,f,c
  4040   002020  32E8               	rrcf	wreg,f,c
  4041   002022  0B07               	andlw	7
  4042   002024  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4043   002026  0E01               	movlw	1
  4044   002028  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4045   00202A  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  4046   00202C  EF1A  F010         	goto	u8504
  4047   002030                     u8505:
  4048   002030  90D8               	bcf	status,0,c
  4049   002032  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4050   002034                     u8504:
  4051   002034  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4052   002036  EF18  F010         	goto	u8505
  4053   00203A  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4054   00203C  0AFF               	xorlw	255
  4055   00203E  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4056   002040  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4057   002044  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4058   002048  50DF               	movf	223,w,c
  4059   00204A  0B07               	andlw	7
  4060   00204C  6E2D               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4061   00204E  502D               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4062   002050  0D02               	mullw	2
  4063   002052  0EF0               	movlw	low _tris_registers
  4064   002054  24F3               	addwf	243,w,c
  4065   002056  6ED9               	movwf	fsr2l,c
  4066   002058  0E00               	movlw	high _tris_registers
  4067   00205A  20F4               	addwfc	prodh,w,c
  4068   00205C  6EDA               	movwf	fsr2h,c
  4069   00205E  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4070   002062  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4071   002066  C02E  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4072   00206A  C02F  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4073   00206E  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4074   002070  16DF               	andwf	indf2,f,c
  4075                           
  4076                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  4077   002072  EF8A  F010         	goto	l8557
  4078   002076                     l8551:
  4079                           
  4080                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4081   002076  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4082   00207A  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4083   00207E  30DF               	rrcf	223,w,c
  4084   002080  32E8               	rrcf	wreg,f,c
  4085   002082  32E8               	rrcf	wreg,f,c
  4086   002084  0B07               	andlw	7
  4087   002086  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4088   002088  0E01               	movlw	1
  4089   00208A  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4090   00208C  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  4091   00208E  EF4B  F010         	goto	u8514
  4092   002092                     u8515:
  4093   002092  90D8               	bcf	status,0,c
  4094   002094  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4095   002096                     u8514:
  4096   002096  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4097   002098  EF49  F010         	goto	u8515
  4098   00209C  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4099   0020A0  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4100   0020A4  50DF               	movf	223,w,c
  4101   0020A6  0B07               	andlw	7
  4102   0020A8  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4103   0020AA  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4104   0020AC  0D02               	mullw	2
  4105   0020AE  0EF0               	movlw	low _tris_registers
  4106   0020B0  24F3               	addwf	243,w,c
  4107   0020B2  6ED9               	movwf	fsr2l,c
  4108   0020B4  0E00               	movlw	high _tris_registers
  4109   0020B6  20F4               	addwfc	prodh,w,c
  4110   0020B8  6EDA               	movwf	fsr2h,c
  4111   0020BA  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4112   0020BE  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4113   0020C2  C02D  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4114   0020C6  C02E  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4115   0020CA  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4116   0020CC  12DF               	iorwf	indf2,f,c
  4117                           
  4118                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  4119   0020CE  EF8A  F010         	goto	l8557
  4120   0020D2                     l8555:
  4121   0020D2  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4122   0020D6  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4123   0020DA  BCDF               	btfsc	indf2,6,c
  4124   0020DC  EF72  F010         	goto	u8521
  4125   0020E0  EF75  F010         	goto	u8520
  4126   0020E4                     u8521:
  4127   0020E4  0E01               	movlw	1
  4128   0020E6  EF76  F010         	goto	u8530
  4129   0020EA                     u8520:
  4130   0020EA  0E00               	movlw	0
  4131   0020EC                     u8530:
  4132   0020EC  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4133   0020EE  6A2B               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4134                           
  4135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4136                           ; Switch size 1, requested type "simple"
  4137                           ; Number of cases is 1, Range of values is 0 to 0
  4138                           ; switch strategies available:
  4139                           ; Name         Instructions Cycles
  4140                           ; simple_byte            4     3 (average)
  4141                           ;	Chosen strategy is simple_byte
  4142   0020F0  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4143   0020F2  0A00               	xorlw	0	; case 0
  4144   0020F4  B4D8               	btfsc	status,2,c
  4145   0020F6  EF7F  F010         	goto	l10345
  4146   0020FA  EF06  F010         	goto	l8547
  4147   0020FE                     l10345:
  4148                           
  4149                           ; Switch size 1, requested type "simple"
  4150                           ; Number of cases is 2, Range of values is 0 to 1
  4151                           ; switch strategies available:
  4152                           ; Name         Instructions Cycles
  4153                           ; simple_byte            7     4 (average)
  4154                           ;	Chosen strategy is simple_byte
  4155   0020FE  502A               	movf	??_gpio_pin_direction_initialize^0,w,c
  4156   002100  0A00               	xorlw	0	; case 0
  4157   002102  B4D8               	btfsc	status,2,c
  4158   002104  EF0A  F010         	goto	l8549
  4159   002108  0A01               	xorlw	1	; case 1
  4160   00210A  B4D8               	btfsc	status,2,c
  4161   00210C  EF3B  F010         	goto	l8551
  4162   002110  EF06  F010         	goto	l8547
  4163   002114                     l8557:
  4164                           
  4165                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  4166   002114  5030               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4167   002116  0012               	return		;funcret
  4168   002118                     __end_of_gpio_pin_direction_initialize:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _HeartRate_Display *****************
  4172 ;; Defined at:
  4173 ;;		line 44 in file "HeartRate_Measure.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  HeartRate_BP    1    wreg     unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  HeartRate_BP    1   33[BANK1 ] unsigned char 
  4178 ;;  BPM_Str         4   34[BANK1 ] unsigned char [4]
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;Total ram usage:        6 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 17
  4195 ;; This function calls:
  4196 ;;		_convert_uint8_to_string
  4197 ;;		_lcd_4bit_send_custom_char
  4198 ;;		_lcd_4bit_send_string
  4199 ;;		_lcd_4bit_send_string_pos
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text23
  4206   002C1C                     __ptext23:
  4207                           	callstack 0
  4208   002C1C                     _HeartRate_Display:
  4209                           	callstack 13
  4210                           
  4211                           ;incstack = 0
  4212                           ;HeartRate_Display@HeartRate_BPM stored from wreg
  4213   002C1C  0101               	movlb	1	; () banked
  4214   002C1E  6F5F               	movwf	HeartRate_Display@HeartRate_BPM& (0+255),b
  4215   002C20                     
  4216                           ;HeartRate_Measure.c: 44: void HeartRate_Display(uint8 HeartRate_BPM);HeartRate_Measure.
      +                          c: 45: {;HeartRate_Measure.c: 46:     static uint8 flag =0;;HeartRate_Measure.c: 47:    
      +                           uint8 BPM_Str[4]={0};
  4217   002C20  0E00               	movlw	0
  4218   002C22  0101               	movlb	1	; () banked
  4219   002C24  6F60               	movwf	HeartRate_Display@BPM_Str& (0+255),b
  4220   002C26  0E00               	movlw	0
  4221   002C28  6F61               	movwf	(HeartRate_Display@BPM_Str+1)& (0+255),b
  4222   002C2A  0E00               	movlw	0
  4223   002C2C  6F62               	movwf	(HeartRate_Display@BPM_Str+2)& (0+255),b
  4224   002C2E  0E00               	movlw	0
  4225   002C30  6F63               	movwf	(HeartRate_Display@BPM_Str+3)& (0+255),b
  4226   002C32                     
  4227                           ; BSR set to: 1
  4228                           ;HeartRate_Measure.c: 48:     lcd_4bit_send_string_pos(&lcd1,1,1," BPM = ");
  4229   002C32  0EFA               	movlw	low _lcd1
  4230   002C34  0100               	movlb	0	; () banked
  4231   002C36  6FC2               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  4232   002C38  0E00               	movlw	high _lcd1
  4233   002C3A  6FC3               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  4234   002C3C  0E01               	movlw	1
  4235   002C3E  6FC4               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  4236   002C40  0E01               	movlw	1
  4237   002C42  6FC5               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  4238   002C44  0E49               	movlw	low STR_7
  4239   002C46  6FC6               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  4240   002C48  0E10               	movlw	high STR_7
  4241   002C4A  6FC7               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  4242   002C4C  EC3A  F01D         	call	_lcd_4bit_send_string_pos	;wreg free
  4243   002C50                     
  4244                           ;HeartRate_Measure.c: 49:     convert_uint8_to_string(HeartRate_BPM,BPM_Str);
  4245   002C50  0E60               	movlw	low HeartRate_Display@BPM_Str
  4246   002C52  0101               	movlb	1	; () banked
  4247   002C54  6F56               	movwf	convert_uint8_to_string@str& (0+255),b
  4248   002C56  0E01               	movlw	high HeartRate_Display@BPM_Str
  4249   002C58  6F57               	movwf	(convert_uint8_to_string@str+1)& (0+255),b
  4250   002C5A  515F               	movf	HeartRate_Display@HeartRate_BPM& (0+255),w,b
  4251   002C5C  EC47  F017         	call	_convert_uint8_to_string
  4252   002C60                     
  4253                           ;HeartRate_Measure.c: 50:     lcd_4bit_send_string(&lcd1,BPM_Str);
  4254   002C60  0EFA               	movlw	low _lcd1
  4255   002C62  0100               	movlb	0	; () banked
  4256   002C64  6FBC               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  4257   002C66  0E00               	movlw	high _lcd1
  4258   002C68  6FBD               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  4259   002C6A  0E60               	movlw	low HeartRate_Display@BPM_Str
  4260   002C6C  6FBE               	movwf	lcd_4bit_send_string@str& (0+255),b
  4261   002C6E  0E01               	movlw	high HeartRate_Display@BPM_Str
  4262   002C70  6FBF               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  4263   002C72  EC27  F01E         	call	_lcd_4bit_send_string	;wreg free
  4264   002C76                     
  4265                           ;HeartRate_Measure.c: 51:     if(flag == 0){
  4266   002C76  0100               	movlb	0	; () banked
  4267   002C78  5198               	movf	HeartRate_Display@flag& (0+255),w,b
  4268   002C7A  A4D8               	btfss	status,2,c
  4269   002C7C  EF42  F016         	goto	u9881
  4270   002C80  EF44  F016         	goto	u9880
  4271   002C84                     u9881:
  4272   002C84  EF62  F016         	goto	l9653
  4273   002C88                     u9880:
  4274   002C88                     
  4275                           ; BSR set to: 0
  4276                           ;HeartRate_Measure.c: 52:         lcd_4bit_send_custom_char(&lcd1,1,11,Hollow_Heart_Cust
      +                          om_Char,0);
  4277   002C88  0EFA               	movlw	low _lcd1
  4278   002C8A  6FC8               	movwf	lcd_4bit_send_custom_char@lcd& (0+255),b
  4279   002C8C  0E00               	movlw	high _lcd1
  4280   002C8E  6FC9               	movwf	(lcd_4bit_send_custom_char@lcd+1)& (0+255),b
  4281   002C90  0E01               	movlw	1
  4282   002C92  6FCA               	movwf	lcd_4bit_send_custom_char@row& (0+255),b
  4283   002C94  0E0B               	movlw	11
  4284   002C96  6FCB               	movwf	lcd_4bit_send_custom_char@column& (0+255),b
  4285   002C98  0E6F               	movlw	low _Hollow_Heart_Custom_Char
  4286   002C9A  6FCC               	movwf	lcd_4bit_send_custom_char@_chr& (0+255),b
  4287   002C9C  0E01               	movlw	high _Hollow_Heart_Custom_Char
  4288   002C9E  6FCD               	movwf	(lcd_4bit_send_custom_char@_chr+1)& (0+255),b
  4289   002CA0  0E00               	movlw	0
  4290   002CA2  6FCE               	movwf	lcd_4bit_send_custom_char@mem_pos& (0+255),b
  4291   002CA4  EC8F  F01A         	call	_lcd_4bit_send_custom_char	;wreg free
  4292   002CA8                     
  4293                           ;HeartRate_Measure.c: 53:         flag =1;
  4294   002CA8  0E01               	movlw	1
  4295   002CAA  0100               	movlb	0	; () banked
  4296   002CAC  6F98               	movwf	HeartRate_Display@flag& (0+255),b
  4297   002CAE                     l9651:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;HeartRate_Measure.c: 54:         _delay((unsigned long)((100)*(4000000UL/4000.0)));
  4301   002CAE  0E82               	movlw	130
  4302   002CB0  0101               	movlb	1	; () banked
  4303   002CB2  6F5E               	movwf	??_HeartRate_Display& (0+255),b
  4304   002CB4  0EDD               	movlw	221
  4305   002CB6                     u10467:
  4306   002CB6  2EE8               	decfsz	wreg,f,c
  4307   002CB8  D7FE               	bra	u10467
  4308   002CBA  2F5E               	decfsz	??_HeartRate_Display& (0+255),f,b
  4309   002CBC  D7FC               	bra	u10467
  4310   002CBE  D000               	nop2	
  4311                           
  4312                           ;HeartRate_Measure.c: 55:     }
  4313   002CC0  EF7F  F016         	goto	l1493
  4314   002CC4                     l9653:
  4315                           
  4316                           ; BSR set to: 0
  4317   002CC4  0598               	decf	HeartRate_Display@flag& (0+255),w,b
  4318   002CC6  A4D8               	btfss	status,2,c
  4319   002CC8  EF68  F016         	goto	u9891
  4320   002CCC  EF6A  F016         	goto	u9890
  4321   002CD0                     u9891:
  4322   002CD0  EF7F  F016         	goto	l1493
  4323   002CD4                     u9890:
  4324   002CD4                     
  4325                           ; BSR set to: 0
  4326                           ;HeartRate_Measure.c: 57:         lcd_4bit_send_custom_char(&lcd1,1,11,Full_Heart_Custom
      +                          _Char,0);
  4327   002CD4  0EFA               	movlw	low _lcd1
  4328   002CD6  6FC8               	movwf	lcd_4bit_send_custom_char@lcd& (0+255),b
  4329   002CD8  0E00               	movlw	high _lcd1
  4330   002CDA  6FC9               	movwf	(lcd_4bit_send_custom_char@lcd+1)& (0+255),b
  4331   002CDC  0E01               	movlw	1
  4332   002CDE  6FCA               	movwf	lcd_4bit_send_custom_char@row& (0+255),b
  4333   002CE0  0E0B               	movlw	11
  4334   002CE2  6FCB               	movwf	lcd_4bit_send_custom_char@column& (0+255),b
  4335   002CE4  0E77               	movlw	low _Full_Heart_Custom_Char
  4336   002CE6  6FCC               	movwf	lcd_4bit_send_custom_char@_chr& (0+255),b
  4337   002CE8  0E01               	movlw	high _Full_Heart_Custom_Char
  4338   002CEA  6FCD               	movwf	(lcd_4bit_send_custom_char@_chr+1)& (0+255),b
  4339   002CEC  0E00               	movlw	0
  4340   002CEE  6FCE               	movwf	lcd_4bit_send_custom_char@mem_pos& (0+255),b
  4341   002CF0  EC8F  F01A         	call	_lcd_4bit_send_custom_char	;wreg free
  4342   002CF4                     
  4343                           ;HeartRate_Measure.c: 58:         flag =0;
  4344   002CF4  0E00               	movlw	0
  4345   002CF6  0100               	movlb	0	; () banked
  4346   002CF8  6F98               	movwf	HeartRate_Display@flag& (0+255),b
  4347   002CFA  EF57  F016         	goto	l9651
  4348   002CFE                     l1493:
  4349   002CFE  0012               	return		;funcret
  4350   002D00                     __end_of_HeartRate_Display:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _lcd_4bit_send_string_pos *****************
  4354 ;; Defined at:
  4355 ;;		line 123 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  lcd             2   15[BANK0 ] PTR const struct .
  4358 ;;		 -> lcd1(6), 
  4359 ;;  row             1   17[BANK0 ] unsigned char 
  4360 ;;  column          1   18[BANK0 ] unsigned char 
  4361 ;;  str             2   19[BANK0 ] PTR unsigned char 
  4362 ;;		 -> STR_7(8), STR_6(17), STR_5(18), STR_4(21), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  ret             1    0        unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      unsigned char 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        6 bytes
  4379 ;; Hardware stack levels used: 1
  4380 ;; Hardware stack levels required when called: 12
  4381 ;; This function calls:
  4382 ;;		_lcd_4bit_send_char_data
  4383 ;;		_lcd_4bit_set_cursor
  4384 ;; This function is called by:
  4385 ;;		_Welcome_Message
  4386 ;;		_HeartRate_Display
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text24
  4391   003A74                     __ptext24:
  4392                           	callstack 0
  4393   003A74                     _lcd_4bit_send_string_pos:
  4394                           	callstack 17
  4395   003A74                     
  4396                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:     if(lcd==((void*)0)){
  4397   003A74  0100               	movlb	0	; () banked
  4398   003A76  51C2               	movf	lcd_4bit_send_string_pos@lcd& (0+255),w,b
  4399   003A78  11C3               	iorwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),w,b
  4400   003A7A  A4D8               	btfss	status,2,c
  4401   003A7C  EF42  F01D         	goto	u9141
  4402   003A80  EF44  F01D         	goto	u9140
  4403   003A84                     u9141:
  4404   003A84  EF46  F01D         	goto	l9111
  4405   003A88                     u9140:
  4406   003A88                     
  4407                           ; BSR set to: 0
  4408                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 127:     }
  4409   003A88  EF72  F01D         	goto	l102
  4410   003A8C                     l9111:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:        lcd_4bit_set_cursor(lcd,row,column);
  4414   003A8C  C0C2  F0BC         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  4415   003A90  C0C3  F0BD         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  4416   003A94  C0C4  F0BE         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  4417   003A98  C0C5  F0BF         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  4418   003A9C  ECFE  F017         	call	_lcd_4bit_set_cursor	;wreg free
  4419                           
  4420                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:         while(*str){
  4421   003AA0  EF63  F01D         	goto	l9117
  4422   003AA4                     l9113:
  4423   003AA4  C0C2  F0B8         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  4424   003AA8  C0C3  F0B9         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  4425   003AAC  C0C6  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4426   003AB0  C0C7  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4427   003AB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4428   003AB4  6AF8               	clrf	tblptru,c
  4429   003AB6                     	endif
  4430   003AB6                     	if	0	;tblptru may be non-zero
  4431   003AB6                     	endif
  4432   003AB6  0008               	tblrd		*
  4433   003AB8  CFF5 F0BA          	movff	tablat,lcd_4bit_send_char_data@data
  4434   003ABC  ECCD  F01B         	call	_lcd_4bit_send_char_data	;wreg free
  4435   003AC0  0100               	movlb	0	; () banked
  4436   003AC2  4BC6               	infsnz	lcd_4bit_send_string_pos@str& (0+255),f,b
  4437   003AC4  2BC7               	incf	(lcd_4bit_send_string_pos@str+1)& (0+255),f,b
  4438   003AC6                     l9117:
  4439                           
  4440                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:         while(*str){
  4441   003AC6  C0C6  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4442   003ACA  C0C7  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4443   003ACE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4444   003ACE  6AF8               	clrf	tblptru,c
  4445   003AD0                     	endif
  4446   003AD0                     	if	0	;tblptru may be non-zero
  4447   003AD0                     	endif
  4448   003AD0  0008               	tblrd		*
  4449   003AD2  50F5               	movf	tablat,w,c
  4450   003AD4  0900               	iorlw	0
  4451   003AD6  A4D8               	btfss	status,2,c
  4452   003AD8  EF70  F01D         	goto	u9151
  4453   003ADC  EF72  F01D         	goto	u9150
  4454   003AE0                     u9151:
  4455   003AE0  EF52  F01D         	goto	l9113
  4456   003AE4                     u9150:
  4457   003AE4                     l102:
  4458   003AE4  0012               	return		;funcret
  4459   003AE6                     __end_of_lcd_4bit_send_string_pos:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _lcd_4bit_send_string *****************
  4463 ;; Defined at:
  4464 ;;		line 103 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  lcd             2    9[BANK0 ] PTR const struct .
  4467 ;;		 -> lcd1(6), 
  4468 ;;  str             2   11[BANK0 ] PTR unsigned char 
  4469 ;;		 -> HeartRate_Display@BPM_Str(4), 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  ret             1    0        unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      unsigned char 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 11
  4488 ;; This function calls:
  4489 ;;		_lcd_4bit_send_char_data
  4490 ;; This function is called by:
  4491 ;;		_HeartRate_Display
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text25
  4496   003C4E                     __ptext25:
  4497                           	callstack 0
  4498   003C4E                     _lcd_4bit_send_string:
  4499                           	callstack 18
  4500   003C4E                     
  4501                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:     if(lcd==((void*)0)){
  4502   003C4E  0100               	movlb	0	; () banked
  4503   003C50  51BC               	movf	lcd_4bit_send_string@lcd& (0+255),w,b
  4504   003C52  11BD               	iorwf	(lcd_4bit_send_string@lcd+1)& (0+255),w,b
  4505   003C54  A4D8               	btfss	status,2,c
  4506   003C56  EF2F  F01E         	goto	u9121
  4507   003C5A  EF31  F01E         	goto	u9120
  4508   003C5E                     u9121:
  4509   003C5E  EF42  F01E         	goto	l9103
  4510   003C62                     u9120:
  4511   003C62                     
  4512                           ; BSR set to: 0
  4513                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     }
  4514   003C62  EF4E  F01E         	goto	l94
  4515   003C66                     l9099:
  4516                           
  4517                           ; BSR set to: 0
  4518   003C66  C0BC  F0B8         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  4519   003C6A  C0BD  F0B9         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  4520   003C6E  C0BE  FFD9         	movff	lcd_4bit_send_string@str,fsr2l
  4521   003C72  C0BF  FFDA         	movff	lcd_4bit_send_string@str+1,fsr2h
  4522   003C76  50DF               	movf	indf2,w,c
  4523   003C78  6FBA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  4524   003C7A  ECCD  F01B         	call	_lcd_4bit_send_char_data	;wreg free
  4525   003C7E  0100               	movlb	0	; () banked
  4526   003C80  4BBE               	infsnz	lcd_4bit_send_string@str& (0+255),f,b
  4527   003C82  2BBF               	incf	(lcd_4bit_send_string@str+1)& (0+255),f,b
  4528   003C84                     l9103:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 109:         while(*str){
  4532   003C84  C0BE  FFD9         	movff	lcd_4bit_send_string@str,fsr2l
  4533   003C88  C0BF  FFDA         	movff	lcd_4bit_send_string@str+1,fsr2h
  4534   003C8C  50DF               	movf	indf2,w,c
  4535   003C8E  A4D8               	btfss	status,2,c
  4536   003C90  EF4C  F01E         	goto	u9131
  4537   003C94  EF4E  F01E         	goto	u9130
  4538   003C98                     u9131:
  4539   003C98  EF33  F01E         	goto	l9099
  4540   003C9C                     u9130:
  4541   003C9C                     l94:
  4542                           
  4543                           ; BSR set to: 0
  4544   003C9C  0012               	return		;funcret
  4545   003C9E                     __end_of_lcd_4bit_send_string:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _lcd_4bit_send_custom_char *****************
  4549 ;; Defined at:
  4550 ;;		line 145 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  lcd             2   21[BANK0 ] PTR const struct .
  4553 ;;		 -> lcd1(6), 
  4554 ;;  row             1   23[BANK0 ] unsigned char 
  4555 ;;  column          1   24[BANK0 ] unsigned char 
  4556 ;;  _chr            2   25[BANK0 ] PTR const unsigned char 
  4557 ;;		 -> Full_Heart_Custom_Char(8), Hollow_Heart_Custom_Char(8), 
  4558 ;;  mem_pos         1   27[BANK0 ] unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  lcd_counter     1   28[BANK0 ] unsigned char 
  4561 ;;  ret             1    0        unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        8 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 13
  4578 ;; This function calls:
  4579 ;;		_lcd_4bit_send_char_data
  4580 ;;		_lcd_4bit_send_char_data_pos
  4581 ;;		_lcd_4bit_send_command
  4582 ;; This function is called by:
  4583 ;;		_Welcome_Message
  4584 ;;		_HeartRate_Display
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text26
  4589   00351E                     __ptext26:
  4590                           	callstack 0
  4591   00351E                     _lcd_4bit_send_custom_char:
  4592                           	callstack 16
  4593   00351E                     
  4594                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 148:     uint8 lcd_counter=0;
  4595   00351E  0E00               	movlw	0
  4596   003520  0100               	movlb	0	; () banked
  4597   003522  6FCF               	movwf	lcd_4bit_send_custom_char@lcd_counter& (0+255),b
  4598   003524                     
  4599                           ; BSR set to: 0
  4600                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 149:     if(lcd==((void*)0)){
  4601   003524  51C8               	movf	lcd_4bit_send_custom_char@lcd& (0+255),w,b
  4602   003526  11C9               	iorwf	(lcd_4bit_send_custom_char@lcd+1)& (0+255),w,b
  4603   003528  A4D8               	btfss	status,2,c
  4604   00352A  EF99  F01A         	goto	u9161
  4605   00352E  EF9B  F01A         	goto	u9160
  4606   003532                     u9161:
  4607   003532  EF9D  F01A         	goto	l9125
  4608   003536                     u9160:
  4609   003536                     
  4610                           ; BSR set to: 0
  4611                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 151:     }
  4612   003536  EFCF  F01A         	goto	l109
  4613   00353A                     l9125:
  4614                           
  4615                           ; BSR set to: 0
  4616   00353A  C0C8  F0B8         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  4617   00353E  C0C9  F0B9         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_command@lcd+1
  4618   003542  51CE               	movf	lcd_4bit_send_custom_char@mem_pos& (0+255),w,b
  4619   003544  0D08               	mullw	8
  4620   003546  50F3               	movf	243,w,c
  4621   003548  0F40               	addlw	64
  4622   00354A  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  4623   00354C  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  4624   003550                     
  4625                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 154:         for(lcd_counter=0;lcd_counter<8;lcd_count
      +                          er++){
  4626   003550  0E00               	movlw	0
  4627   003552  0100               	movlb	0	; () banked
  4628   003554  6FCF               	movwf	lcd_4bit_send_custom_char@lcd_counter& (0+255),b
  4629   003556                     l9133:
  4630                           
  4631                           ; BSR set to: 0
  4632   003556  C0C8  F0B8         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  4633   00355A  C0C9  F0B9         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_char_data@lcd+1
  4634   00355E  51CF               	movf	lcd_4bit_send_custom_char@lcd_counter& (0+255),w,b
  4635   003560  25CC               	addwf	lcd_4bit_send_custom_char@_chr& (0+255),w,b
  4636   003562  6ED9               	movwf	fsr2l,c
  4637   003564  0E00               	movlw	0
  4638   003566  21CD               	addwfc	(lcd_4bit_send_custom_char@_chr+1)& (0+255),w,b
  4639   003568  6EDA               	movwf	fsr2h,c
  4640   00356A  50DF               	movf	indf2,w,c
  4641   00356C  6FBA               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  4642   00356E  ECCD  F01B         	call	_lcd_4bit_send_char_data	;wreg free
  4643   003572                     
  4644                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 156:         }
  4645   003572  0100               	movlb	0	; () banked
  4646   003574  2BCF               	incf	lcd_4bit_send_custom_char@lcd_counter& (0+255),f,b
  4647   003576                     
  4648                           ; BSR set to: 0
  4649   003576  0E07               	movlw	7
  4650   003578  65CF               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter& (0+255),b
  4651   00357A  EFC1  F01A         	goto	u9171
  4652   00357E  EFC3  F01A         	goto	u9170
  4653   003582                     u9171:
  4654   003582  EFAB  F01A         	goto	l9133
  4655   003586                     u9170:
  4656   003586                     
  4657                           ; BSR set to: 0
  4658   003586  C0C8  F0C2         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  4659   00358A  C0C9  F0C3         	movff	lcd_4bit_send_custom_char@lcd+1,lcd_4bit_send_char_data_pos@lcd+1
  4660   00358E  C0CA  F0C4         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  4661   003592  C0CB  F0C5         	movff	lcd_4bit_send_custom_char@column,lcd_4bit_send_char_data_pos@column
  4662   003596  C0CE  F0C6         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  4663   00359A  EC4F  F01E         	call	_lcd_4bit_send_char_data_pos	;wreg free
  4664   00359E                     l109:
  4665   00359E  0012               	return		;funcret
  4666   0035A0                     __end_of_lcd_4bit_send_custom_char:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  4670 ;; Defined at:
  4671 ;;		line 86 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  lcd             2   15[BANK0 ] PTR const struct .
  4674 ;;		 -> lcd1(6), 
  4675 ;;  row             1   17[BANK0 ] unsigned char 
  4676 ;;  column          1   18[BANK0 ] unsigned char 
  4677 ;;  data            1   19[BANK0 ] unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  ret             1   20[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4689 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;Total ram usage:        6 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 12
  4696 ;; This function calls:
  4697 ;;		_lcd_4bit_send_char_data
  4698 ;;		_lcd_4bit_set_cursor
  4699 ;; This function is called by:
  4700 ;;		_lcd_4bit_send_custom_char
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text27
  4705   003C9E                     __ptext27:
  4706                           	callstack 0
  4707   003C9E                     _lcd_4bit_send_char_data_pos:
  4708                           	callstack 16
  4709   003C9E                     
  4710                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:     Std_ReturnType ret=(Std_ReturnType)0x01;
  4711   003C9E  0E01               	movlw	1
  4712   003CA0  0100               	movlb	0	; () banked
  4713   003CA2  6FC7               	movwf	lcd_4bit_send_char_data_pos@ret& (0+255),b
  4714   003CA4                     
  4715                           ; BSR set to: 0
  4716                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:     if(lcd==((void*)0)){
  4717   003CA4  51C2               	movf	lcd_4bit_send_char_data_pos@lcd& (0+255),w,b
  4718   003CA6  11C3               	iorwf	(lcd_4bit_send_char_data_pos@lcd+1)& (0+255),w,b
  4719   003CA8  A4D8               	btfss	status,2,c
  4720   003CAA  EF59  F01E         	goto	u9061
  4721   003CAE  EF5B  F01E         	goto	u9060
  4722   003CB2                     u9061:
  4723   003CB2  EF5F  F01E         	goto	l9019
  4724   003CB6                     u9060:
  4725   003CB6                     
  4726                           ; BSR set to: 0
  4727                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 89:         ret=(Std_ReturnType)0x00;
  4728   003CB6  0E00               	movlw	0
  4729   003CB8  6FC7               	movwf	lcd_4bit_send_char_data_pos@ret& (0+255),b
  4730                           
  4731                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 90:     }
  4732   003CBA  EF71  F01E         	goto	l9021
  4733   003CBE                     l9019:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         lcd_4bit_set_cursor(lcd,row,column);
  4737   003CBE  C0C2  F0BC         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  4738   003CC2  C0C3  F0BD         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  4739   003CC6  C0C4  F0BE         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  4740   003CCA  C0C5  F0BF         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  4741   003CCE  ECFE  F017         	call	_lcd_4bit_set_cursor	;wreg free
  4742                           
  4743                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:         lcd_4bit_send_char_data(lcd,data);
  4744   003CD2  C0C2  F0B8         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  4745   003CD6  C0C3  F0B9         	movff	lcd_4bit_send_char_data_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  4746   003CDA  C0C6  F0BA         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  4747   003CDE  ECCD  F01B         	call	_lcd_4bit_send_char_data	;wreg free
  4748   003CE2                     l9021:
  4749                           
  4750                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 95:     return ret;
  4751   003CE2  0100               	movlb	0	; () banked
  4752   003CE4  51C7               	movf	lcd_4bit_send_char_data_pos@ret& (0+255),w,b
  4753   003CE6                     
  4754                           ; BSR set to: 0
  4755   003CE6  0012               	return		;funcret
  4756   003CE8                     __end_of_lcd_4bit_send_char_data_pos:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _lcd_4bit_set_cursor *****************
  4760 ;; Defined at:
  4761 ;;		line 451 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  lcd             2    9[BANK0 ] PTR const struct .
  4764 ;;		 -> lcd1(6), 
  4765 ;;  row             1   11[BANK0 ] unsigned char 
  4766 ;;  column          1   12[BANK0 ] unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  ret             1    0        unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      unsigned char 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        6 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 11
  4785 ;; This function calls:
  4786 ;;		_lcd_4bit_send_command
  4787 ;; This function is called by:
  4788 ;;		_lcd_4bit_send_char_data_pos
  4789 ;;		_lcd_4bit_send_string_pos
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text28
  4794   002FFC                     __ptext28:
  4795                           	callstack 0
  4796   002FFC                     _lcd_4bit_set_cursor:
  4797                           	callstack 17
  4798   002FFC                     
  4799                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 453:     if(lcd==((void*)0)){
  4800   002FFC  0100               	movlb	0	; () banked
  4801   002FFE  51BC               	movf	lcd_4bit_set_cursor@lcd& (0+255),w,b
  4802   003000  11BD               	iorwf	(lcd_4bit_set_cursor@lcd+1)& (0+255),w,b
  4803   003002  A4D8               	btfss	status,2,c
  4804   003004  EF06  F018         	goto	u8991
  4805   003008  EF08  F018         	goto	u8990
  4806   00300C                     u8991:
  4807   00300C  EF0A  F018         	goto	l8909
  4808   003010                     u8990:
  4809   003010                     l8907:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 455:     }
  4813   003010  EF56  F018         	goto	l227
  4814   003014                     l8909:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:         column--;
  4818   003014  07BF               	decf	lcd_4bit_set_cursor@column& (0+255),f,b
  4819                           
  4820                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 458:         switch (row){
  4821   003016  EF39  F018         	goto	l8923
  4822   00301A                     l8911:
  4823                           
  4824                           ; BSR set to: 0
  4825   00301A  C0BC  F0B8         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4826   00301E  C0BD  F0B9         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4827   003022  51BF               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4828   003024  0F80               	addlw	128
  4829   003026  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  4830   003028  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  4831   00302C  EF56  F018         	goto	l227
  4832   003030                     l8913:
  4833                           
  4834                           ; BSR set to: 0
  4835   003030  C0BC  F0B8         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4836   003034  C0BD  F0B9         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4837   003038  51BF               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4838   00303A  0FC0               	addlw	192
  4839   00303C  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  4840   00303E  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  4841   003042  EF56  F018         	goto	l227
  4842   003046                     l8915:
  4843                           
  4844                           ; BSR set to: 0
  4845   003046  C0BC  F0B8         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4846   00304A  C0BD  F0B9         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4847   00304E  51BF               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4848   003050  0F94               	addlw	148
  4849   003052  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  4850   003054  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  4851   003058  EF56  F018         	goto	l227
  4852   00305C                     l8917:
  4853                           
  4854                           ; BSR set to: 0
  4855   00305C  C0BC  F0B8         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4856   003060  C0BD  F0B9         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4857   003064  51BF               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4858   003066  0FD4               	addlw	212
  4859   003068  6FBA               	movwf	lcd_4bit_send_command@command& (0+255),b
  4860   00306A  EC8E  F01B         	call	_lcd_4bit_send_command	;wreg free
  4861   00306E  EF56  F018         	goto	l227
  4862   003072                     l8923:
  4863                           
  4864                           ; BSR set to: 0
  4865   003072  51BE               	movf	lcd_4bit_set_cursor@row& (0+255),w,b
  4866   003074  6FC0               	movwf	??_lcd_4bit_set_cursor& (0+255),b
  4867   003076  6BC1               	clrf	(??_lcd_4bit_set_cursor+1)& (0+255),b
  4868                           
  4869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4870                           ; Switch size 1, requested type "simple"
  4871                           ; Number of cases is 1, Range of values is 0 to 0
  4872                           ; switch strategies available:
  4873                           ; Name         Instructions Cycles
  4874                           ; simple_byte            4     3 (average)
  4875                           ;	Chosen strategy is simple_byte
  4876   003078  51C1               	movf	(??_lcd_4bit_set_cursor+1)& (0+255),w,b
  4877   00307A  0A00               	xorlw	0	; case 0
  4878   00307C  B4D8               	btfsc	status,2,c
  4879   00307E  EF43  F018         	goto	l10347
  4880   003082  EF08  F018         	goto	l8907
  4881   003086                     l10347:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ; Switch size 1, requested type "simple"
  4885                           ; Number of cases is 4, Range of values is 1 to 4
  4886                           ; switch strategies available:
  4887                           ; Name         Instructions Cycles
  4888                           ; simple_byte           13     7 (average)
  4889                           ;	Chosen strategy is simple_byte
  4890   003086  51C0               	movf	??_lcd_4bit_set_cursor& (0+255),w,b
  4891   003088  0A01               	xorlw	1	; case 1
  4892   00308A  B4D8               	btfsc	status,2,c
  4893   00308C  EF0D  F018         	goto	l8911
  4894   003090  0A03               	xorlw	3	; case 2
  4895   003092  B4D8               	btfsc	status,2,c
  4896   003094  EF18  F018         	goto	l8913
  4897   003098  0A01               	xorlw	1	; case 3
  4898   00309A  B4D8               	btfsc	status,2,c
  4899   00309C  EF23  F018         	goto	l8915
  4900   0030A0  0A07               	xorlw	7	; case 4
  4901   0030A2  B4D8               	btfsc	status,2,c
  4902   0030A4  EF2E  F018         	goto	l8917
  4903   0030A8  EF08  F018         	goto	l8907
  4904   0030AC                     l227:
  4905   0030AC  0012               	return		;funcret
  4906   0030AE                     __end_of_lcd_4bit_set_cursor:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _lcd_4bit_send_command *****************
  4910 ;; Defined at:
  4911 ;;		line 44 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  lcd             2    5[BANK0 ] PTR const struct .
  4914 ;;		 -> lcd1(6), 
  4915 ;;  command         1    7[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  ret             1    8[BANK0 ] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        4 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 10
  4934 ;; This function calls:
  4935 ;;		_gpio_pin_write_logic
  4936 ;;		_lcd_4bit_send_enable_signal
  4937 ;;		_lcd_send_4bits
  4938 ;; This function is called by:
  4939 ;;		_lcd_4bit_initialize
  4940 ;;		_lcd_4bit_send_custom_char
  4941 ;;		_lcd_4bit_set_cursor
  4942 ;;		_Welcome_Message
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text29
  4947   00371C                     __ptext29:
  4948                           	callstack 0
  4949   00371C                     _lcd_4bit_send_command:
  4950                           	callstack 17
  4951   00371C                     
  4952                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 46:     if(lcd==((void*)0)){
  4953   00371C  0100               	movlb	0	; () banked
  4954   00371E  51B8               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  4955   003720  11B9               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  4956   003722  A4D8               	btfss	status,2,c
  4957   003724  EF96  F01B         	goto	u8841
  4958   003728  EF98  F01B         	goto	u8840
  4959   00372C                     u8841:
  4960   00372C  EF9C  F01B         	goto	l8751
  4961   003730                     u8840:
  4962   003730                     
  4963                           ; BSR set to: 0
  4964                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 47:         ret=(Std_ReturnType)0x00;
  4965   003730  0E00               	movlw	0
  4966   003732  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4967                           
  4968                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 48:     }
  4969   003734  EFCB  F01B         	goto	l8753
  4970   003738                     l8751:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  4974   003738  C0B8  F028         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  4975   00373C  C0B9  F029         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  4976   003740  0E00               	movlw	0
  4977   003742  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  4978   003744  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  4979   003748  0100               	movlb	0	; () banked
  4980   00374A  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4981                           
  4982                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=lcd_send_4bits(lcd, command >> 4);
  4983   00374C  C0B8  F0B4         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4984   003750  C0B9  F0B5         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4985   003754  39BA               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  4986   003756  0B0F               	andlw	15
  4987   003758  6FB6               	movwf	lcd_send_4bits@_data_command& (0+255),b
  4988   00375A  ECFE  F019         	call	_lcd_send_4bits	;wreg free
  4989   00375E  0100               	movlb	0	; () banked
  4990   003760  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4991                           
  4992                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret=lcd_4bit_send_enable_signal(lcd);
  4993   003762  C0B8  F0B4         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4994   003766  C0B9  F0B5         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4995   00376A  ECAA  F01D         	call	_lcd_4bit_send_enable_signal	;wreg free
  4996   00376E  0100               	movlb	0	; () banked
  4997   003770  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4998                           
  4999                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret=lcd_send_4bits(lcd, command);
  5000   003772  C0B8  F0B4         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  5001   003776  C0B9  F0B5         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  5002   00377A  C0BA  F0B6         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  5003   00377E  ECFE  F019         	call	_lcd_send_4bits	;wreg free
  5004   003782  0100               	movlb	0	; () banked
  5005   003784  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  5006                           
  5007                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret=lcd_4bit_send_enable_signal(lcd);
  5008   003786  C0B8  F0B4         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  5009   00378A  C0B9  F0B5         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5010   00378E  ECAA  F01D         	call	_lcd_4bit_send_enable_signal	;wreg free
  5011   003792  0100               	movlb	0	; () banked
  5012   003794  6FBB               	movwf	lcd_4bit_send_command@ret& (0+255),b
  5013   003796                     l8753:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:     return ret;
  5017   003796  51BB               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  5018   003798                     
  5019                           ; BSR set to: 0
  5020   003798  0012               	return		;funcret
  5021   00379A                     __end_of_lcd_4bit_send_command:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function _lcd_4bit_send_char_data *****************
  5025 ;; Defined at:
  5026 ;;		line 64 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  lcd             2    5[BANK0 ] PTR const struct .
  5029 ;;		 -> lcd1(6), 
  5030 ;;  data            1    7[BANK0 ] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  ret             1    8[BANK0 ] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:        4 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 10
  5049 ;; This function calls:
  5050 ;;		_gpio_pin_write_logic
  5051 ;;		_lcd_4bit_send_enable_signal
  5052 ;;		_lcd_send_4bits
  5053 ;; This function is called by:
  5054 ;;		_lcd_4bit_send_char_data_pos
  5055 ;;		_lcd_4bit_send_string
  5056 ;;		_lcd_4bit_send_string_pos
  5057 ;;		_lcd_4bit_send_custom_char
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text30
  5062   00379A                     __ptext30:
  5063                           	callstack 0
  5064   00379A                     _lcd_4bit_send_char_data:
  5065                           	callstack 18
  5066   00379A                     
  5067                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 66:     if(lcd==((void*)0)){
  5068   00379A  0100               	movlb	0	; () banked
  5069   00379C  51B8               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  5070   00379E  11B9               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  5071   0037A0  A4D8               	btfss	status,2,c
  5072   0037A2  EFD5  F01B         	goto	u8981
  5073   0037A6  EFD7  F01B         	goto	u8980
  5074   0037AA                     u8981:
  5075   0037AA  EFDB  F01B         	goto	l8897
  5076   0037AE                     u8980:
  5077   0037AE                     
  5078                           ; BSR set to: 0
  5079                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret=(Std_ReturnType)0x00;
  5080   0037AE  0E00               	movlw	0
  5081   0037B0  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5082                           
  5083                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:     }
  5084   0037B2  EF0A  F01C         	goto	l8899
  5085   0037B6                     l8897:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  5089   0037B6  C0B8  F028         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  5090   0037BA  C0B9  F029         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  5091   0037BE  0E01               	movlw	1
  5092   0037C0  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5093   0037C2  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5094   0037C6  0100               	movlb	0	; () banked
  5095   0037C8  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5096                           
  5097                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=lcd_send_4bits(lcd, data >> 4);
  5098   0037CA  C0B8  F0B4         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  5099   0037CE  C0B9  F0B5         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  5100   0037D2  39BA               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  5101   0037D4  0B0F               	andlw	15
  5102   0037D6  6FB6               	movwf	lcd_send_4bits@_data_command& (0+255),b
  5103   0037D8  ECFE  F019         	call	_lcd_send_4bits	;wreg free
  5104   0037DC  0100               	movlb	0	; () banked
  5105   0037DE  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5106                           
  5107                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:         ret=lcd_4bit_send_enable_signal(lcd);
  5108   0037E0  C0B8  F0B4         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  5109   0037E4  C0B9  F0B5         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5110   0037E8  ECAA  F01D         	call	_lcd_4bit_send_enable_signal	;wreg free
  5111   0037EC  0100               	movlb	0	; () banked
  5112   0037EE  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5113                           
  5114                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:         ret=lcd_send_4bits(lcd, data);
  5115   0037F0  C0B8  F0B4         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  5116   0037F4  C0B9  F0B5         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  5117   0037F8  C0BA  F0B6         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  5118   0037FC  ECFE  F019         	call	_lcd_send_4bits	;wreg free
  5119   003800  0100               	movlb	0	; () banked
  5120   003802  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5121                           
  5122                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:         ret=lcd_4bit_send_enable_signal(lcd);
  5123   003804  C0B8  F0B4         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  5124   003808  C0B9  F0B5         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5125   00380C  ECAA  F01D         	call	_lcd_4bit_send_enable_signal	;wreg free
  5126   003810  0100               	movlb	0	; () banked
  5127   003812  6FBB               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5128   003814                     l8899:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:     return ret;
  5132   003814  51BB               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  5133   003816                     
  5134                           ; BSR set to: 0
  5135   003816  0012               	return		;funcret
  5136   003818                     __end_of_lcd_4bit_send_char_data:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _lcd_send_4bits *****************
  5140 ;; Defined at:
  5141 ;;		line 397 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  lcd             2    1[BANK0 ] PTR const struct .
  5144 ;;		 -> lcd1(6), 
  5145 ;;  _data_comman    1    3[BANK0 ] unsigned char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  ret             1    4[BANK0 ] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      unsigned char 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5157 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;Total ram usage:        4 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 9
  5164 ;; This function calls:
  5165 ;;		_gpio_pin_write_logic
  5166 ;; This function is called by:
  5167 ;;		_lcd_4bit_send_command
  5168 ;;		_lcd_4bit_send_char_data
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text31
  5173   0033FC                     __ptext31:
  5174                           	callstack 0
  5175   0033FC                     _lcd_send_4bits:
  5176                           	callstack 17
  5177   0033FC                     
  5178                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:     if(lcd==((void*)0)){
  5179   0033FC  0100               	movlb	0	; () banked
  5180   0033FE  51B4               	movf	lcd_send_4bits@lcd& (0+255),w,b
  5181   003400  11B5               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5182   003402  A4D8               	btfss	status,2,c
  5183   003404  EF06  F01A         	goto	u8541
  5184   003408  EF08  F01A         	goto	u8540
  5185   00340C                     u8541:
  5186   00340C  EF0C  F01A         	goto	l8571
  5187   003410                     u8540:
  5188   003410                     
  5189                           ; BSR set to: 0
  5190                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:         ret=(Std_ReturnType)0x00;
  5191   003410  0E00               	movlw	0
  5192   003412  6FB7               	movwf	lcd_send_4bits@ret& (0+255),b
  5193                           
  5194                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:     }
  5195   003414  EF45  F01A         	goto	l8573
  5196   003418                     l8571:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  5200   003418  0E02               	movlw	2
  5201   00341A  25B4               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5202   00341C  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5203   00341E  0E00               	movlw	0
  5204   003420  21B5               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5205   003422  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5206   003424  51B6               	movf	lcd_send_4bits@_data_command& (0+255),w,b
  5207   003426  0B01               	andlw	1
  5208   003428  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5209   00342A  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5210   00342E  0100               	movlb	0	; () banked
  5211   003430  6FB7               	movwf	lcd_send_4bits@ret& (0+255),b
  5212                           
  5213                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  5214   003432  0E03               	movlw	3
  5215   003434  25B4               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5216   003436  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5217   003438  0E00               	movlw	0
  5218   00343A  21B5               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5219   00343C  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5220   00343E  90D8               	bcf	status,0,c
  5221   003440  31B6               	rrcf	lcd_send_4bits@_data_command& (0+255),w,b
  5222   003442  0B01               	andlw	1
  5223   003444  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5224   003446  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5225   00344A  0100               	movlb	0	; () banked
  5226   00344C  6FB7               	movwf	lcd_send_4bits@ret& (0+255),b
  5227                           
  5228                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  5229   00344E  0E04               	movlw	4
  5230   003450  25B4               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5231   003452  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5232   003454  0E00               	movlw	0
  5233   003456  21B5               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5234   003458  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5235   00345A  41B6               	rrncf	lcd_send_4bits@_data_command& (0+255),w,b
  5236   00345C  42E8               	rrncf	wreg,f,c
  5237   00345E  0B3F               	andlw	63
  5238   003460  0B01               	andlw	1
  5239   003462  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5240   003464  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5241   003468  0100               	movlb	0	; () banked
  5242   00346A  6FB7               	movwf	lcd_send_4bits@ret& (0+255),b
  5243                           
  5244                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 406:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  5245   00346C  0E05               	movlw	5
  5246   00346E  25B4               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5247   003470  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5248   003472  0E00               	movlw	0
  5249   003474  21B5               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5250   003476  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5251   003478  39B6               	swapf	lcd_send_4bits@_data_command& (0+255),w,b
  5252   00347A  46E8               	rlncf	wreg,f,c
  5253   00347C  0B1F               	andlw	31
  5254   00347E  0B01               	andlw	1
  5255   003480  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5256   003482  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5257   003486  0100               	movlb	0	; () banked
  5258   003488  6FB7               	movwf	lcd_send_4bits@ret& (0+255),b
  5259   00348A                     l8573:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 408:     return ret;
  5263   00348A  51B7               	movf	lcd_send_4bits@ret& (0+255),w,b
  5264   00348C                     
  5265                           ; BSR set to: 0
  5266   00348C  0012               	return		;funcret
  5267   00348E                     __end_of_lcd_send_4bits:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _lcd_4bit_send_enable_signal *****************
  5271 ;; Defined at:
  5272 ;;		line 410 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  lcd             2    1[BANK0 ] PTR const struct .
  5275 ;;		 -> lcd1(6), 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  ret             1    3[BANK0 ] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      unsigned char 
  5280 ;; Registers used:
  5281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        3 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 9
  5294 ;; This function calls:
  5295 ;;		_gpio_pin_write_logic
  5296 ;; This function is called by:
  5297 ;;		_lcd_4bit_send_command
  5298 ;;		_lcd_4bit_send_char_data
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text32
  5303   003B54                     __ptext32:
  5304                           	callstack 0
  5305   003B54                     _lcd_4bit_send_enable_signal:
  5306                           	callstack 17
  5307   003B54                     
  5308                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:     if(lcd==((void*)0)){
  5309   003B54  0100               	movlb	0	; () banked
  5310   003B56  51B4               	movf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5311   003B58  11B5               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5312   003B5A  A4D8               	btfss	status,2,c
  5313   003B5C  EFB2  F01D         	goto	u8551
  5314   003B60  EFB4  F01D         	goto	u8550
  5315   003B64                     u8551:
  5316   003B64  EFB8  F01D         	goto	l8583
  5317   003B68                     u8550:
  5318   003B68                     
  5319                           ; BSR set to: 0
  5320                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 413:         ret=(Std_ReturnType)0x00;
  5321   003B68  0E00               	movlw	0
  5322   003B6A  6FB6               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  5323                           
  5324                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 414:     }
  5325   003B6C  EFD2  F01D         	goto	l8587
  5326   003B70                     l8583:
  5327                           
  5328                           ; BSR set to: 0
  5329   003B70  0E01               	movlw	1
  5330   003B72  25B4               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5331   003B74  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5332   003B76  0E00               	movlw	0
  5333   003B78  21B5               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5334   003B7A  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5335   003B7C  0E01               	movlw	1
  5336   003B7E  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5337   003B80  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5338   003B84                     
  5339                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  5340   003B84  D000               	nop2		;2 cycle nop
  5341   003B86  D000               	nop2		;2 cycle nop
  5342   003B88  F000               	nop	
  5343                           
  5344                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 418:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  5345   003B8A  0E01               	movlw	1
  5346   003B8C  0100               	movlb	0	; () banked
  5347   003B8E  25B4               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5348   003B90  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5349   003B92  0E00               	movlw	0
  5350   003B94  21B5               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5351   003B96  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5352   003B98  0E00               	movlw	0
  5353   003B9A  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5354   003B9C  EC39  F011         	call	_gpio_pin_write_logic	;wreg free
  5355   003BA0  0100               	movlb	0	; () banked
  5356   003BA2  6FB6               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  5357   003BA4                     l8587:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:     return ret;
  5361   003BA4  51B6               	movf	lcd_4bit_send_enable_signal@ret& (0+255),w,b
  5362   003BA6                     
  5363                           ; BSR set to: 0
  5364   003BA6  0012               	return		;funcret
  5365   003BA8                     __end_of_lcd_4bit_send_enable_signal:
  5366                           	callstack 0
  5367                           
  5368 ;; *************** function _gpio_pin_write_logic *****************
  5369 ;; Defined at:
  5370 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  pin_config      2   39[COMRAM] PTR const struct .
  5373 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  5374 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  5375 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5376 ;;  logic           1   41[COMRAM] enum E3239
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  ret             1    0[BANK0 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      unsigned char 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:       10 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 8
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_lcd_4bit_send_command
  5399 ;;		_lcd_4bit_send_char_data
  5400 ;;		_lcd_send_4bits
  5401 ;;		_lcd_4bit_send_enable_signal
  5402 ;;		_gpio_pin_initialize
  5403 ;;		_seven_segment_write_number
  5404 ;;		_lcd_8bit_send_command
  5405 ;;		_lcd_8bit_send_char_data
  5406 ;;		_lcd_8bit_send_enable_signal
  5407 ;;		_dc_motor_move_right
  5408 ;;		_dc_motor_move_left
  5409 ;;		_dc_motor_stop
  5410 ;;		_keypad_get_value
  5411 ;;		_led_turn_on
  5412 ;;		_led_turn_off
  5413 ;;		_relay_turn_on
  5414 ;;		_relay_turn_off
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text33
  5419   002272                     __ptext33:
  5420                           	callstack 0
  5421   002272                     _gpio_pin_write_logic:
  5422                           	callstack 17
  5423   002272                     
  5424                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  5425   002272  0E01               	movlw	1
  5426   002274  0100               	movlb	0	; () banked
  5427   002276  6FB3               	movwf	gpio_pin_write_logic@ret& (0+255),b
  5428   002278                     
  5429                           ; BSR set to: 0
  5430                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  5431   002278  5028               	movf	gpio_pin_write_logic@pin_config^0,w,c
  5432   00227A  1029               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  5433   00227C  B4D8               	btfsc	status,2,c
  5434   00227E  EF43  F011         	goto	u8271
  5435   002282  EF45  F011         	goto	u8270
  5436   002286                     u8271:
  5437   002286  EF65  F011         	goto	l8423
  5438   00228A                     u8270:
  5439   00228A                     
  5440                           ; BSR set to: 0
  5441   00228A  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5442   00228E  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5443   002292  30DF               	rrcf	223,w,c
  5444   002294  32E8               	rrcf	wreg,f,c
  5445   002296  32E8               	rrcf	wreg,f,c
  5446   002298  0B07               	andlw	7
  5447   00229A  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5448   00229C  0E08               	movlw	8
  5449   00229E  602B               	cpfslt	??_gpio_pin_write_logic^0,c
  5450   0022A0  EF54  F011         	goto	u8281
  5451   0022A4  EF56  F011         	goto	u8280
  5452   0022A8                     u8281:
  5453   0022A8  EF65  F011         	goto	l8423
  5454   0022AC                     u8280:
  5455   0022AC                     
  5456                           ; BSR set to: 0
  5457   0022AC  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5458   0022B0  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5459   0022B4  50DF               	movf	223,w,c
  5460   0022B6  0B07               	andlw	7
  5461   0022B8  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5462   0022BA  0E04               	movlw	4
  5463   0022BC  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  5464   0022BE  EF63  F011         	goto	u8291
  5465   0022C2  EF65  F011         	goto	u8290
  5466   0022C6                     u8291:
  5467   0022C6  EFC8  F011         	goto	l8431
  5468   0022CA                     u8290:
  5469   0022CA                     l8423:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  5473   0022CA  0E00               	movlw	0
  5474   0022CC  6FB3               	movwf	gpio_pin_write_logic@ret& (0+255),b
  5475                           
  5476                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  5477   0022CE  EFDD  F011         	goto	l8433
  5478   0022D2                     l8425:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  5482   0022D2  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5483   0022D6  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5484   0022DA  30DF               	rrcf	223,w,c
  5485   0022DC  32E8               	rrcf	wreg,f,c
  5486   0022DE  32E8               	rrcf	wreg,f,c
  5487   0022E0  0B07               	andlw	7
  5488   0022E2  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5489   0022E4  0E01               	movlw	1
  5490   0022E6  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5491   0022E8  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  5492   0022EA  EF79  F011         	goto	u8304
  5493   0022EE                     u8305:
  5494   0022EE  90D8               	bcf	status,0,c
  5495   0022F0  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5496   0022F2                     u8304:
  5497   0022F2  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  5498   0022F4  EF77  F011         	goto	u8305
  5499   0022F8  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5500   0022FC  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5501   002300  50DF               	movf	223,w,c
  5502   002302  0B07               	andlw	7
  5503   002304  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5504   002306  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5505   002308  0D02               	mullw	2
  5506   00230A  0EE6               	movlw	low _lat_registers
  5507   00230C  24F3               	addwf	243,w,c
  5508   00230E  6ED9               	movwf	fsr2l,c
  5509   002310  0E00               	movlw	high _lat_registers
  5510   002312  20F4               	addwfc	prodh,w,c
  5511   002314  6EDA               	movwf	fsr2h,c
  5512   002316  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  5513   00231A  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  5514   00231E  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5515   002322  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5516   002326  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5517   002328  12DF               	iorwf	indf2,f,c
  5518                           
  5519                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  5520   00232A  EFDD  F011         	goto	l8433
  5521   00232E                     l8427:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  5525   00232E  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5526   002332  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5527   002336  30DF               	rrcf	223,w,c
  5528   002338  32E8               	rrcf	wreg,f,c
  5529   00233A  32E8               	rrcf	wreg,f,c
  5530   00233C  0B07               	andlw	7
  5531   00233E  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5532   002340  0E01               	movlw	1
  5533   002342  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5534   002344  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  5535   002346  EFA7  F011         	goto	u8314
  5536   00234A                     u8315:
  5537   00234A  90D8               	bcf	status,0,c
  5538   00234C  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5539   00234E                     u8314:
  5540   00234E  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  5541   002350  EFA5  F011         	goto	u8315
  5542   002354  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5543   002356  0AFF               	xorlw	255
  5544   002358  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5545   00235A  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5546   00235E  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5547   002362  50DF               	movf	223,w,c
  5548   002364  0B07               	andlw	7
  5549   002366  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5550   002368  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5551   00236A  0D02               	mullw	2
  5552   00236C  0EE6               	movlw	low _lat_registers
  5553   00236E  24F3               	addwf	243,w,c
  5554   002370  6ED9               	movwf	fsr2l,c
  5555   002372  0E00               	movlw	high _lat_registers
  5556   002374  20F4               	addwfc	prodh,w,c
  5557   002376  6EDA               	movwf	fsr2h,c
  5558   002378  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  5559   00237C  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  5560   002380  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5561   002384  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5562   002388  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5563   00238A  16DF               	andwf	indf2,f,c
  5564                           
  5565                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  5566   00238C  EFDD  F011         	goto	l8433
  5567   002390                     l8431:
  5568                           
  5569                           ; BSR set to: 0
  5570   002390  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  5571   002392  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5572   002394  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5573                           
  5574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5575                           ; Switch size 1, requested type "simple"
  5576                           ; Number of cases is 1, Range of values is 0 to 0
  5577                           ; switch strategies available:
  5578                           ; Name         Instructions Cycles
  5579                           ; simple_byte            4     3 (average)
  5580                           ;	Chosen strategy is simple_byte
  5581   002396  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5582   002398  0A00               	xorlw	0	; case 0
  5583   00239A  B4D8               	btfsc	status,2,c
  5584   00239C  EFD2  F011         	goto	l10349
  5585   0023A0  EF65  F011         	goto	l8423
  5586   0023A4                     l10349:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ; Switch size 1, requested type "simple"
  5590                           ; Number of cases is 2, Range of values is 0 to 1
  5591                           ; switch strategies available:
  5592                           ; Name         Instructions Cycles
  5593                           ; simple_byte            7     4 (average)
  5594                           ;	Chosen strategy is simple_byte
  5595   0023A4  502B               	movf	??_gpio_pin_write_logic^0,w,c
  5596   0023A6  0A00               	xorlw	0	; case 0
  5597   0023A8  B4D8               	btfsc	status,2,c
  5598   0023AA  EF97  F011         	goto	l8427
  5599   0023AE  0A01               	xorlw	1	; case 1
  5600   0023B0  B4D8               	btfsc	status,2,c
  5601   0023B2  EF69  F011         	goto	l8425
  5602   0023B6  EF65  F011         	goto	l8423
  5603   0023BA                     l8433:
  5604                           
  5605                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  5606   0023BA  0100               	movlb	0	; () banked
  5607   0023BC  51B3               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  5608   0023BE                     
  5609                           ; BSR set to: 0
  5610   0023BE  0012               	return		;funcret
  5611   0023C0                     __end_of_gpio_pin_write_logic:
  5612                           	callstack 0
  5613                           
  5614 ;; *************** function _convert_uint8_to_string *****************
  5615 ;; Defined at:
  5616 ;;		line 327 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  value           1    wreg     unsigned char 
  5619 ;;  str             2   24[BANK1 ] PTR unsigned char 
  5620 ;;		 -> HeartRate_Display@BPM_Str(4), 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  value           1   30[BANK1 ] unsigned char 
  5623 ;;  Temp_str        4   26[BANK1 ] unsigned char [4]
  5624 ;;  cnt             1   31[BANK1 ] unsigned char 
  5625 ;;  ret             1    0        unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      unsigned char 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5635 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;Total ram usage:        8 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 16
  5642 ;; This function calls:
  5643 ;;		_memset
  5644 ;;		_sprintf
  5645 ;; This function is called by:
  5646 ;;		_HeartRate_Display
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text34
  5651   002E8E                     __ptext34:
  5652                           	callstack 0
  5653   002E8E                     _convert_uint8_to_string:
  5654                           	callstack 13
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;incstack = 0
  5658                           ;convert_uint8_to_string@value stored from wreg
  5659   002E8E  0101               	movlb	1	; () banked
  5660   002E90  6F5C               	movwf	convert_uint8_to_string@value& (0+255),b
  5661   002E92                     
  5662                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 329:    uint8 Temp_str[4]={0};
  5663   002E92  0E00               	movlw	0
  5664   002E94  0101               	movlb	1	; () banked
  5665   002E96  6F58               	movwf	convert_uint8_to_string@Temp_str& (0+255),b
  5666   002E98  0E00               	movlw	0
  5667   002E9A  6F59               	movwf	(convert_uint8_to_string@Temp_str+1)& (0+255),b
  5668   002E9C  0E00               	movlw	0
  5669   002E9E  6F5A               	movwf	(convert_uint8_to_string@Temp_str+2)& (0+255),b
  5670   002EA0  0E00               	movlw	0
  5671   002EA2  6F5B               	movwf	(convert_uint8_to_string@Temp_str+3)& (0+255),b
  5672                           
  5673                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 330:    uint8 cnt =0;
  5674   002EA4  0E00               	movlw	0
  5675   002EA6  6F5D               	movwf	convert_uint8_to_string@cnt& (0+255),b
  5676   002EA8                     
  5677                           ; BSR set to: 1
  5678                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 331:     if(str==((void*)0)){
  5679   002EA8  5156               	movf	convert_uint8_to_string@str& (0+255),w,b
  5680   002EAA  1157               	iorwf	(convert_uint8_to_string@str+1)& (0+255),w,b
  5681   002EAC  A4D8               	btfss	status,2,c
  5682   002EAE  EF5B  F017         	goto	u9221
  5683   002EB2  EF5D  F017         	goto	u9220
  5684   002EB6                     u9221:
  5685   002EB6  EF5F  F017         	goto	l9187
  5686   002EBA                     u9220:
  5687   002EBA                     
  5688                           ; BSR set to: 1
  5689                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 333:     }
  5690   002EBA  EFA2  F017         	goto	l168
  5691   002EBE                     l9187:
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 335:         memset(str,' ',4);
  5695   002EBE  C156  F028         	movff	convert_uint8_to_string@str,memset@dest
  5696   002EC2  C157  F029         	movff	convert_uint8_to_string@str+1,memset@dest+1
  5697   002EC6  0E00               	movlw	0
  5698   002EC8  6E2B               	movwf	(memset@c+1)^0,c
  5699   002ECA  0E20               	movlw	32
  5700   002ECC  6E2A               	movwf	memset@c^0,c
  5701   002ECE  0E00               	movlw	0
  5702   002ED0  6E2D               	movwf	(memset@n+1)^0,c
  5703   002ED2  0E04               	movlw	4
  5704   002ED4  6E2C               	movwf	memset@n^0,c
  5705   002ED6  EC1F  F00F         	call	_memset	;wreg free
  5706   002EDA                     
  5707                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 336:         sprintf(Temp_str,"%i",value);
  5708   002EDA  0E58               	movlw	low convert_uint8_to_string@Temp_str
  5709   002EDC  0101               	movlb	1	; () banked
  5710   002EDE  6F40               	movwf	sprintf@s& (0+255),b
  5711   002EE0  0E01               	movlw	high convert_uint8_to_string@Temp_str
  5712   002EE2  6F41               	movwf	(sprintf@s+1)& (0+255),b
  5713   002EE4  0E51               	movlw	low STR_1
  5714   002EE6  6F42               	movwf	sprintf@fmt& (0+255),b
  5715   002EE8  0E10               	movlw	high STR_1
  5716   002EEA  6F43               	movwf	(sprintf@fmt+1)& (0+255),b
  5717   002EEC  C15C  F144         	movff	convert_uint8_to_string@value,?_sprintf+4
  5718   002EF0  6B45               	clrf	(?_sprintf+5)& (0+255),b
  5719   002EF2  ECFE  F01D         	call	_sprintf	;wreg free
  5720                           
  5721                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:         while (Temp_str[cnt] != '\0'){
  5722   002EF6  EF8C  F017         	goto	l9195
  5723   002EFA                     l9191:
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 338:             str[cnt] = Temp_str [cnt];
  5727   002EFA  0E58               	movlw	low convert_uint8_to_string@Temp_str
  5728   002EFC  255D               	addwf	convert_uint8_to_string@cnt& (0+255),w,b
  5729   002EFE  6ED9               	movwf	fsr2l,c
  5730   002F00  6ADA               	clrf	fsr2h,c
  5731   002F02  0E01               	movlw	high convert_uint8_to_string@Temp_str
  5732   002F04  22DA               	addwfc	fsr2h,f,c
  5733   002F06  515D               	movf	convert_uint8_to_string@cnt& (0+255),w,b
  5734   002F08  2556               	addwf	convert_uint8_to_string@str& (0+255),w,b
  5735   002F0A  6EE1               	movwf	fsr1l,c
  5736   002F0C  0E00               	movlw	0
  5737   002F0E  2157               	addwfc	(convert_uint8_to_string@str+1)& (0+255),w,b
  5738   002F10  6EE2               	movwf	fsr1h,c
  5739   002F12  CFDF FFE7          	movff	indf2,indf1
  5740   002F16                     
  5741                           ; BSR set to: 1
  5742                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 339:             cnt++;
  5743   002F16  2B5D               	incf	convert_uint8_to_string@cnt& (0+255),f,b
  5744   002F18                     l9195:
  5745                           
  5746                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:         while (Temp_str[cnt] != '\0'){
  5747   002F18  0E58               	movlw	low convert_uint8_to_string@Temp_str
  5748   002F1A  0101               	movlb	1	; () banked
  5749   002F1C  255D               	addwf	convert_uint8_to_string@cnt& (0+255),w,b
  5750   002F1E  6ED9               	movwf	fsr2l,c
  5751   002F20  6ADA               	clrf	fsr2h,c
  5752   002F22  0E01               	movlw	high convert_uint8_to_string@Temp_str
  5753   002F24  22DA               	addwfc	fsr2h,f,c
  5754   002F26  50DF               	movf	indf2,w,c
  5755   002F28  A4D8               	btfss	status,2,c
  5756   002F2A  EF99  F017         	goto	u9231
  5757   002F2E  EF9B  F017         	goto	u9230
  5758   002F32                     u9231:
  5759   002F32  EF7D  F017         	goto	l9191
  5760   002F36                     u9230:
  5761   002F36                     
  5762                           ; BSR set to: 1
  5763                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 341:         str[3] = '\0';
  5764   002F36  EE20 F003          	lfsr	2,3
  5765   002F3A  5156               	movf	convert_uint8_to_string@str& (0+255),w,b
  5766   002F3C  26D9               	addwf	fsr2l,f,c
  5767   002F3E  5157               	movf	(convert_uint8_to_string@str+1)& (0+255),w,b
  5768   002F40  22DA               	addwfc	fsr2h,f,c
  5769   002F42  6ADF               	clrf	indf2,c
  5770   002F44                     l168:
  5771                           
  5772                           ; BSR set to: 1
  5773   002F44  0012               	return		;funcret
  5774   002F46                     __end_of_convert_uint8_to_string:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _sprintf *****************
  5778 ;; Defined at:
  5779 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  s               2    2[BANK1 ] PTR unsigned char 
  5782 ;;		 -> convert_uint32_to_string@Temp_str(11), convert_uint16_to_string@Temp_str(6), convert_uint8_to_string@Temp_str(4)
      +, 
  5783 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  5784 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  f              12   12[BANK1 ] struct _IO_FILE
  5787 ;;  ap              2   10[BANK1 ] PTR void [1]
  5788 ;;		 -> ?_sprintf(2), 
  5789 ;;  ret             2    0        int 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  2    2[BANK1 ] int 
  5792 ;; Registers used:
  5793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:       22 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 15
  5806 ;; This function calls:
  5807 ;;		_vfprintf
  5808 ;; This function is called by:
  5809 ;;		_convert_uint8_to_string
  5810 ;;		_convert_uint16_to_string
  5811 ;;		_convert_uint32_to_string
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text35
  5816   003BFC                     __ptext35:
  5817                           	callstack 0
  5818   003BFC                     _sprintf:
  5819                           	callstack 13
  5820   003BFC  0E44               	movlw	low (?_sprintf+4)
  5821   003BFE  0101               	movlb	1	; () banked
  5822   003C00  6F48               	movwf	sprintf@ap& (0+255),b
  5823   003C02  0E01               	movlw	high (?_sprintf+4)
  5824   003C04  6F49               	movwf	(sprintf@ap+1)& (0+255),b
  5825   003C06  C140  F14A         	movff	sprintf@s,sprintf@f
  5826   003C0A  C141  F14B         	movff	sprintf@s+1,sprintf@f+1
  5827   003C0E                     
  5828                           ; BSR set to: 1
  5829   003C0E  0E00               	movlw	0
  5830   003C10  6F4E               	movwf	(sprintf@f+4)& (0+255),b
  5831   003C12  0E00               	movlw	0
  5832   003C14  6F4D               	movwf	(sprintf@f+3)& (0+255),b
  5833   003C16                     
  5834                           ; BSR set to: 1
  5835   003C16  0E00               	movlw	0
  5836   003C18  6F55               	movwf	(sprintf@f+11)& (0+255),b
  5837   003C1A  0E00               	movlw	0
  5838   003C1C  6F54               	movwf	(sprintf@f+10)& (0+255),b
  5839   003C1E                     
  5840                           ; BSR set to: 1
  5841   003C1E  0E4A               	movlw	low sprintf@f
  5842   003C20  0100               	movlb	0	; () banked
  5843   003C22  6FE0               	movwf	vfprintf@fp& (0+255),b
  5844   003C24  0E01               	movlw	high sprintf@f
  5845   003C26  6FE1               	movwf	(vfprintf@fp+1)& (0+255),b
  5846   003C28  C142  F0E2         	movff	sprintf@fmt,vfprintf@fmt
  5847   003C2C  C143  F0E3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5848   003C30  0E48               	movlw	low sprintf@ap
  5849   003C32  6FE4               	movwf	vfprintf@ap& (0+255),b
  5850   003C34  0E01               	movlw	high sprintf@ap
  5851   003C36  6FE5               	movwf	(vfprintf@ap+1)& (0+255),b
  5852   003C38  ECD4  F01D         	call	_vfprintf	;wreg free
  5853   003C3C  0101               	movlb	1	; () banked
  5854   003C3E  514D               	movf	(sprintf@f+3)& (0+255),w,b
  5855   003C40  2540               	addwf	sprintf@s& (0+255),w,b
  5856   003C42  6ED9               	movwf	fsr2l,c
  5857   003C44  514E               	movf	(sprintf@f+4)& (0+255),w,b
  5858   003C46  2141               	addwfc	(sprintf@s+1)& (0+255),w,b
  5859   003C48  6EDA               	movwf	fsr2h,c
  5860   003C4A  6ADF               	clrf	indf2,c
  5861   003C4C                     
  5862                           ; BSR set to: 1
  5863   003C4C  0012               	return		;funcret
  5864   003C4E                     __end_of_sprintf:
  5865                           	callstack 0
  5866                           
  5867 ;; *************** function _vfprintf *****************
  5868 ;; Defined at:
  5869 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  5872 ;;		 -> sprintf@f(12), 
  5873 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  5874 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5875 ;;  ap              2   49[BANK0 ] PTR PTR void 
  5876 ;;		 -> sprintf@ap(2), 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  5879 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  2   45[BANK0 ] int 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        8 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 14
  5896 ;; This function calls:
  5897 ;;		_vfpfcnvrt
  5898 ;; This function is called by:
  5899 ;;		_sprintf
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text36
  5904   003BA8                     __ptext36:
  5905                           	callstack 0
  5906   003BA8                     _vfprintf:
  5907                           	callstack 13
  5908   003BA8                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  5910   003BA8  C0E2  F13E         	movff	vfprintf@fmt,vfprintf@cfmt
  5911   003BAC  C0E3  F13F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5912                           
  5913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5914   003BB0  EFE9  F01D         	goto	l8969
  5915   003BB4                     l8967:
  5916                           
  5917                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5918   003BB4  C0E0  F0D2         	movff	vfprintf@fp,vfpfcnvrt@fp
  5919   003BB8  C0E1  F0D3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5920   003BBC  0E3E               	movlw	low vfprintf@cfmt
  5921   003BBE  0100               	movlb	0	; () banked
  5922   003BC0  6FD4               	movwf	vfpfcnvrt@fmt& (0+255),b
  5923   003BC2  0E01               	movlw	high vfprintf@cfmt
  5924   003BC4  6FD5               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5925   003BC6  C0E4  F0D6         	movff	vfprintf@ap,vfpfcnvrt@ap
  5926   003BCA  C0E5  F0D7         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5927   003BCE  EC7C  F012         	call	_vfpfcnvrt	;wreg free
  5928   003BD2                     l8969:
  5929                           
  5930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5931   003BD2  C13E  FFF6         	movff	vfprintf@cfmt,tblptrl
  5932   003BD6  C13F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5933   003BDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5934   003BDA  6AF8               	clrf	tblptru,c
  5935   003BDC                     	endif
  5936   003BDC                     	if	0	;tblptru may be non-zero
  5937   003BDC                     	endif
  5938   003BDC  0008               	tblrd		*
  5939   003BDE  50F5               	movf	tablat,w,c
  5940   003BE0  0900               	iorlw	0
  5941   003BE2  A4D8               	btfss	status,2,c
  5942   003BE4  EFF6  F01D         	goto	u9031
  5943   003BE8  EFF8  F01D         	goto	u9030
  5944   003BEC                     u9031:
  5945   003BEC  EFDA  F01D         	goto	l8967
  5946   003BF0                     u9030:
  5947   003BF0                     
  5948                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  5949   003BF0  0E00               	movlw	0
  5950   003BF2  0100               	movlb	0	; () banked
  5951   003BF4  6FE1               	movwf	(?_vfprintf+1)& (0+255),b
  5952   003BF6  0E00               	movlw	0
  5953   003BF8  6FE0               	movwf	?_vfprintf& (0+255),b
  5954   003BFA                     
  5955                           ; BSR set to: 0
  5956   003BFA  0012               	return		;funcret
  5957   003BFC                     __end_of_vfprintf:
  5958                           	callstack 0
  5959                           
  5960 ;; *************** function _vfpfcnvrt *****************
  5961 ;; Defined at:
  5962 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  5965 ;;		 -> sprintf@f(12), 
  5966 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  5967 ;;		 -> vfprintf@cfmt(2), 
  5968 ;;  ap              2   35[BANK0 ] PTR PTR void 
  5969 ;;		 -> sprintf@ap(2), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  convarg         4   39[BANK0 ] struct .
  5972 ;;  cp              2   43[BANK0 ] PTR unsigned char 
  5973 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5974 ;;  i               2    0        int 
  5975 ;;  done            2    0        int 
  5976 ;;  c               1    0        unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5986 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;Total ram usage:       14 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 13
  5993 ;; This function calls:
  5994 ;;		_dtoa
  5995 ;;		_fputc
  5996 ;; This function is called by:
  5997 ;;		_vfprintf
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text37
  6002   0024F8                     __ptext37:
  6003                           	callstack 0
  6004   0024F8                     _vfpfcnvrt:
  6005                           	callstack 13
  6006   0024F8                     
  6007                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  6008   0024F8  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6009   0024FC  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6010   002500  CFDE FFF6          	movff	postinc2,tblptrl
  6011   002504  CFDD FFF7          	movff	postdec2,tblptrh
  6012   002508                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6013   002508  6AF8               	clrf	tblptru,c
  6014   00250A                     	endif
  6015   00250A                     	if	0	;tblptru may be non-zero
  6016   00250A                     	endif
  6017   00250A  0008               	tblrd		*
  6018   00250C  50F5               	movf	tablat,w,c
  6019   00250E  0A25               	xorlw	37
  6020   002510  A4D8               	btfss	status,2,c
  6021   002512  EF8D  F012         	goto	u8951
  6022   002516  EF8F  F012         	goto	u8950
  6023   00251A                     u8951:
  6024   00251A  EFFC  F012         	goto	l8885
  6025   00251E                     u8950:
  6026   00251E                     
  6027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  6028   00251E  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6029   002522  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6030   002526  2ADE               	incf	postinc2,f,c
  6031   002528  0E00               	movlw	0
  6032   00252A  22DD               	addwfc	postdec2,f,c
  6033   00252C                     
  6034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  6035   00252C  0E00               	movlw	0
  6036   00252E  0100               	movlb	0	; () banked
  6037   002530  6F89               	movwf	(_width+1)& (0+255),b
  6038   002532  0E00               	movlw	0
  6039   002534  6F88               	movwf	_width& (0+255),b
  6040   002536  C088  F047         	movff	_width,_flags
  6041   00253A                     
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  6044   00253A  698A               	setf	_prec& (0+255),b
  6045   00253C  698B               	setf	(_prec+1)& (0+255),b
  6046   00253E                     
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  6049   00253E  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6050   002542  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6051   002546  CFDE F0DE          	movff	postinc2,vfpfcnvrt@cp
  6052   00254A  CFDD F0DF          	movff	postdec2,vfpfcnvrt@cp+1
  6053   00254E                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6056   00254E  C0DE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6057   002552  C0DF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6058   002556                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6059   002556  6AF8               	clrf	tblptru,c
  6060   002558                     	endif
  6061   002558                     	if	0	;tblptru may be non-zero
  6062   002558                     	endif
  6063   002558  0008               	tblrd		*
  6064   00255A  50F5               	movf	tablat,w,c
  6065   00255C  0A64               	xorlw	100
  6066   00255E  B4D8               	btfsc	status,2,c
  6067   002560  EFB4  F012         	goto	u8961
  6068   002564  EFB6  F012         	goto	u8960
  6069   002568                     u8961:
  6070   002568  EFC5  F012         	goto	l8875
  6071   00256C                     u8960:
  6072   00256C                     
  6073                           ; BSR set to: 0
  6074   00256C  C0DE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6075   002570  C0DF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6076   002574                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6077   002574  6AF8               	clrf	tblptru,c
  6078   002576                     	endif
  6079   002576                     	if	0	;tblptru may be non-zero
  6080   002576                     	endif
  6081   002576  0008               	tblrd		*
  6082   002578  50F5               	movf	tablat,w,c
  6083   00257A  0A69               	xorlw	105
  6084   00257C  A4D8               	btfss	status,2,c
  6085   00257E  EFC3  F012         	goto	u8971
  6086   002582  EFC5  F012         	goto	u8970
  6087   002586                     u8971:
  6088   002586  EFF3  F012         	goto	l8881
  6089   00258A                     u8970:
  6090   00258A                     l8875:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6094   00258A  C0D6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6095   00258E  C0D7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6096   002592  CFDF F0D8          	movff	indf2,??_vfpfcnvrt
  6097   002596  0E02               	movlw	2
  6098   002598  26DE               	addwf	postinc2,f,c
  6099   00259A  CFDF F0D9          	movff	indf2,??_vfpfcnvrt+1
  6100   00259E  0E00               	movlw	0
  6101   0025A0  22DD               	addwfc	postdec2,f,c
  6102   0025A2  C0D8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6103   0025A6  C0D9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6104   0025AA  CFDE F0DA          	movff	postinc2,vfpfcnvrt@convarg
  6105   0025AE  CFDD F0DB          	movff	postdec2,vfpfcnvrt@convarg+1
  6106                           
  6107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  6108   0025B2  0E01               	movlw	1
  6109   0025B4  25DE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6110   0025B6  6FD8               	movwf	??_vfpfcnvrt& (0+255),b
  6111   0025B8  0E00               	movlw	0
  6112   0025BA  21DF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6113   0025BC  6FD9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6114   0025BE  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6115   0025C2  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6116   0025C6  C0D8  FFDE         	movff	??_vfpfcnvrt,postinc2
  6117   0025CA  C0D9  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6118   0025CE                     
  6119                           ; BSR set to: 0
  6120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6121   0025CE  C0D2  F0C5         	movff	vfpfcnvrt@fp,dtoa@fp
  6122   0025D2  C0D3  F0C6         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6123   0025D6  C0DA  F0C7         	movff	vfpfcnvrt@convarg,dtoa@d
  6124   0025DA  C0DB  F0C8         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6125   0025DE  EC52  F00E         	call	_dtoa	;wreg free
  6126   0025E2  EF11  F013         	goto	l2245
  6127   0025E6                     l8881:
  6128                           
  6129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  6130   0025E6  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6131   0025EA  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6132   0025EE  2ADE               	incf	postinc2,f,c
  6133   0025F0  0E00               	movlw	0
  6134   0025F2  22DD               	addwfc	postdec2,f,c
  6135   0025F4  EF11  F013         	goto	l2245
  6136   0025F8                     l8885:
  6137                           
  6138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  6139   0025F8  C0D4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6140   0025FC  C0D5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6141   002600  CFDE FFF6          	movff	postinc2,tblptrl
  6142   002604  CFDD FFF7          	movff	postdec2,tblptrh
  6143   002608                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6144   002608  6AF8               	clrf	tblptru,c
  6145   00260A                     	endif
  6146   00260A                     	if	0	;tblptru may be non-zero
  6147   00260A                     	endif
  6148   00260A  0008               	tblrd		*
  6149   00260C  50F5               	movf	tablat,w,c
  6150   00260E  6E28               	movwf	fputc@c^0,c
  6151   002610  6A29               	clrf	(fputc@c+1)^0,c
  6152   002612  C0D2  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  6153   002616  C0D3  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6154   00261A  EC80  F016         	call	_fputc	;wreg free
  6155   00261E  EFF3  F012         	goto	l8881
  6156   002622                     l2245:
  6157   002622  0012               	return		;funcret
  6158   002624                     __end_of_vfpfcnvrt:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _dtoa *****************
  6162 ;; Defined at:
  6163 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  6166 ;;		 -> sprintf@f(12), 
  6167 ;;  d               2   20[BANK0 ] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  i               2   29[BANK0 ] int 
  6170 ;;  w               2   26[BANK0 ] int 
  6171 ;;  p               2   24[BANK0 ] int 
  6172 ;;  s               1   28[BANK0 ] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:       13 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 12
  6189 ;; This function calls:
  6190 ;;		___awdiv
  6191 ;;		___awmod
  6192 ;;		_abs
  6193 ;;		_pad
  6194 ;; This function is called by:
  6195 ;;		_vfpfcnvrt
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text38
  6200   001CA4                     __ptext38:
  6201                           	callstack 0
  6202   001CA4                     _dtoa:
  6203                           	callstack 13
  6204   001CA4                     
  6205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  6206   001CA4  0100               	movlb	0	; () banked
  6207   001CA6  BFC8               	btfsc	(dtoa@d+1)& (0+255),7,b
  6208   001CA8  EF58  F00E         	goto	u8711
  6209   001CAC  EF5B  F00E         	goto	u8710
  6210   001CB0                     u8711:
  6211   001CB0  0E01               	movlw	1
  6212   001CB2  EF5C  F00E         	goto	u8720
  6213   001CB6                     u8710:
  6214   001CB6  0E00               	movlw	0
  6215   001CB8                     u8720:
  6216   001CB8  6FCF               	movwf	dtoa@s& (0+255),b
  6217   001CBA                     
  6218                           ; BSR set to: 0
  6219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  6220   001CBA  51CF               	movf	dtoa@s& (0+255),w,b
  6221   001CBC  B4D8               	btfsc	status,2,c
  6222   001CBE  EF63  F00E         	goto	u8731
  6223   001CC2  EF65  F00E         	goto	u8730
  6224   001CC6                     u8731:
  6225   001CC6  EF69  F00E         	goto	l8685
  6226   001CCA                     u8730:
  6227   001CCA                     
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  6230   001CCA  6DC7               	negf	dtoa@d& (0+255),b
  6231   001CCC  1FC8               	comf	(dtoa@d+1)& (0+255),f,b
  6232   001CCE  B0D8               	btfsc	status,0,c
  6233   001CD0  2BC8               	incf	(dtoa@d+1)& (0+255),f,b
  6234   001CD2                     l8685:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  6238   001CD2  BF8B               	btfsc	(_prec+1)& (0+255),7,b
  6239   001CD4  EF70  F00E         	goto	u8740
  6240   001CD8  EF6E  F00E         	goto	u8741
  6241   001CDC                     u8741:
  6242   001CDC  EF76  F00E         	goto	l2224
  6243   001CE0                     u8740:
  6244   001CE0                     
  6245                           ; BSR set to: 0
  6246   001CE0  0E00               	movlw	0
  6247   001CE2  6FCC               	movwf	(dtoa@p+1)& (0+255),b
  6248   001CE4  0E01               	movlw	1
  6249   001CE6  6FCB               	movwf	dtoa@p& (0+255),b
  6250   001CE8  EF7A  F00E         	goto	l2226
  6251   001CEC                     l2224:
  6252                           
  6253                           ; BSR set to: 0
  6254   001CEC  C08A  F0CB         	movff	_prec,dtoa@p
  6255   001CF0  C08B  F0CC         	movff	_prec+1,dtoa@p+1
  6256   001CF4                     l2226:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  6260   001CF4  C088  F0CD         	movff	_width,dtoa@w
  6261   001CF8  C089  F0CE         	movff	_width+1,dtoa@w+1
  6262   001CFC                     
  6263                           ; BSR set to: 0
  6264                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  6265   001CFC  51CF               	movf	dtoa@s& (0+255),w,b
  6266   001CFE  B4D8               	btfsc	status,2,c
  6267   001D00  EF84  F00E         	goto	u8751
  6268   001D04  EF86  F00E         	goto	u8750
  6269   001D08                     u8751:
  6270   001D08  EF9D  F00E         	goto	l2227
  6271   001D0C                     u8750:
  6272   001D0C                     
  6273                           ; BSR set to: 0
  6274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  6275   001D0C  07CD               	decf	dtoa@w& (0+255),f,b
  6276   001D0E  A0D8               	btfss	status,0,c
  6277   001D10  07CE               	decf	(dtoa@w+1)& (0+255),f,b
  6278   001D12                     
  6279                           ; BSR set to: 0
  6280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  6281   001D12  51CF               	movf	dtoa@s& (0+255),w,b
  6282   001D14  A4D8               	btfss	status,2,c
  6283   001D16  EF8F  F00E         	goto	u8761
  6284   001D1A  EF91  F00E         	goto	u8760
  6285   001D1E                     u8761:
  6286   001D1E  EF97  F00E         	goto	l8697
  6287   001D22                     u8760:
  6288   001D22                     
  6289                           ; BSR set to: 0
  6290   001D22  0E00               	movlw	0
  6291   001D24  6FCA               	movwf	(_dtoa$3368+1)& (0+255),b
  6292   001D26  0E2B               	movlw	43
  6293   001D28  6FC9               	movwf	_dtoa$3368& (0+255),b
  6294   001D2A  EF9B  F00E         	goto	l8699
  6295   001D2E                     l8697:
  6296                           
  6297                           ; BSR set to: 0
  6298   001D2E  0E00               	movlw	0
  6299   001D30  6FCA               	movwf	(_dtoa$3368+1)& (0+255),b
  6300   001D32  0E2D               	movlw	45
  6301   001D34  6FC9               	movwf	_dtoa$3368& (0+255),b
  6302   001D36                     l8699:
  6303                           
  6304                           ; BSR set to: 0
  6305   001D36  C0C9  F0CF         	movff	_dtoa$3368,dtoa@s
  6306   001D3A                     l2227:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  6310   001D3A  0E00               	movlw	0
  6311   001D3C  6FD1               	movwf	(dtoa@i+1)& (0+255),b
  6312   001D3E  0E1F               	movlw	31
  6313   001D40  6FD0               	movwf	dtoa@i& (0+255),b
  6314   001D42                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  6317   001D42  0E00               	movlw	0
  6318   001D44  0101               	movlb	1	; () banked
  6319   001D46  6F30               	movwf	(_dbuf+31)& (0+255),b
  6320                           
  6321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6322   001D48  EFD7  F00E         	goto	l8713
  6323   001D4C                     l8703:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  6327   001D4C  07D0               	decf	dtoa@i& (0+255),f,b
  6328   001D4E  A0D8               	btfss	status,0,c
  6329   001D50  07D1               	decf	(dtoa@i+1)& (0+255),f,b
  6330   001D52                     
  6331                           ; BSR set to: 0
  6332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6333   001D52  0E11               	movlw	low _dbuf
  6334   001D54  25D0               	addwf	dtoa@i& (0+255),w,b
  6335   001D56  6ED9               	movwf	fsr2l,c
  6336   001D58  0E01               	movlw	high _dbuf
  6337   001D5A  21D1               	addwfc	(dtoa@i+1)& (0+255),w,b
  6338   001D5C  6EDA               	movwf	fsr2h,c
  6339   001D5E  C0C7  F028         	movff	dtoa@d,___awmod@dividend
  6340   001D62  C0C8  F029         	movff	dtoa@d+1,___awmod@dividend+1
  6341   001D66  0E00               	movlw	0
  6342   001D68  6E2B               	movwf	(___awmod@divisor+1)^0,c
  6343   001D6A  0E0A               	movlw	10
  6344   001D6C  6E2A               	movwf	___awmod@divisor^0,c
  6345   001D6E  EC57  F018         	call	___awmod	;wreg free
  6346   001D72  C028  F02E         	movff	?___awmod,abs@a
  6347   001D76  C029  F02F         	movff	?___awmod+1,abs@a+1
  6348   001D7A  ECBA  F01E         	call	_abs	;wreg free
  6349   001D7E  502E               	movf	?_abs^0,w,c
  6350   001D80  0F30               	addlw	48
  6351   001D82  6EDF               	movwf	indf2,c
  6352   001D84                     
  6353                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  6354   001D84  0100               	movlb	0	; () banked
  6355   001D86  07CB               	decf	dtoa@p& (0+255),f,b
  6356   001D88  A0D8               	btfss	status,0,c
  6357   001D8A  07CC               	decf	(dtoa@p+1)& (0+255),f,b
  6358   001D8C                     
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  6361   001D8C  07CD               	decf	dtoa@w& (0+255),f,b
  6362   001D8E  A0D8               	btfss	status,0,c
  6363   001D90  07CE               	decf	(dtoa@w+1)& (0+255),f,b
  6364   001D92                     
  6365                           ; BSR set to: 0
  6366                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  6367   001D92  C0C7  F028         	movff	dtoa@d,___awdiv@dividend
  6368   001D96  C0C8  F029         	movff	dtoa@d+1,___awdiv@dividend+1
  6369   001D9A  0E00               	movlw	0
  6370   001D9C  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  6371   001D9E  0E0A               	movlw	10
  6372   001DA0  6E2A               	movwf	___awdiv@divisor^0,c
  6373   001DA2  ECE5  F016         	call	___awdiv	;wreg free
  6374   001DA6  C028  F0C7         	movff	?___awdiv,dtoa@d
  6375   001DAA  C029  F0C8         	movff	?___awdiv+1,dtoa@d+1
  6376   001DAE                     l8713:
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6379   001DAE  0100               	movlb	0	; () banked
  6380   001DB0  BFD1               	btfsc	(dtoa@i+1)& (0+255),7,b
  6381   001DB2  EFE3  F00E         	goto	u8771
  6382   001DB6  51D1               	movf	(dtoa@i+1)& (0+255),w,b
  6383   001DB8  E108               	bnz	u8770
  6384   001DBA  05D0               	decf	dtoa@i& (0+255),w,b
  6385   001DBC  A0D8               	btfss	status,0,c
  6386   001DBE  EFE3  F00E         	goto	u8771
  6387   001DC2  EFE5  F00E         	goto	u8770
  6388   001DC6                     u8771:
  6389   001DC6  EFFB  F00E         	goto	l8719
  6390   001DCA                     u8770:
  6391   001DCA                     
  6392                           ; BSR set to: 0
  6393   001DCA  51C7               	movf	dtoa@d& (0+255),w,b
  6394   001DCC  11C8               	iorwf	(dtoa@d+1)& (0+255),w,b
  6395   001DCE  A4D8               	btfss	status,2,c
  6396   001DD0  EFEC  F00E         	goto	u8781
  6397   001DD4  EFEE  F00E         	goto	u8780
  6398   001DD8                     u8781:
  6399   001DD8  EFA6  F00E         	goto	l8703
  6400   001DDC                     u8780:
  6401   001DDC                     
  6402                           ; BSR set to: 0
  6403   001DDC  BFCC               	btfsc	(dtoa@p+1)& (0+255),7,b
  6404   001DDE  EFFB  F00E         	goto	u8790
  6405   001DE2  51CC               	movf	(dtoa@p+1)& (0+255),w,b
  6406   001DE4  E106               	bnz	u8791
  6407   001DE6  05CB               	decf	dtoa@p& (0+255),w,b
  6408   001DE8  B0D8               	btfsc	status,0,c
  6409   001DEA  EFF9  F00E         	goto	u8791
  6410   001DEE  EFFB  F00E         	goto	u8790
  6411   001DF2                     u8791:
  6412   001DF2  EFA6  F00E         	goto	l8703
  6413   001DF6                     u8790:
  6414   001DF6                     l8719:
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  6418   001DF6  51CF               	movf	dtoa@s& (0+255),w,b
  6419   001DF8  B4D8               	btfsc	status,2,c
  6420   001DFA  EF01  F00F         	goto	u8801
  6421   001DFE  EF03  F00F         	goto	u8800
  6422   001E02                     u8801:
  6423   001E02  EF0E  F00F         	goto	l8725
  6424   001E06                     u8800:
  6425   001E06                     
  6426                           ; BSR set to: 0
  6427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  6428   001E06  07D0               	decf	dtoa@i& (0+255),f,b
  6429   001E08  A0D8               	btfss	status,0,c
  6430   001E0A  07D1               	decf	(dtoa@i+1)& (0+255),f,b
  6431   001E0C                     
  6432                           ; BSR set to: 0
  6433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  6434   001E0C  0E11               	movlw	low _dbuf
  6435   001E0E  25D0               	addwf	dtoa@i& (0+255),w,b
  6436   001E10  6ED9               	movwf	fsr2l,c
  6437   001E12  0E01               	movlw	high _dbuf
  6438   001E14  21D1               	addwfc	(dtoa@i+1)& (0+255),w,b
  6439   001E16  6EDA               	movwf	fsr2h,c
  6440   001E18  C0CF  FFDF         	movff	dtoa@s,indf2
  6441   001E1C                     l8725:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6445   001E1C  C0C5  F0BA         	movff	dtoa@fp,pad@fp
  6446   001E20  C0C6  F0BB         	movff	dtoa@fp+1,pad@fp+1
  6447   001E24  0E11               	movlw	low _dbuf
  6448   001E26  25D0               	addwf	dtoa@i& (0+255),w,b
  6449   001E28  6FBC               	movwf	pad@buf& (0+255),b
  6450   001E2A  0E01               	movlw	high _dbuf
  6451   001E2C  21D1               	addwfc	(dtoa@i+1)& (0+255),w,b
  6452   001E2E  6FBD               	movwf	(pad@buf+1)& (0+255),b
  6453   001E30  C0CD  F0BE         	movff	dtoa@w,pad@p
  6454   001E34  C0CE  F0BF         	movff	dtoa@w+1,pad@p+1
  6455   001E38  EC0C  F01C         	call	_pad	;wreg free
  6456   001E3C  0012               	return		;funcret
  6457   001E3E                     __end_of_dtoa:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function _pad *****************
  6461 ;; Defined at:
  6462 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  6465 ;;		 -> sprintf@f(12), 
  6466 ;;  buf             2    9[BANK0 ] PTR unsigned char 
  6467 ;;		 -> dbuf(32), 
  6468 ;;  p               2   11[BANK0 ] int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  w               2   16[BANK0 ] int 
  6471 ;;  i               2   14[BANK0 ] int 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;Total ram usage:       11 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 11
  6488 ;; This function calls:
  6489 ;;		_fputc
  6490 ;;		_fputs
  6491 ;; This function is called by:
  6492 ;;		_dtoa
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text39
  6497   003818                     __ptext39:
  6498                           	callstack 0
  6499   003818                     _pad:
  6500                           	callstack 13
  6501   003818                     
  6502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  6503   003818  0100               	movlb	0	; () banked
  6504   00381A  BFBF               	btfsc	(pad@p+1)& (0+255),7,b
  6505   00381C  EF12  F01C         	goto	u8441
  6506   003820  EF14  F01C         	goto	u8440
  6507   003824                     u8441:
  6508   003824  EF1A  F01C         	goto	l8525
  6509   003828                     u8440:
  6510   003828                     
  6511                           ; BSR set to: 0
  6512   003828  C0BE  F0C3         	movff	pad@p,pad@w
  6513   00382C  C0BF  F0C4         	movff	pad@p+1,pad@w+1
  6514   003830  EF1E  F01C         	goto	l2215
  6515   003834                     l8525:
  6516                           
  6517                           ; BSR set to: 0
  6518   003834  0E00               	movlw	0
  6519   003836  6FC4               	movwf	(pad@w+1)& (0+255),b
  6520   003838  0E00               	movlw	0
  6521   00383A  6FC3               	movwf	pad@w& (0+255),b
  6522   00383C                     l2215:
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  6526   00383C  0E00               	movlw	0
  6527   00383E  6FC2               	movwf	(pad@i+1)& (0+255),b
  6528   003840  0E00               	movlw	0
  6529   003842  6FC1               	movwf	pad@i& (0+255),b
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6532   003844  EF31  F01C         	goto	l8531
  6533   003848                     l8527:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  6537   003848  0E00               	movlw	0
  6538   00384A  6E29               	movwf	(fputc@c+1)^0,c
  6539   00384C  0E20               	movlw	32
  6540   00384E  6E28               	movwf	fputc@c^0,c
  6541   003850  C0BA  F02A         	movff	pad@fp,fputc@fp
  6542   003854  C0BB  F02B         	movff	pad@fp+1,fputc@fp+1
  6543   003858  EC80  F016         	call	_fputc	;wreg free
  6544   00385C                     
  6545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  6546   00385C  0100               	movlb	0	; () banked
  6547   00385E  4BC1               	infsnz	pad@i& (0+255),f,b
  6548   003860  2BC2               	incf	(pad@i+1)& (0+255),f,b
  6549   003862                     l8531:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6553   003862  51C3               	movf	pad@w& (0+255),w,b
  6554   003864  5DC1               	subwf	pad@i& (0+255),w,b
  6555   003866  51C2               	movf	(pad@i+1)& (0+255),w,b
  6556   003868  0A80               	xorlw	128
  6557   00386A  6FC0               	movwf	??_pad& (0+255),b
  6558   00386C  51C4               	movf	(pad@w+1)& (0+255),w,b
  6559   00386E  0A80               	xorlw	128
  6560   003870  59C0               	subwfb	??_pad& (0+255),w,b
  6561   003872  A0D8               	btfss	status,0,c
  6562   003874  EF3E  F01C         	goto	u8451
  6563   003878  EF40  F01C         	goto	u8450
  6564   00387C                     u8451:
  6565   00387C  EF24  F01C         	goto	l8527
  6566   003880                     u8450:
  6567   003880                     
  6568                           ; BSR set to: 0
  6569                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  6570   003880  C0BC  F0B3         	movff	pad@buf,fputs@s
  6571   003884  C0BD  F0B4         	movff	pad@buf+1,fputs@s+1
  6572   003888  C0BA  F0B5         	movff	pad@fp,fputs@fp
  6573   00388C  C0BB  F0B6         	movff	pad@fp+1,fputs@fp+1
  6574   003890  EC74  F01E         	call	_fputs	;wreg free
  6575   003894  0012               	return		;funcret
  6576   003896                     __end_of_pad:
  6577                           	callstack 0
  6578                           
  6579 ;; *************** function _fputs *****************
  6580 ;; Defined at:
  6581 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6584 ;;		 -> dbuf(32), 
  6585 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6586 ;;		 -> sprintf@f(12), 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  i               2    5[BANK0 ] int 
  6589 ;;  c               1    4[BANK0 ] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    0[BANK0 ] int 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;Total ram usage:        7 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; Hardware stack levels required when called: 10
  6606 ;; This function calls:
  6607 ;;		_fputc
  6608 ;; This function is called by:
  6609 ;;		_pad
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text40
  6614   003CE8                     __ptext40:
  6615                           	callstack 0
  6616   003CE8                     _fputs:
  6617                           	callstack 13
  6618   003CE8  0E00               	movlw	0
  6619   003CEA  0100               	movlb	0	; () banked
  6620   003CEC  6FB9               	movwf	(fputs@i+1)& (0+255),b
  6621   003CEE  0E00               	movlw	0
  6622   003CF0  6FB8               	movwf	fputs@i& (0+255),b
  6623   003CF2  EF87  F01E         	goto	l8413
  6624   003CF6                     l8409:
  6625                           
  6626                           ; BSR set to: 0
  6627   003CF6  C0B7  F028         	movff	fputs@c,fputc@c
  6628   003CFA  6A29               	clrf	(fputc@c+1)^0,c
  6629   003CFC  C0B5  F02A         	movff	fputs@fp,fputc@fp
  6630   003D00  C0B6  F02B         	movff	fputs@fp+1,fputc@fp+1
  6631   003D04  EC80  F016         	call	_fputc	;wreg free
  6632   003D08  0100               	movlb	0	; () banked
  6633   003D0A  4BB8               	infsnz	fputs@i& (0+255),f,b
  6634   003D0C  2BB9               	incf	(fputs@i+1)& (0+255),f,b
  6635   003D0E                     l8413:
  6636                           
  6637                           ; BSR set to: 0
  6638   003D0E  51B8               	movf	fputs@i& (0+255),w,b
  6639   003D10  25B3               	addwf	fputs@s& (0+255),w,b
  6640   003D12  6ED9               	movwf	fsr2l,c
  6641   003D14  51B9               	movf	(fputs@i+1)& (0+255),w,b
  6642   003D16  21B4               	addwfc	(fputs@s+1)& (0+255),w,b
  6643   003D18  6EDA               	movwf	fsr2h,c
  6644   003D1A  50DF               	movf	indf2,w,c
  6645   003D1C  6FB7               	movwf	fputs@c& (0+255),b
  6646   003D1E  51B7               	movf	fputs@c& (0+255),w,b
  6647   003D20  A4D8               	btfss	status,2,c
  6648   003D22  EF95  F01E         	goto	u8261
  6649   003D26  EF97  F01E         	goto	u8260
  6650   003D2A                     u8261:
  6651   003D2A  EF7B  F01E         	goto	l8409
  6652   003D2E                     u8260:
  6653   003D2E                     
  6654                           ; BSR set to: 0
  6655   003D2E  0012               	return		;funcret
  6656   003D30                     __end_of_fputs:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _fputc *****************
  6660 ;; Defined at:
  6661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  c               2   39[COMRAM] int 
  6664 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  6665 ;;		 -> sprintf@f(12), 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  2   39[COMRAM] int 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;Total ram usage:        9 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 9
  6684 ;; This function calls:
  6685 ;;		_putch
  6686 ;; This function is called by:
  6687 ;;		_pad
  6688 ;;		_vfpfcnvrt
  6689 ;;		_fputs
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text41
  6694   002D00                     __ptext41:
  6695                           	callstack 0
  6696   002D00                     _fputc:
  6697                           	callstack 16
  6698   002D00  502A               	movf	fputc@fp^0,w,c
  6699   002D02  102B               	iorwf	(fputc@fp+1)^0,w,c
  6700   002D04  B4D8               	btfsc	status,2,c
  6701   002D06  EF87  F016         	goto	u8221
  6702   002D0A  EF89  F016         	goto	u8220
  6703   002D0E                     u8221:
  6704   002D0E  EF92  F016         	goto	l8397
  6705   002D12                     u8220:
  6706   002D12  502A               	movf	fputc@fp^0,w,c
  6707   002D14  102B               	iorwf	(fputc@fp+1)^0,w,c
  6708   002D16  A4D8               	btfss	status,2,c
  6709   002D18  EF90  F016         	goto	u8231
  6710   002D1C  EF92  F016         	goto	u8230
  6711   002D20                     u8231:
  6712   002D20  EF97  F016         	goto	l8399
  6713   002D24                     u8230:
  6714   002D24                     l8397:
  6715   002D24  5028               	movf	fputc@c^0,w,c
  6716   002D26  EC61  F020         	call	_putch
  6717   002D2A  EFE4  F016         	goto	l2270
  6718   002D2E                     l8399:
  6719   002D2E  EE20 F00A          	lfsr	2,10
  6720   002D32  502A               	movf	fputc@fp^0,w,c
  6721   002D34  26D9               	addwf	fsr2l,f,c
  6722   002D36  502B               	movf	(fputc@fp+1)^0,w,c
  6723   002D38  22DA               	addwfc	fsr2h,f,c
  6724   002D3A  50DE               	movf	postinc2,w,c
  6725   002D3C  10DE               	iorwf	postinc2,w,c
  6726   002D3E  B4D8               	btfsc	status,2,c
  6727   002D40  EFA4  F016         	goto	u8241
  6728   002D44  EFA6  F016         	goto	u8240
  6729   002D48                     u8241:
  6730   002D48  EFC1  F016         	goto	l8403
  6731   002D4C                     u8240:
  6732   002D4C  EE20 F00A          	lfsr	2,10
  6733   002D50  502A               	movf	fputc@fp^0,w,c
  6734   002D52  26D9               	addwf	fsr2l,f,c
  6735   002D54  502B               	movf	(fputc@fp+1)^0,w,c
  6736   002D56  22DA               	addwfc	fsr2h,f,c
  6737   002D58  EE10 F003          	lfsr	1,3
  6738   002D5C  502A               	movf	fputc@fp^0,w,c
  6739   002D5E  26E1               	addwf	fsr1l,f,c
  6740   002D60  502B               	movf	(fputc@fp+1)^0,w,c
  6741   002D62  22E2               	addwfc	fsr1h,f,c
  6742   002D64  50DE               	movf	postinc2,w,c
  6743   002D66  5CE6               	subwf	postinc1,w,c
  6744   002D68  50E6               	movf	postinc1,w,c
  6745   002D6A  0A80               	xorlw	128
  6746   002D6C  6E30               	movwf	(??_fputc+4)^0,c
  6747   002D6E  50DE               	movf	postinc2,w,c
  6748   002D70  0A80               	xorlw	128
  6749   002D72  5830               	subwfb	(??_fputc+4)^0,w,c
  6750   002D74  B0D8               	btfsc	status,0,c
  6751   002D76  EFBF  F016         	goto	u8251
  6752   002D7A  EFC1  F016         	goto	u8250
  6753   002D7E                     u8251:
  6754   002D7E  EFE4  F016         	goto	l2270
  6755   002D82                     u8250:
  6756   002D82                     l8403:
  6757   002D82  EE20 F003          	lfsr	2,3
  6758   002D86  502A               	movf	fputc@fp^0,w,c
  6759   002D88  26D9               	addwf	fsr2l,f,c
  6760   002D8A  502B               	movf	(fputc@fp+1)^0,w,c
  6761   002D8C  22DA               	addwfc	fsr2h,f,c
  6762   002D8E  CFDE F02C          	movff	postinc2,??_fputc
  6763   002D92  CFDD F02D          	movff	postdec2,??_fputc+1
  6764   002D96  C02A  FFD9         	movff	fputc@fp,fsr2l
  6765   002D9A  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  6766   002D9E  CFDE F02E          	movff	postinc2,??_fputc+2
  6767   002DA2  CFDD F02F          	movff	postdec2,??_fputc+3
  6768   002DA6  502C               	movf	??_fputc^0,w,c
  6769   002DA8  242E               	addwf	(??_fputc+2)^0,w,c
  6770   002DAA  6ED9               	movwf	fsr2l,c
  6771   002DAC  502D               	movf	(??_fputc+1)^0,w,c
  6772   002DAE  202F               	addwfc	(??_fputc+3)^0,w,c
  6773   002DB0  6EDA               	movwf	fsr2h,c
  6774   002DB2  C028  FFDF         	movff	fputc@c,indf2
  6775   002DB6  EE20 F003          	lfsr	2,3
  6776   002DBA  502A               	movf	fputc@fp^0,w,c
  6777   002DBC  26D9               	addwf	fsr2l,f,c
  6778   002DBE  502B               	movf	(fputc@fp+1)^0,w,c
  6779   002DC0  22DA               	addwfc	fsr2h,f,c
  6780   002DC2  2ADE               	incf	postinc2,f,c
  6781   002DC4  0E00               	movlw	0
  6782   002DC6  22DD               	addwfc	postdec2,f,c
  6783   002DC8                     l2270:
  6784   002DC8  0012               	return		;funcret
  6785   002DCA                     __end_of_fputc:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _putch *****************
  6789 ;; Defined at:
  6790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  c               1    wreg     unsigned char 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  c               1    0[COMRAM] unsigned char 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 8
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_fputc
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text42
  6819   0040C2                     __ptext42:
  6820                           	callstack 0
  6821   0040C2                     _putch:
  6822                           	callstack 16
  6823   0040C2  0012               	return		;funcret
  6824   0040C4                     __end_of_putch:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function _abs *****************
  6828 ;; Defined at:
  6829 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  a               2   45[COMRAM] int 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;		None
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  2   45[COMRAM] int 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:        4 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 8
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_dtoa
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text43
  6858   003D74                     __ptext43:
  6859                           	callstack 0
  6860   003D74                     _abs:
  6861                           	callstack 16
  6862   003D74  BE2F               	btfsc	(abs@a+1)^0,7,c
  6863   003D76  EFC7  F01E         	goto	u8460
  6864   003D7A  502F               	movf	(abs@a+1)^0,w,c
  6865   003D7C  E106               	bnz	u8461
  6866   003D7E  042E               	decf	abs@a^0,w,c
  6867   003D80  B0D8               	btfsc	status,0,c
  6868   003D82  EFC5  F01E         	goto	u8461
  6869   003D86  EFC7  F01E         	goto	u8460
  6870   003D8A                     u8461:
  6871   003D8A  EFD6  F01E         	goto	l2255
  6872   003D8E                     u8460:
  6873   003D8E  C02E  F0B3         	movff	abs@a,??_abs
  6874   003D92  C02F  F0B4         	movff	abs@a+1,??_abs+1
  6875   003D96  0100               	movlb	0	; () banked
  6876   003D98  1FB3               	comf	??_abs& (0+255),f,b
  6877   003D9A  1FB4               	comf	(??_abs+1)& (0+255),f,b
  6878   003D9C  4BB3               	infsnz	??_abs& (0+255),f,b
  6879   003D9E  2BB4               	incf	(??_abs+1)& (0+255),f,b
  6880   003DA0  C0B3  F02E         	movff	??_abs,?_abs
  6881   003DA4  C0B4  F02F         	movff	??_abs+1,?_abs+1
  6882   003DA8  EFDA  F01E         	goto	l2258
  6883   003DAC                     l2255:
  6884   003DAC  C02E  F02E         	movff	abs@a,?_abs
  6885   003DB0  C02F  F02F         	movff	abs@a+1,?_abs+1
  6886   003DB4                     l2258:
  6887   003DB4  0012               	return		;funcret
  6888   003DB6                     __end_of_abs:
  6889                           	callstack 0
  6890                           
  6891 ;; *************** function ___awmod *****************
  6892 ;; Defined at:
  6893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  dividend        2   39[COMRAM] int 
  6896 ;;  divisor         2   41[COMRAM] int 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  sign            1   44[COMRAM] unsigned char 
  6899 ;;  counter         1   43[COMRAM] unsigned char 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2   39[COMRAM] int 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;Total ram usage:        6 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 8
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_dtoa
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text44
  6924   0030AE                     __ptext44:
  6925                           	callstack 0
  6926   0030AE                     ___awmod:
  6927                           	callstack 16
  6928   0030AE  0E00               	movlw	0
  6929   0030B0  6E2D               	movwf	___awmod@sign^0,c
  6930   0030B2  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  6931   0030B4  EF60  F018         	goto	u8380
  6932   0030B8  EF5E  F018         	goto	u8381
  6933   0030BC                     u8381:
  6934   0030BC  EF66  F018         	goto	l8493
  6935   0030C0                     u8380:
  6936   0030C0  6C28               	negf	___awmod@dividend^0,c
  6937   0030C2  1E29               	comf	(___awmod@dividend+1)^0,f,c
  6938   0030C4  B0D8               	btfsc	status,0,c
  6939   0030C6  2A29               	incf	(___awmod@dividend+1)^0,f,c
  6940   0030C8  0E01               	movlw	1
  6941   0030CA  6E2D               	movwf	___awmod@sign^0,c
  6942   0030CC                     l8493:
  6943   0030CC  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  6944   0030CE  EF6D  F018         	goto	u8390
  6945   0030D2  EF6B  F018         	goto	u8391
  6946   0030D6                     u8391:
  6947   0030D6  EF71  F018         	goto	l8497
  6948   0030DA                     u8390:
  6949   0030DA  6C2A               	negf	___awmod@divisor^0,c
  6950   0030DC  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  6951   0030DE  B0D8               	btfsc	status,0,c
  6952   0030E0  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  6953   0030E2                     l8497:
  6954   0030E2  502A               	movf	___awmod@divisor^0,w,c
  6955   0030E4  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  6956   0030E6  B4D8               	btfsc	status,2,c
  6957   0030E8  EF78  F018         	goto	u8401
  6958   0030EC  EF7A  F018         	goto	u8400
  6959   0030F0                     u8401:
  6960   0030F0  EF9E  F018         	goto	l8513
  6961   0030F4                     u8400:
  6962   0030F4  0E01               	movlw	1
  6963   0030F6  6E2C               	movwf	___awmod@counter^0,c
  6964   0030F8  EF82  F018         	goto	l8503
  6965   0030FC                     l8501:
  6966   0030FC  90D8               	bcf	status,0,c
  6967   0030FE  362A               	rlcf	___awmod@divisor^0,f,c
  6968   003100  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  6969   003102  2A2C               	incf	___awmod@counter^0,f,c
  6970   003104                     l8503:
  6971   003104  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  6972   003106  EF87  F018         	goto	u8411
  6973   00310A  EF89  F018         	goto	u8410
  6974   00310E                     u8411:
  6975   00310E  EF7E  F018         	goto	l8501
  6976   003112                     u8410:
  6977   003112                     l8505:
  6978   003112  502A               	movf	___awmod@divisor^0,w,c
  6979   003114  5C28               	subwf	___awmod@dividend^0,w,c
  6980   003116  502B               	movf	(___awmod@divisor+1)^0,w,c
  6981   003118  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  6982   00311A  A0D8               	btfss	status,0,c
  6983   00311C  EF92  F018         	goto	u8421
  6984   003120  EF94  F018         	goto	u8420
  6985   003124                     u8421:
  6986   003124  EF98  F018         	goto	l8509
  6987   003128                     u8420:
  6988   003128  502A               	movf	___awmod@divisor^0,w,c
  6989   00312A  5E28               	subwf	___awmod@dividend^0,f,c
  6990   00312C  502B               	movf	(___awmod@divisor+1)^0,w,c
  6991   00312E  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  6992   003130                     l8509:
  6993   003130  90D8               	bcf	status,0,c
  6994   003132  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  6995   003134  322A               	rrcf	___awmod@divisor^0,f,c
  6996   003136  2E2C               	decfsz	___awmod@counter^0,f,c
  6997   003138  EF89  F018         	goto	l8505
  6998   00313C                     l8513:
  6999   00313C  502D               	movf	___awmod@sign^0,w,c
  7000   00313E  B4D8               	btfsc	status,2,c
  7001   003140  EFA4  F018         	goto	u8431
  7002   003144  EFA6  F018         	goto	u8430
  7003   003148                     u8431:
  7004   003148  EFAA  F018         	goto	l8517
  7005   00314C                     u8430:
  7006   00314C  6C28               	negf	___awmod@dividend^0,c
  7007   00314E  1E29               	comf	(___awmod@dividend+1)^0,f,c
  7008   003150  B0D8               	btfsc	status,0,c
  7009   003152  2A29               	incf	(___awmod@dividend+1)^0,f,c
  7010   003154                     l8517:
  7011   003154  C028  F028         	movff	___awmod@dividend,?___awmod
  7012   003158  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  7013   00315C  0012               	return		;funcret
  7014   00315E                     __end_of___awmod:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function ___awdiv *****************
  7018 ;; Defined at:
  7019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  dividend        2   39[COMRAM] int 
  7022 ;;  divisor         2   41[COMRAM] int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  quotient        2   45[COMRAM] int 
  7025 ;;  sign            1   44[COMRAM] unsigned char 
  7026 ;;  counter         1   43[COMRAM] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  2   39[COMRAM] int 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        8 bytes
  7041 ;; Hardware stack levels used: 1
  7042 ;; Hardware stack levels required when called: 8
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		_dtoa
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text45
  7051   002DCA                     __ptext45:
  7052                           	callstack 0
  7053   002DCA                     ___awdiv:
  7054                           	callstack 16
  7055   002DCA  0E00               	movlw	0
  7056   002DCC  6E2D               	movwf	___awdiv@sign^0,c
  7057   002DCE  BE2B               	btfsc	(___awdiv@divisor+1)^0,7,c
  7058   002DD0  EFEE  F016         	goto	u8320
  7059   002DD4  EFEC  F016         	goto	u8321
  7060   002DD8                     u8321:
  7061   002DD8  EFF4  F016         	goto	l8449
  7062   002DDC                     u8320:
  7063   002DDC  6C2A               	negf	___awdiv@divisor^0,c
  7064   002DDE  1E2B               	comf	(___awdiv@divisor+1)^0,f,c
  7065   002DE0  B0D8               	btfsc	status,0,c
  7066   002DE2  2A2B               	incf	(___awdiv@divisor+1)^0,f,c
  7067   002DE4  0E01               	movlw	1
  7068   002DE6  6E2D               	movwf	___awdiv@sign^0,c
  7069   002DE8                     l8449:
  7070   002DE8  BE29               	btfsc	(___awdiv@dividend+1)^0,7,c
  7071   002DEA  EFFB  F016         	goto	u8330
  7072   002DEE  EFF9  F016         	goto	u8331
  7073   002DF2                     u8331:
  7074   002DF2  EF01  F017         	goto	l8455
  7075   002DF6                     u8330:
  7076   002DF6  6C28               	negf	___awdiv@dividend^0,c
  7077   002DF8  1E29               	comf	(___awdiv@dividend+1)^0,f,c
  7078   002DFA  B0D8               	btfsc	status,0,c
  7079   002DFC  2A29               	incf	(___awdiv@dividend+1)^0,f,c
  7080   002DFE  0E01               	movlw	1
  7081   002E00  1A2D               	xorwf	___awdiv@sign^0,f,c
  7082   002E02                     l8455:
  7083   002E02  0E00               	movlw	0
  7084   002E04  6E2F               	movwf	(___awdiv@quotient+1)^0,c
  7085   002E06  0E00               	movlw	0
  7086   002E08  6E2E               	movwf	___awdiv@quotient^0,c
  7087   002E0A  502A               	movf	___awdiv@divisor^0,w,c
  7088   002E0C  102B               	iorwf	(___awdiv@divisor+1)^0,w,c
  7089   002E0E  B4D8               	btfsc	status,2,c
  7090   002E10  EF0C  F017         	goto	u8341
  7091   002E14  EF0E  F017         	goto	u8340
  7092   002E18                     u8341:
  7093   002E18  EF36  F017         	goto	l8477
  7094   002E1C                     u8340:
  7095   002E1C  0E01               	movlw	1
  7096   002E1E  6E2C               	movwf	___awdiv@counter^0,c
  7097   002E20  EF16  F017         	goto	l8463
  7098   002E24                     l8461:
  7099   002E24  90D8               	bcf	status,0,c
  7100   002E26  362A               	rlcf	___awdiv@divisor^0,f,c
  7101   002E28  362B               	rlcf	(___awdiv@divisor+1)^0,f,c
  7102   002E2A  2A2C               	incf	___awdiv@counter^0,f,c
  7103   002E2C                     l8463:
  7104   002E2C  AE2B               	btfss	(___awdiv@divisor+1)^0,7,c
  7105   002E2E  EF1B  F017         	goto	u8351
  7106   002E32  EF1D  F017         	goto	u8350
  7107   002E36                     u8351:
  7108   002E36  EF12  F017         	goto	l8461
  7109   002E3A                     u8350:
  7110   002E3A                     l8465:
  7111   002E3A  90D8               	bcf	status,0,c
  7112   002E3C  362E               	rlcf	___awdiv@quotient^0,f,c
  7113   002E3E  362F               	rlcf	(___awdiv@quotient+1)^0,f,c
  7114   002E40  502A               	movf	___awdiv@divisor^0,w,c
  7115   002E42  5C28               	subwf	___awdiv@dividend^0,w,c
  7116   002E44  502B               	movf	(___awdiv@divisor+1)^0,w,c
  7117   002E46  5829               	subwfb	(___awdiv@dividend+1)^0,w,c
  7118   002E48  A0D8               	btfss	status,0,c
  7119   002E4A  EF29  F017         	goto	u8361
  7120   002E4E  EF2B  F017         	goto	u8360
  7121   002E52                     u8361:
  7122   002E52  EF30  F017         	goto	l8473
  7123   002E56                     u8360:
  7124   002E56  502A               	movf	___awdiv@divisor^0,w,c
  7125   002E58  5E28               	subwf	___awdiv@dividend^0,f,c
  7126   002E5A  502B               	movf	(___awdiv@divisor+1)^0,w,c
  7127   002E5C  5A29               	subwfb	(___awdiv@dividend+1)^0,f,c
  7128   002E5E  802E               	bsf	___awdiv@quotient^0,0,c
  7129   002E60                     l8473:
  7130   002E60  90D8               	bcf	status,0,c
  7131   002E62  322B               	rrcf	(___awdiv@divisor+1)^0,f,c
  7132   002E64  322A               	rrcf	___awdiv@divisor^0,f,c
  7133   002E66  2E2C               	decfsz	___awdiv@counter^0,f,c
  7134   002E68  EF1D  F017         	goto	l8465
  7135   002E6C                     l8477:
  7136   002E6C  502D               	movf	___awdiv@sign^0,w,c
  7137   002E6E  B4D8               	btfsc	status,2,c
  7138   002E70  EF3C  F017         	goto	u8371
  7139   002E74  EF3E  F017         	goto	u8370
  7140   002E78                     u8371:
  7141   002E78  EF42  F017         	goto	l8481
  7142   002E7C                     u8370:
  7143   002E7C  6C2E               	negf	___awdiv@quotient^0,c
  7144   002E7E  1E2F               	comf	(___awdiv@quotient+1)^0,f,c
  7145   002E80  B0D8               	btfsc	status,0,c
  7146   002E82  2A2F               	incf	(___awdiv@quotient+1)^0,f,c
  7147   002E84                     l8481:
  7148   002E84  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  7149   002E88  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  7150   002E8C  0012               	return		;funcret
  7151   002E8E                     __end_of___awdiv:
  7152                           	callstack 0
  7153                           
  7154 ;; *************** function _memset *****************
  7155 ;; Defined at:
  7156 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  dest            2   39[COMRAM] PTR void 
  7159 ;;		 -> HeartRate_Display@BPM_Str(4), 
  7160 ;;  c               2   41[COMRAM] int 
  7161 ;;  n               2   43[COMRAM] unsigned int 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7164 ;;		 -> HeartRate_Display@BPM_Str(4), 
  7165 ;;  k               2    0[BANK0 ] unsigned int 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  2   39[COMRAM] PTR void 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7175 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;Total ram usage:       12 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 8
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_convert_uint8_to_string
  7186 ;;		_convert_uint16_to_string
  7187 ;;		_convert_uint32_to_string
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text46
  7192   001E3E                     __ptext46:
  7193                           	callstack 0
  7194   001E3E                     _memset:
  7195                           	callstack 20
  7196   001E3E  C028  F0B5         	movff	memset@dest,memset@s
  7197   001E42  C029  F0B6         	movff	memset@dest+1,memset@s+1
  7198   001E46  502C               	movf	memset@n^0,w,c
  7199   001E48  102D               	iorwf	(memset@n+1)^0,w,c
  7200   001E4A  A4D8               	btfss	status,2,c
  7201   001E4C  EF2A  F00F         	goto	u9071
  7202   001E50  EF2C  F00F         	goto	u9070
  7203   001E54                     u9071:
  7204   001E54  EF2E  F00F         	goto	l9029
  7205   001E58                     u9070:
  7206   001E58  EFDA  F00F         	goto	l2180
  7207   001E5C                     l9029:
  7208   001E5C  C0B5  FFD9         	movff	memset@s,fsr2l
  7209   001E60  C0B6  FFDA         	movff	memset@s+1,fsr2h
  7210   001E64  C02A  FFDF         	movff	memset@c,indf2
  7211   001E68  502C               	movf	memset@n^0,w,c
  7212   001E6A  0100               	movlb	0	; () banked
  7213   001E6C  25B5               	addwf	memset@s& (0+255),w,b
  7214   001E6E  6E2E               	movwf	??_memset^0,c
  7215   001E70  502D               	movf	(memset@n+1)^0,w,c
  7216   001E72  21B6               	addwfc	(memset@s+1)& (0+255),w,b
  7217   001E74  6E2F               	movwf	(??_memset+1)^0,c
  7218   001E76  0EFF               	movlw	255
  7219   001E78  242E               	addwf	??_memset^0,w,c
  7220   001E7A  6ED9               	movwf	fsr2l,c
  7221   001E7C  0EFF               	movlw	255
  7222   001E7E  202F               	addwfc	(??_memset+1)^0,w,c
  7223   001E80  6EDA               	movwf	fsr2h,c
  7224   001E82  C02A  FFDF         	movff	memset@c,indf2
  7225   001E86  502D               	movf	(memset@n+1)^0,w,c
  7226   001E88  E107               	bnz	u9081
  7227   001E8A  0E03               	movlw	3
  7228   001E8C  5C2C               	subwf	memset@n^0,w,c
  7229   001E8E  B0D8               	btfsc	status,0,c
  7230   001E90  EF4C  F00F         	goto	u9081
  7231   001E94  EF4E  F00F         	goto	u9080
  7232   001E98                     u9081:
  7233   001E98  EF50  F00F         	goto	l9035
  7234   001E9C                     u9080:
  7235   001E9C  EFDA  F00F         	goto	l2180
  7236   001EA0                     l9035:
  7237                           
  7238                           ; BSR set to: 0
  7239   001EA0  EE20 F001          	lfsr	2,1
  7240   001EA4  51B5               	movf	memset@s& (0+255),w,b
  7241   001EA6  26D9               	addwf	fsr2l,f,c
  7242   001EA8  51B6               	movf	(memset@s+1)& (0+255),w,b
  7243   001EAA  22DA               	addwfc	fsr2h,f,c
  7244   001EAC  C02A  FFDF         	movff	memset@c,indf2
  7245   001EB0  EE20 F002          	lfsr	2,2
  7246   001EB4  51B5               	movf	memset@s& (0+255),w,b
  7247   001EB6  26D9               	addwf	fsr2l,f,c
  7248   001EB8  51B6               	movf	(memset@s+1)& (0+255),w,b
  7249   001EBA  22DA               	addwfc	fsr2h,f,c
  7250   001EBC  C02A  FFDF         	movff	memset@c,indf2
  7251   001EC0  502C               	movf	memset@n^0,w,c
  7252   001EC2  25B5               	addwf	memset@s& (0+255),w,b
  7253   001EC4  6E2E               	movwf	??_memset^0,c
  7254   001EC6  502D               	movf	(memset@n+1)^0,w,c
  7255   001EC8  21B6               	addwfc	(memset@s+1)& (0+255),w,b
  7256   001ECA  6E2F               	movwf	(??_memset+1)^0,c
  7257   001ECC  0EFE               	movlw	254
  7258   001ECE  242E               	addwf	??_memset^0,w,c
  7259   001ED0  6ED9               	movwf	fsr2l,c
  7260   001ED2  0EFF               	movlw	255
  7261   001ED4  202F               	addwfc	(??_memset+1)^0,w,c
  7262   001ED6  6EDA               	movwf	fsr2h,c
  7263   001ED8  C02A  FFDF         	movff	memset@c,indf2
  7264   001EDC  502C               	movf	memset@n^0,w,c
  7265   001EDE  25B5               	addwf	memset@s& (0+255),w,b
  7266   001EE0  6E2E               	movwf	??_memset^0,c
  7267   001EE2  502D               	movf	(memset@n+1)^0,w,c
  7268   001EE4  21B6               	addwfc	(memset@s+1)& (0+255),w,b
  7269   001EE6  6E2F               	movwf	(??_memset+1)^0,c
  7270   001EE8  0EFD               	movlw	253
  7271   001EEA  242E               	addwf	??_memset^0,w,c
  7272   001EEC  6ED9               	movwf	fsr2l,c
  7273   001EEE  0EFF               	movlw	255
  7274   001EF0  202F               	addwfc	(??_memset+1)^0,w,c
  7275   001EF2  6EDA               	movwf	fsr2h,c
  7276   001EF4  C02A  FFDF         	movff	memset@c,indf2
  7277   001EF8                     
  7278                           ; BSR set to: 0
  7279   001EF8  502D               	movf	(memset@n+1)^0,w,c
  7280   001EFA  E107               	bnz	u9091
  7281   001EFC  0E07               	movlw	7
  7282   001EFE  5C2C               	subwf	memset@n^0,w,c
  7283   001F00  B0D8               	btfsc	status,0,c
  7284   001F02  EF85  F00F         	goto	u9091
  7285   001F06  EF87  F00F         	goto	u9090
  7286   001F0A                     u9091:
  7287   001F0A  EF89  F00F         	goto	l9041
  7288   001F0E                     u9090:
  7289   001F0E  EFDA  F00F         	goto	l2180
  7290   001F12                     l9041:
  7291                           
  7292                           ; BSR set to: 0
  7293   001F12  EE20 F003          	lfsr	2,3
  7294   001F16  51B5               	movf	memset@s& (0+255),w,b
  7295   001F18  26D9               	addwf	fsr2l,f,c
  7296   001F1A  51B6               	movf	(memset@s+1)& (0+255),w,b
  7297   001F1C  22DA               	addwfc	fsr2h,f,c
  7298   001F1E  C02A  FFDF         	movff	memset@c,indf2
  7299   001F22  502C               	movf	memset@n^0,w,c
  7300   001F24  25B5               	addwf	memset@s& (0+255),w,b
  7301   001F26  6E2E               	movwf	??_memset^0,c
  7302   001F28  502D               	movf	(memset@n+1)^0,w,c
  7303   001F2A  21B6               	addwfc	(memset@s+1)& (0+255),w,b
  7304   001F2C  6E2F               	movwf	(??_memset+1)^0,c
  7305   001F2E  0EFC               	movlw	252
  7306   001F30  242E               	addwf	??_memset^0,w,c
  7307   001F32  6ED9               	movwf	fsr2l,c
  7308   001F34  0EFF               	movlw	255
  7309   001F36  202F               	addwfc	(??_memset+1)^0,w,c
  7310   001F38  6EDA               	movwf	fsr2h,c
  7311   001F3A  C02A  FFDF         	movff	memset@c,indf2
  7312   001F3E                     
  7313                           ; BSR set to: 0
  7314   001F3E  502D               	movf	(memset@n+1)^0,w,c
  7315   001F40  E107               	bnz	u9101
  7316   001F42  0E09               	movlw	9
  7317   001F44  5C2C               	subwf	memset@n^0,w,c
  7318   001F46  B0D8               	btfsc	status,0,c
  7319   001F48  EFA8  F00F         	goto	u9101
  7320   001F4C  EFAA  F00F         	goto	u9100
  7321   001F50                     u9101:
  7322   001F50  EFAC  F00F         	goto	l9047
  7323   001F54                     u9100:
  7324   001F54  EFDA  F00F         	goto	l2180
  7325   001F58                     l9047:
  7326                           
  7327                           ; BSR set to: 0
  7328   001F58  C0B5  F02E         	movff	memset@s,??_memset
  7329   001F5C  C0B6  F02F         	movff	memset@s+1,??_memset+1
  7330   001F60  1E2E               	comf	??_memset^0,f,c
  7331   001F62  1E2F               	comf	(??_memset+1)^0,f,c
  7332   001F64  4A2E               	infsnz	??_memset^0,f,c
  7333   001F66  2A2F               	incf	(??_memset+1)^0,f,c
  7334   001F68  0E03               	movlw	3
  7335   001F6A  142E               	andwf	??_memset^0,w,c
  7336   001F6C  6FB3               	movwf	memset@k& (0+255),b
  7337   001F6E  6BB4               	clrf	(memset@k+1)& (0+255),b
  7338   001F70  51B3               	movf	memset@k& (0+255),w,b
  7339   001F72  27B5               	addwf	memset@s& (0+255),f,b
  7340   001F74  51B4               	movf	(memset@k+1)& (0+255),w,b
  7341   001F76  23B6               	addwfc	(memset@s+1)& (0+255),f,b
  7342   001F78  51B3               	movf	memset@k& (0+255),w,b
  7343   001F7A  5E2C               	subwf	memset@n^0,f,c
  7344   001F7C  51B4               	movf	(memset@k+1)& (0+255),w,b
  7345   001F7E  5A2D               	subwfb	(memset@n+1)^0,f,c
  7346   001F80  0EFC               	movlw	252
  7347   001F82  162C               	andwf	memset@n^0,f,c
  7348   001F84  0EFF               	movlw	255
  7349   001F86  162D               	andwf	(memset@n+1)^0,f,c
  7350   001F88  EFD1  F00F         	goto	l9055
  7351   001F8C                     l9049:
  7352                           
  7353                           ; BSR set to: 0
  7354   001F8C  C0B5  FFD9         	movff	memset@s,fsr2l
  7355   001F90  C0B6  FFDA         	movff	memset@s+1,fsr2h
  7356   001F94  C02A  FFDF         	movff	memset@c,indf2
  7357   001F98                     
  7358                           ; BSR set to: 0
  7359   001F98  062C               	decf	memset@n^0,f,c
  7360   001F9A  A0D8               	btfss	status,0,c
  7361   001F9C  062D               	decf	(memset@n+1)^0,f,c
  7362   001F9E                     
  7363                           ; BSR set to: 0
  7364   001F9E  4BB5               	infsnz	memset@s& (0+255),f,b
  7365   001FA0  2BB6               	incf	(memset@s+1)& (0+255),f,b
  7366   001FA2                     l9055:
  7367                           
  7368                           ; BSR set to: 0
  7369   001FA2  502C               	movf	memset@n^0,w,c
  7370   001FA4  102D               	iorwf	(memset@n+1)^0,w,c
  7371   001FA6  A4D8               	btfss	status,2,c
  7372   001FA8  EFD8  F00F         	goto	u9111
  7373   001FAC  EFDA  F00F         	goto	u9110
  7374   001FB0                     u9111:
  7375   001FB0  EFC6  F00F         	goto	l9049
  7376   001FB4                     u9110:
  7377   001FB4                     l2180:
  7378   001FB4  0012               	return		;funcret
  7379   001FB6                     __end_of_memset:
  7380                           	callstack 0
  7381                           
  7382 ;; *************** function _HeartRate_Calculate *****************
  7383 ;; Defined at:
  7384 ;;		line 31 in file "HeartRate_Measure.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  XTAL_FREQ_MH    4   27[BANK1 ] unsigned long 
  7387 ;;  TimerPrescal    1   31[BANK1 ] unsigned char 
  7388 ;;  HeartRate_BP    2   32[BANK1 ] PTR unsigned char 
  7389 ;;		 -> heart_rate_bpm(1), 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  beats_Time_S    4   34[BANK1 ] PTR unsigned char 
  7392 ;;  BPM             1   38[BANK1 ] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7402 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;Total ram usage:       12 bytes
  7407 ;; Hardware stack levels used: 1
  7408 ;; Hardware stack levels required when called: 9
  7409 ;; This function calls:
  7410 ;;		___fldiv
  7411 ;;		___flmul
  7412 ;;		___fltol
  7413 ;;		___lmul
  7414 ;;		___xxtofl
  7415 ;; This function is called by:
  7416 ;;		_main
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text47
  7421   0023C0                     __ptext47:
  7422                           	callstack 0
  7423   0023C0                     _HeartRate_Calculate:
  7424                           	callstack 21
  7425   0023C0                     
  7426                           ;HeartRate_Measure.c: 34:     uint8 BPM =0;
  7427   0023C0  0E00               	movlw	0
  7428   0023C2  0101               	movlb	1	; () banked
  7429   0023C4  6F64               	movwf	HeartRate_Calculate@BPM& (0+255),b
  7430   0023C6                     
  7431                           ; BSR set to: 1
  7432                           ;HeartRate_Measure.c: 35:     if (cap_flag == 2)
  7433   0023C6  0E02               	movlw	2
  7434   0023C8  0100               	movlb	0	; () banked
  7435   0023CA  1999               	xorwf	_cap_flag& (0+255),w,b	;volatile
  7436   0023CC  A4D8               	btfss	status,2,c
  7437   0023CE  EFEB  F011         	goto	u9871
  7438   0023D2  EFED  F011         	goto	u9870
  7439   0023D6                     u9871:
  7440   0023D6  EF7B  F012         	goto	l1483
  7441   0023DA                     u9870:
  7442   0023DA                     
  7443                           ; BSR set to: 0
  7444                           ;HeartRate_Measure.c: 36:     {;HeartRate_Measure.c: 37:         beats_Time_Seconds = ((
      +                          double)(TimerPrescaler*Cap*4.0)) / ((double)(XTAL_FREQ_MHZ*1000000.0));
  7445   0023DA  0E00               	movlw	0
  7446   0023DC  6FC9               	movwf	___flmul@a& (0+255),b
  7447   0023DE  0E00               	movlw	0
  7448   0023E0  6FCA               	movwf	(___flmul@a+1)& (0+255),b
  7449   0023E2  0E80               	movlw	128
  7450   0023E4  6FCB               	movwf	(___flmul@a+2)& (0+255),b
  7451   0023E6  0E40               	movlw	64
  7452   0023E8  6FCC               	movwf	(___flmul@a+3)& (0+255),b
  7453   0023EA  0101               	movlb	1	; () banked
  7454   0023EC  515D               	movf	HeartRate_Calculate@TimerPrescaler& (0+255),w,b
  7455   0023EE  6E28               	movwf	___lmul@multiplier^0,c
  7456   0023F0  6A29               	clrf	(___lmul@multiplier+1)^0,c
  7457   0023F2  6A2A               	clrf	(___lmul@multiplier+2)^0,c
  7458   0023F4  6A2B               	clrf	(___lmul@multiplier+3)^0,c
  7459   0023F6  C0AD  F02C         	movff	_Cap,___lmul@multiplicand	;volatile
  7460   0023FA  C0AE  F02D         	movff	_Cap+1,___lmul@multiplicand+1	;volatile
  7461   0023FE  C0AF  F02E         	movff	_Cap+2,___lmul@multiplicand+2	;volatile
  7462   002402  C0B0  F02F         	movff	_Cap+3,___lmul@multiplicand+3	;volatile
  7463   002406  EC73  F01D         	call	___lmul	;wreg free
  7464   00240A  C028  F0B7         	movff	?___lmul,___xxtofl@val
  7465   00240E  C029  F0B8         	movff	?___lmul+1,___xxtofl@val+1
  7466   002412  C02A  F0B9         	movff	?___lmul+2,___xxtofl@val+2
  7467   002416  C02B  F0BA         	movff	?___lmul+3,___xxtofl@val+3
  7468   00241A  0E00               	movlw	0
  7469   00241C  EC76  F00D         	call	___xxtofl
  7470   002420  C0B7  F0C5         	movff	?___xxtofl,___flmul@b
  7471   002424  C0B8  F0C6         	movff	?___xxtofl+1,___flmul@b+1
  7472   002428  C0B9  F0C7         	movff	?___xxtofl+2,___flmul@b+2
  7473   00242C  C0BA  F0C8         	movff	?___xxtofl+3,___flmul@b+3
  7474   002430  EC2B  F008         	call	___flmul	;wreg free
  7475   002434  C0C5  F0DE         	movff	?___flmul,___fldiv@b
  7476   002438  C0C6  F0DF         	movff	?___flmul+1,___fldiv@b+1
  7477   00243C  C0C7  F0E0         	movff	?___flmul+2,___fldiv@b+2
  7478   002440  C0C8  F0E1         	movff	?___flmul+3,___fldiv@b+3
  7479   002444  0E00               	movlw	0
  7480   002446  0100               	movlb	0	; () banked
  7481   002448  6FC9               	movwf	___flmul@a& (0+255),b
  7482   00244A  0E24               	movlw	36
  7483   00244C  6FCA               	movwf	(___flmul@a+1)& (0+255),b
  7484   00244E  0E74               	movlw	116
  7485   002450  6FCB               	movwf	(___flmul@a+2)& (0+255),b
  7486   002452  0E49               	movlw	73
  7487   002454  6FCC               	movwf	(___flmul@a+3)& (0+255),b
  7488   002456  C159  F0B7         	movff	HeartRate_Calculate@XTAL_FREQ_MHZ,___xxtofl@val
  7489   00245A  C15A  F0B8         	movff	HeartRate_Calculate@XTAL_FREQ_MHZ+1,___xxtofl@val+1
  7490   00245E  C15B  F0B9         	movff	HeartRate_Calculate@XTAL_FREQ_MHZ+2,___xxtofl@val+2
  7491   002462  C15C  F0BA         	movff	HeartRate_Calculate@XTAL_FREQ_MHZ+3,___xxtofl@val+3
  7492   002466  0E00               	movlw	0
  7493   002468  EC76  F00D         	call	___xxtofl
  7494   00246C  C0B7  F0C5         	movff	?___xxtofl,___flmul@b
  7495   002470  C0B8  F0C6         	movff	?___xxtofl+1,___flmul@b+1
  7496   002474  C0B9  F0C7         	movff	?___xxtofl+2,___flmul@b+2
  7497   002478  C0BA  F0C8         	movff	?___xxtofl+3,___flmul@b+3
  7498   00247C  EC2B  F008         	call	___flmul	;wreg free
  7499   002480  C0C5  F0E2         	movff	?___flmul,___fldiv@a
  7500   002484  C0C6  F0E3         	movff	?___flmul+1,___fldiv@a+1
  7501   002488  C0C7  F0E4         	movff	?___flmul+2,___fldiv@a+2
  7502   00248C  C0C8  F0E5         	movff	?___flmul+3,___fldiv@a+3
  7503   002490  EC41  F00A         	call	___fldiv	;wreg free
  7504   002494  C0DE  F160         	movff	?___fldiv,HeartRate_Calculate@beats_Time_Seconds
  7505   002498  C0DF  F161         	movff	?___fldiv+1,HeartRate_Calculate@beats_Time_Seconds+1
  7506   00249C  C0E0  F162         	movff	?___fldiv+2,HeartRate_Calculate@beats_Time_Seconds+2
  7507   0024A0  C0E1  F163         	movff	?___fldiv+3,HeartRate_Calculate@beats_Time_Seconds+3
  7508   0024A4                     
  7509                           ;HeartRate_Measure.c: 38:         BPM = 60.0/beats_Time_Seconds;
  7510   0024A4  C160  F0E2         	movff	HeartRate_Calculate@beats_Time_Seconds,___fldiv@a
  7511   0024A8  C161  F0E3         	movff	HeartRate_Calculate@beats_Time_Seconds+1,___fldiv@a+1
  7512   0024AC  C162  F0E4         	movff	HeartRate_Calculate@beats_Time_Seconds+2,___fldiv@a+2
  7513   0024B0  C163  F0E5         	movff	HeartRate_Calculate@beats_Time_Seconds+3,___fldiv@a+3
  7514   0024B4  0E00               	movlw	0
  7515   0024B6  0100               	movlb	0	; () banked
  7516   0024B8  6FDE               	movwf	___fldiv@b& (0+255),b
  7517   0024BA  0E00               	movlw	0
  7518   0024BC  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  7519   0024BE  0E70               	movlw	112
  7520   0024C0  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  7521   0024C2  0E42               	movlw	66
  7522   0024C4  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  7523   0024C6  EC41  F00A         	call	___fldiv	;wreg free
  7524   0024CA  C0DE  F14F         	movff	?___fldiv,___fltol@f1
  7525   0024CE  C0DF  F150         	movff	?___fldiv+1,___fltol@f1+1
  7526   0024D2  C0E0  F151         	movff	?___fldiv+2,___fltol@f1+2
  7527   0024D6  C0E1  F152         	movff	?___fldiv+3,___fltol@f1+3
  7528   0024DA  ECA7  F013         	call	___fltol	;wreg free
  7529   0024DE  0101               	movlb	1	; () banked
  7530   0024E0  514F               	movf	?___fltol& (0+255),w,b
  7531   0024E2  6F64               	movwf	HeartRate_Calculate@BPM& (0+255),b
  7532   0024E4                     
  7533                           ; BSR set to: 1
  7534                           ;HeartRate_Measure.c: 39:         *HeartRate_BPM = BPM;
  7535   0024E4  C15E  FFD9         	movff	HeartRate_Calculate@HeartRate_BPM,fsr2l
  7536   0024E8  C15F  FFDA         	movff	HeartRate_Calculate@HeartRate_BPM+1,fsr2h
  7537   0024EC  C164  FFDF         	movff	HeartRate_Calculate@BPM,indf2
  7538   0024F0                     
  7539                           ; BSR set to: 1
  7540                           ;HeartRate_Measure.c: 40:         cap_flag =0;
  7541   0024F0  0E00               	movlw	0
  7542   0024F2  0100               	movlb	0	; () banked
  7543   0024F4  6F99               	movwf	_cap_flag& (0+255),b	;volatile
  7544   0024F6                     l1483:
  7545                           
  7546                           ; BSR set to: 0
  7547   0024F6  0012               	return		;funcret
  7548   0024F8                     __end_of_HeartRate_Calculate:
  7549                           	callstack 0
  7550                           
  7551 ;; *************** function ___xxtofl *****************
  7552 ;; Defined at:
  7553 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  sign            1    wreg     unsigned char 
  7556 ;;  val             4    4[BANK0 ] long 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  sign            1   12[BANK0 ] unsigned char 
  7559 ;;  arg             4   14[BANK0 ] unsigned long 
  7560 ;;  exp             1   13[BANK0 ] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  4    4[BANK0 ] unsigned char 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;Total ram usage:       14 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 8
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_HeartRate_Calculate
  7581 ;;		_CCP_PWM_Set_Duty
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text48
  7586   001AEC                     __ptext48:
  7587                           	callstack 0
  7588   001AEC                     ___xxtofl:
  7589                           	callstack 21
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;incstack = 0
  7593                           ;___xxtofl@sign stored from wreg
  7594   001AEC  0100               	movlb	0	; () banked
  7595   001AEE  6FBF               	movwf	___xxtofl@sign& (0+255),b
  7596   001AF0  0100               	movlb	0	; () banked
  7597   001AF2  51BF               	movf	___xxtofl@sign& (0+255),w,b
  7598   001AF4  B4D8               	btfsc	status,2,c
  7599   001AF6  EF7F  F00D         	goto	u9731
  7600   001AFA  EF81  F00D         	goto	u9730
  7601   001AFE                     u9731:
  7602   001AFE  EFA3  F00D         	goto	l2160
  7603   001B02                     u9730:
  7604   001B02                     
  7605                           ; BSR set to: 0
  7606   001B02  BFBA               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7607   001B04  EF88  F00D         	goto	u9740
  7608   001B08  EF86  F00D         	goto	u9741
  7609   001B0C                     u9741:
  7610   001B0C  EFA3  F00D         	goto	l2160
  7611   001B10                     u9740:
  7612   001B10                     
  7613                           ; BSR set to: 0
  7614   001B10  C0B7  F0BB         	movff	___xxtofl@val,??___xxtofl
  7615   001B14  C0B8  F0BC         	movff	___xxtofl@val+1,??___xxtofl+1
  7616   001B18  C0B9  F0BD         	movff	___xxtofl@val+2,??___xxtofl+2
  7617   001B1C  C0BA  F0BE         	movff	___xxtofl@val+3,??___xxtofl+3
  7618   001B20  1FBB               	comf	??___xxtofl& (0+255),f,b
  7619   001B22  1FBC               	comf	(??___xxtofl+1)& (0+255),f,b
  7620   001B24  1FBD               	comf	(??___xxtofl+2)& (0+255),f,b
  7621   001B26  1FBE               	comf	(??___xxtofl+3)& (0+255),f,b
  7622   001B28  2BBB               	incf	??___xxtofl& (0+255),f,b
  7623   001B2A  0E00               	movlw	0
  7624   001B2C  23BC               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7625   001B2E  23BD               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7626   001B30  23BE               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7627   001B32  C0BB  F0C1         	movff	??___xxtofl,___xxtofl@arg
  7628   001B36  C0BC  F0C2         	movff	??___xxtofl+1,___xxtofl@arg+1
  7629   001B3A  C0BD  F0C3         	movff	??___xxtofl+2,___xxtofl@arg+2
  7630   001B3E  C0BE  F0C4         	movff	??___xxtofl+3,___xxtofl@arg+3
  7631   001B42  EFAB  F00D         	goto	l9529
  7632   001B46                     l2160:
  7633                           
  7634                           ; BSR set to: 0
  7635   001B46  C0B7  F0C1         	movff	___xxtofl@val,___xxtofl@arg
  7636   001B4A  C0B8  F0C2         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7637   001B4E  C0B9  F0C3         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7638   001B52  C0BA  F0C4         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7639   001B56                     l9529:
  7640                           
  7641                           ; BSR set to: 0
  7642   001B56  51B7               	movf	___xxtofl@val& (0+255),w,b
  7643   001B58  11B8               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7644   001B5A  11B9               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7645   001B5C  11BA               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7646   001B5E  A4D8               	btfss	status,2,c
  7647   001B60  EFB4  F00D         	goto	u9751
  7648   001B64  EFB6  F00D         	goto	u9750
  7649   001B68                     u9751:
  7650   001B68  EFC0  F00D         	goto	l9535
  7651   001B6C                     u9750:
  7652   001B6C                     
  7653                           ; BSR set to: 0
  7654   001B6C  0E00               	movlw	0
  7655   001B6E  6FB7               	movwf	?___xxtofl& (0+255),b
  7656   001B70  0E00               	movlw	0
  7657   001B72  6FB8               	movwf	(?___xxtofl+1)& (0+255),b
  7658   001B74  0E00               	movlw	0
  7659   001B76  6FB9               	movwf	(?___xxtofl+2)& (0+255),b
  7660   001B78  0E00               	movlw	0
  7661   001B7A  6FBA               	movwf	(?___xxtofl+3)& (0+255),b
  7662   001B7C  EF51  F00E         	goto	l2163
  7663   001B80                     l9535:
  7664                           
  7665                           ; BSR set to: 0
  7666   001B80  0E96               	movlw	150
  7667   001B82  6FC0               	movwf	___xxtofl@exp& (0+255),b
  7668   001B84  EFCA  F00D         	goto	l9539
  7669   001B88                     l9537:
  7670                           
  7671                           ; BSR set to: 0
  7672   001B88  2BC0               	incf	___xxtofl@exp& (0+255),f,b
  7673   001B8A  90D8               	bcf	status,0,c
  7674   001B8C  33C4               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7675   001B8E  33C3               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7676   001B90  33C2               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7677   001B92  33C1               	rrcf	___xxtofl@arg& (0+255),f,b
  7678   001B94                     l9539:
  7679                           
  7680                           ; BSR set to: 0
  7681   001B94  0E00               	movlw	0
  7682   001B96  15C1               	andwf	___xxtofl@arg& (0+255),w,b
  7683   001B98  6FBB               	movwf	??___xxtofl& (0+255),b
  7684   001B9A  0E00               	movlw	0
  7685   001B9C  15C2               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7686   001B9E  6FBC               	movwf	(??___xxtofl+1)& (0+255),b
  7687   001BA0  0E00               	movlw	0
  7688   001BA2  15C3               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7689   001BA4  6FBD               	movwf	(??___xxtofl+2)& (0+255),b
  7690   001BA6  0EFE               	movlw	254
  7691   001BA8  15C4               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7692   001BAA  6FBE               	movwf	(??___xxtofl+3)& (0+255),b
  7693   001BAC  51BB               	movf	??___xxtofl& (0+255),w,b
  7694   001BAE  11BC               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7695   001BB0  11BD               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7696   001BB2  11BE               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7697   001BB4  A4D8               	btfss	status,2,c
  7698   001BB6  EFDF  F00D         	goto	u9761
  7699   001BBA  EFE1  F00D         	goto	u9760
  7700   001BBE                     u9761:
  7701   001BBE  EFC4  F00D         	goto	l9537
  7702   001BC2                     u9760:
  7703   001BC2  EFEF  F00D         	goto	l2167
  7704   001BC6                     l9541:
  7705                           
  7706                           ; BSR set to: 0
  7707   001BC6  2BC0               	incf	___xxtofl@exp& (0+255),f,b
  7708   001BC8                     
  7709                           ; BSR set to: 0
  7710   001BC8  0E01               	movlw	1
  7711   001BCA  27C1               	addwf	___xxtofl@arg& (0+255),f,b
  7712   001BCC  0E00               	movlw	0
  7713   001BCE  23C2               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7714   001BD0  23C3               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7715   001BD2  23C4               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7716   001BD4                     
  7717                           ; BSR set to: 0
  7718   001BD4  90D8               	bcf	status,0,c
  7719   001BD6  33C4               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7720   001BD8  33C3               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7721   001BDA  33C2               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7722   001BDC  33C1               	rrcf	___xxtofl@arg& (0+255),f,b
  7723   001BDE                     l2167:
  7724                           
  7725                           ; BSR set to: 0
  7726   001BDE  0E00               	movlw	0
  7727   001BE0  15C1               	andwf	___xxtofl@arg& (0+255),w,b
  7728   001BE2  6FBB               	movwf	??___xxtofl& (0+255),b
  7729   001BE4  0E00               	movlw	0
  7730   001BE6  15C2               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7731   001BE8  6FBC               	movwf	(??___xxtofl+1)& (0+255),b
  7732   001BEA  0E00               	movlw	0
  7733   001BEC  15C3               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7734   001BEE  6FBD               	movwf	(??___xxtofl+2)& (0+255),b
  7735   001BF0  0EFF               	movlw	255
  7736   001BF2  15C4               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7737   001BF4  6FBE               	movwf	(??___xxtofl+3)& (0+255),b
  7738   001BF6  51BB               	movf	??___xxtofl& (0+255),w,b
  7739   001BF8  11BC               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7740   001BFA  11BD               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7741   001BFC  11BE               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7742   001BFE  A4D8               	btfss	status,2,c
  7743   001C00  EF04  F00E         	goto	u9771
  7744   001C04  EF06  F00E         	goto	u9770
  7745   001C08                     u9771:
  7746   001C08  EFE3  F00D         	goto	l9541
  7747   001C0C                     u9770:
  7748   001C0C  EF0E  F00E         	goto	l9549
  7749   001C10                     l9547:
  7750                           
  7751                           ; BSR set to: 0
  7752   001C10  07C0               	decf	___xxtofl@exp& (0+255),f,b
  7753   001C12  90D8               	bcf	status,0,c
  7754   001C14  37C1               	rlcf	___xxtofl@arg& (0+255),f,b
  7755   001C16  37C2               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7756   001C18  37C3               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7757   001C1A  37C4               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7758   001C1C                     l9549:
  7759                           
  7760                           ; BSR set to: 0
  7761   001C1C  BFC3               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7762   001C1E  EF13  F00E         	goto	u9781
  7763   001C22  EF15  F00E         	goto	u9780
  7764   001C26                     u9781:
  7765   001C26  EF1D  F00E         	goto	l2174
  7766   001C2A                     u9780:
  7767   001C2A                     
  7768                           ; BSR set to: 0
  7769   001C2A  0E02               	movlw	2
  7770   001C2C  61C0               	cpfslt	___xxtofl@exp& (0+255),b
  7771   001C2E  EF1B  F00E         	goto	u9791
  7772   001C32  EF1D  F00E         	goto	u9790
  7773   001C36                     u9791:
  7774   001C36  EF08  F00E         	goto	l9547
  7775   001C3A                     u9790:
  7776   001C3A                     l2174:
  7777                           
  7778                           ; BSR set to: 0
  7779   001C3A  B1C0               	btfsc	___xxtofl@exp& (0+255),0,b
  7780   001C3C  EF22  F00E         	goto	u9801
  7781   001C40  EF24  F00E         	goto	u9800
  7782   001C44                     u9801:
  7783   001C44  EF25  F00E         	goto	l9555
  7784   001C48                     u9800:
  7785   001C48                     
  7786                           ; BSR set to: 0
  7787   001C48  9FC3               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7788   001C4A                     l9555:
  7789                           
  7790                           ; BSR set to: 0
  7791   001C4A  90D8               	bcf	status,0,c
  7792   001C4C  33C0               	rrcf	___xxtofl@exp& (0+255),f,b
  7793   001C4E                     
  7794                           ; BSR set to: 0
  7795   001C4E  C0C0  F0BB         	movff	___xxtofl@exp,??___xxtofl
  7796   001C52  6BBC               	clrf	(??___xxtofl+1)& (0+255),b
  7797   001C54  6BBD               	clrf	(??___xxtofl+2)& (0+255),b
  7798   001C56  6BBE               	clrf	(??___xxtofl+3)& (0+255),b
  7799   001C58  C0BB  F0BE         	movff	??___xxtofl,??___xxtofl+3
  7800   001C5C  6BBD               	clrf	(??___xxtofl+2)& (0+255),b
  7801   001C5E  6BBC               	clrf	(??___xxtofl+1)& (0+255),b
  7802   001C60  6BBB               	clrf	??___xxtofl& (0+255),b
  7803   001C62  51BB               	movf	??___xxtofl& (0+255),w,b
  7804   001C64  13C1               	iorwf	___xxtofl@arg& (0+255),f,b
  7805   001C66  51BC               	movf	(??___xxtofl+1)& (0+255),w,b
  7806   001C68  13C2               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7807   001C6A  51BD               	movf	(??___xxtofl+2)& (0+255),w,b
  7808   001C6C  13C3               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7809   001C6E  51BE               	movf	(??___xxtofl+3)& (0+255),w,b
  7810   001C70  13C4               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7811   001C72                     
  7812                           ; BSR set to: 0
  7813   001C72  51BF               	movf	___xxtofl@sign& (0+255),w,b
  7814   001C74  B4D8               	btfsc	status,2,c
  7815   001C76  EF3F  F00E         	goto	u9811
  7816   001C7A  EF41  F00E         	goto	u9810
  7817   001C7E                     u9811:
  7818   001C7E  EF49  F00E         	goto	l9565
  7819   001C82                     u9810:
  7820   001C82                     
  7821                           ; BSR set to: 0
  7822   001C82  BFBA               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7823   001C84  EF48  F00E         	goto	u9820
  7824   001C88  EF46  F00E         	goto	u9821
  7825   001C8C                     u9821:
  7826   001C8C  EF49  F00E         	goto	l9565
  7827   001C90                     u9820:
  7828   001C90                     
  7829                           ; BSR set to: 0
  7830   001C90  8FC4               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7831   001C92                     l9565:
  7832                           
  7833                           ; BSR set to: 0
  7834   001C92  C0C1  F0B7         	movff	___xxtofl@arg,?___xxtofl
  7835   001C96  C0C2  F0B8         	movff	___xxtofl@arg+1,?___xxtofl+1
  7836   001C9A  C0C3  F0B9         	movff	___xxtofl@arg+2,?___xxtofl+2
  7837   001C9E  C0C4  F0BA         	movff	___xxtofl@arg+3,?___xxtofl+3
  7838   001CA2                     l2163:
  7839                           
  7840                           ; BSR set to: 0
  7841   001CA2  0012               	return		;funcret
  7842   001CA4                     __end_of___xxtofl:
  7843                           	callstack 0
  7844                           
  7845 ;; *************** function ___lmul *****************
  7846 ;; Defined at:
  7847 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  multiplier      4   39[COMRAM] unsigned long 
  7850 ;;  multiplicand    4   43[COMRAM] unsigned long 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  product         4    0[BANK0 ] unsigned long 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  4   39[COMRAM] unsigned long 
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;Total ram usage:       12 bytes
  7867 ;; Hardware stack levels used: 1
  7868 ;; Hardware stack levels required when called: 8
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_CCP_PWM_Mode_Init
  7873 ;;		_HeartRate_Calculate
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text49
  7878   003AE6                     __ptext49:
  7879                           	callstack 0
  7880   003AE6                     ___lmul:
  7881                           	callstack 17
  7882   003AE6  0E00               	movlw	0
  7883   003AE8  0100               	movlb	0	; () banked
  7884   003AEA  6FB3               	movwf	___lmul@product& (0+255),b
  7885   003AEC  0E00               	movlw	0
  7886   003AEE  6FB4               	movwf	(___lmul@product+1)& (0+255),b
  7887   003AF0  0E00               	movlw	0
  7888   003AF2  6FB5               	movwf	(___lmul@product+2)& (0+255),b
  7889   003AF4  0E00               	movlw	0
  7890   003AF6  6FB6               	movwf	(___lmul@product+3)& (0+255),b
  7891   003AF8                     l8649:
  7892   003AF8  A028               	btfss	___lmul@multiplier^0,0,c
  7893   003AFA  EF81  F01D         	goto	u8661
  7894   003AFE  EF83  F01D         	goto	u8660
  7895   003B02                     u8661:
  7896   003B02  EF8C  F01D         	goto	l8653
  7897   003B06                     u8660:
  7898   003B06  502C               	movf	___lmul@multiplicand^0,w,c
  7899   003B08  0100               	movlb	0	; () banked
  7900   003B0A  27B3               	addwf	___lmul@product& (0+255),f,b
  7901   003B0C  502D               	movf	(___lmul@multiplicand+1)^0,w,c
  7902   003B0E  23B4               	addwfc	(___lmul@product+1)& (0+255),f,b
  7903   003B10  502E               	movf	(___lmul@multiplicand+2)^0,w,c
  7904   003B12  23B5               	addwfc	(___lmul@product+2)& (0+255),f,b
  7905   003B14  502F               	movf	(___lmul@multiplicand+3)^0,w,c
  7906   003B16  23B6               	addwfc	(___lmul@product+3)& (0+255),f,b
  7907   003B18                     l8653:
  7908   003B18  90D8               	bcf	status,0,c
  7909   003B1A  362C               	rlcf	___lmul@multiplicand^0,f,c
  7910   003B1C  362D               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7911   003B1E  362E               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7912   003B20  362F               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7913   003B22  90D8               	bcf	status,0,c
  7914   003B24  322B               	rrcf	(___lmul@multiplier+3)^0,f,c
  7915   003B26  322A               	rrcf	(___lmul@multiplier+2)^0,f,c
  7916   003B28  3229               	rrcf	(___lmul@multiplier+1)^0,f,c
  7917   003B2A  3228               	rrcf	___lmul@multiplier^0,f,c
  7918   003B2C  5028               	movf	___lmul@multiplier^0,w,c
  7919   003B2E  1029               	iorwf	(___lmul@multiplier+1)^0,w,c
  7920   003B30  102A               	iorwf	(___lmul@multiplier+2)^0,w,c
  7921   003B32  102B               	iorwf	(___lmul@multiplier+3)^0,w,c
  7922   003B34  A4D8               	btfss	status,2,c
  7923   003B36  EF9F  F01D         	goto	u8671
  7924   003B3A  EFA1  F01D         	goto	u8670
  7925   003B3E                     u8671:
  7926   003B3E  EF7C  F01D         	goto	l8649
  7927   003B42                     u8670:
  7928   003B42  C0B3  F028         	movff	___lmul@product,?___lmul
  7929   003B46  C0B4  F029         	movff	___lmul@product+1,?___lmul+1
  7930   003B4A  C0B5  F02A         	movff	___lmul@product+2,?___lmul+2
  7931   003B4E  C0B6  F02B         	movff	___lmul@product+3,?___lmul+3
  7932   003B52  0012               	return		;funcret
  7933   003B54                     __end_of___lmul:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function ___fltol *****************
  7937 ;; Defined at:
  7938 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  f1              4   17[BANK1 ] unsigned long 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  exp1            1   26[BANK1 ] unsigned char 
  7943 ;;  sign1           1   25[BANK1 ] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  4   17[BANK1 ] long 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7953 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;Total ram usage:       10 bytes
  7958 ;; Hardware stack levels used: 1
  7959 ;; Hardware stack levels required when called: 8
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_HeartRate_Calculate
  7964 ;;		_CCP_PWM_Set_Duty
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text50
  7969   00274E                     __ptext50:
  7970                           	callstack 0
  7971   00274E                     ___fltol:
  7972                           	callstack 21
  7973   00274E  0101               	movlb	1	; () banked
  7974   002750  3551               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7975   002752  3552               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7976   002754  6F58               	movwf	___fltol@exp1& (0+255),b
  7977   002756  5158               	movf	___fltol@exp1& (0+255),w,b
  7978   002758  A4D8               	btfss	status,2,c
  7979   00275A  EFB1  F013         	goto	u9661
  7980   00275E  EFB3  F013         	goto	u9660
  7981   002762                     u9661:
  7982   002762  EFBD  F013         	goto	l9485
  7983   002766                     u9660:
  7984   002766                     l9481:
  7985                           
  7986                           ; BSR set to: 1
  7987   002766  0E00               	movlw	0
  7988   002768  6F4F               	movwf	?___fltol& (0+255),b
  7989   00276A  0E00               	movlw	0
  7990   00276C  6F50               	movwf	(?___fltol+1)& (0+255),b
  7991   00276E  0E00               	movlw	0
  7992   002770  6F51               	movwf	(?___fltol+2)& (0+255),b
  7993   002772  0E00               	movlw	0
  7994   002774  6F52               	movwf	(?___fltol+3)& (0+255),b
  7995   002776  EF2A  F014         	goto	l1802
  7996   00277A                     l9485:
  7997                           
  7998                           ; BSR set to: 1
  7999   00277A  C14F  F153         	movff	___fltol@f1,??___fltol
  8000   00277E  C150  F154         	movff	___fltol@f1+1,??___fltol+1
  8001   002782  C151  F155         	movff	___fltol@f1+2,??___fltol+2
  8002   002786  C152  F156         	movff	___fltol@f1+3,??___fltol+3
  8003   00278A  0E20               	movlw	32
  8004   00278C  EFCD  F013         	goto	u9670
  8005   002790                     u9675:
  8006   002790  90D8               	bcf	status,0,c
  8007   002792  3356               	rrcf	(??___fltol+3)& (0+255),f,b
  8008   002794  3355               	rrcf	(??___fltol+2)& (0+255),f,b
  8009   002796  3354               	rrcf	(??___fltol+1)& (0+255),f,b
  8010   002798  3353               	rrcf	??___fltol& (0+255),f,b
  8011   00279A                     u9670:
  8012   00279A  2EE8               	decfsz	wreg,f,c
  8013   00279C  EFC8  F013         	goto	u9675
  8014   0027A0  5153               	movf	??___fltol& (0+255),w,b
  8015   0027A2  6F57               	movwf	___fltol@sign1& (0+255),b
  8016   0027A4                     
  8017                           ; BSR set to: 1
  8018   0027A4  8F51               	bsf	(___fltol@f1+2)& (0+255),7,b
  8019   0027A6                     
  8020                           ; BSR set to: 1
  8021   0027A6  0EFF               	movlw	255
  8022   0027A8  174F               	andwf	___fltol@f1& (0+255),f,b
  8023   0027AA  0EFF               	movlw	255
  8024   0027AC  1750               	andwf	(___fltol@f1+1)& (0+255),f,b
  8025   0027AE  0EFF               	movlw	255
  8026   0027B0  1751               	andwf	(___fltol@f1+2)& (0+255),f,b
  8027   0027B2  0E00               	movlw	0
  8028   0027B4  1752               	andwf	(___fltol@f1+3)& (0+255),f,b
  8029   0027B6                     
  8030                           ; BSR set to: 1
  8031   0027B6  0E96               	movlw	150
  8032   0027B8  5F58               	subwf	___fltol@exp1& (0+255),f,b
  8033   0027BA                     
  8034                           ; BSR set to: 1
  8035   0027BA  BF58               	btfsc	___fltol@exp1& (0+255),7,b
  8036   0027BC  EFE4  F013         	goto	u9680
  8037   0027C0  EFE2  F013         	goto	u9681
  8038   0027C4                     u9681:
  8039   0027C4  EFFA  F013         	goto	l9505
  8040   0027C8                     u9680:
  8041   0027C8                     
  8042                           ; BSR set to: 1
  8043   0027C8  5158               	movf	___fltol@exp1& (0+255),w,b
  8044   0027CA  0A80               	xorlw	128
  8045   0027CC  0F97               	addlw	151
  8046   0027CE  B0D8               	btfsc	status,0,c
  8047   0027D0  EFEC  F013         	goto	u9691
  8048   0027D4  EFEE  F013         	goto	u9690
  8049   0027D8                     u9691:
  8050   0027D8  EFF0  F013         	goto	l9501
  8051   0027DC                     u9690:
  8052   0027DC  EFB3  F013         	goto	l9481
  8053   0027E0                     l9501:
  8054                           
  8055                           ; BSR set to: 1
  8056   0027E0  90D8               	bcf	status,0,c
  8057   0027E2  3352               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8058   0027E4  3351               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8059   0027E6  3350               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8060   0027E8  334F               	rrcf	___fltol@f1& (0+255),f,b
  8061   0027EA                     
  8062                           ; BSR set to: 1
  8063   0027EA  3F58               	incfsz	___fltol@exp1& (0+255),f,b
  8064   0027EC  EFF0  F013         	goto	l9501
  8065   0027F0  EF12  F014         	goto	l9515
  8066   0027F4                     l9505:
  8067                           
  8068                           ; BSR set to: 1
  8069   0027F4  0E1F               	movlw	31
  8070   0027F6  6558               	cpfsgt	___fltol@exp1& (0+255),b
  8071   0027F8  EF00  F014         	goto	u9701
  8072   0027FC  EF02  F014         	goto	u9700
  8073   002800                     u9701:
  8074   002800  EF0A  F014         	goto	l9513
  8075   002804                     u9700:
  8076   002804  EFB3  F013         	goto	l9481
  8077   002808                     l9511:
  8078                           
  8079                           ; BSR set to: 1
  8080   002808  90D8               	bcf	status,0,c
  8081   00280A  374F               	rlcf	___fltol@f1& (0+255),f,b
  8082   00280C  3750               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8083   00280E  3751               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8084   002810  3752               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8085   002812  0758               	decf	___fltol@exp1& (0+255),f,b
  8086   002814                     l9513:
  8087                           
  8088                           ; BSR set to: 1
  8089   002814  5158               	movf	___fltol@exp1& (0+255),w,b
  8090   002816  A4D8               	btfss	status,2,c
  8091   002818  EF10  F014         	goto	u9711
  8092   00281C  EF12  F014         	goto	u9710
  8093   002820                     u9711:
  8094   002820  EF04  F014         	goto	l9511
  8095   002824                     u9710:
  8096   002824                     l9515:
  8097                           
  8098                           ; BSR set to: 1
  8099   002824  5157               	movf	___fltol@sign1& (0+255),w,b
  8100   002826  B4D8               	btfsc	status,2,c
  8101   002828  EF18  F014         	goto	u9721
  8102   00282C  EF1A  F014         	goto	u9720
  8103   002830                     u9721:
  8104   002830  EF22  F014         	goto	l9519
  8105   002834                     u9720:
  8106   002834                     
  8107                           ; BSR set to: 1
  8108   002834  1F52               	comf	(___fltol@f1+3)& (0+255),f,b
  8109   002836  1F51               	comf	(___fltol@f1+2)& (0+255),f,b
  8110   002838  1F50               	comf	(___fltol@f1+1)& (0+255),f,b
  8111   00283A  6D4F               	negf	___fltol@f1& (0+255),b
  8112   00283C  0E00               	movlw	0
  8113   00283E  2350               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8114   002840  2351               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8115   002842  2352               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8116   002844                     l9519:
  8117                           
  8118                           ; BSR set to: 1
  8119   002844  C14F  F14F         	movff	___fltol@f1,?___fltol
  8120   002848  C150  F150         	movff	___fltol@f1+1,?___fltol+1
  8121   00284C  C151  F151         	movff	___fltol@f1+2,?___fltol+2
  8122   002850  C152  F152         	movff	___fltol@f1+3,?___fltol+3
  8123   002854                     l1802:
  8124                           
  8125                           ; BSR set to: 1
  8126   002854  0012               	return		;funcret
  8127   002856                     __end_of___fltol:
  8128                           	callstack 0
  8129                           
  8130 ;; *************** function ___flmul *****************
  8131 ;; Defined at:
  8132 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  b               4   18[BANK0 ] long 
  8135 ;;  a               4   22[BANK0 ] long 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  prod            4   37[BANK0 ] struct .
  8138 ;;  grs             4   32[BANK0 ] unsigned long 
  8139 ;;  temp            2   41[BANK0 ] struct .
  8140 ;;  bexp            1   36[BANK0 ] unsigned char 
  8141 ;;  aexp            1   31[BANK0 ] unsigned char 
  8142 ;;  sign            1   30[BANK0 ] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  4   18[BANK0 ] unsigned char 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0, prodl, prodh
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;Total ram usage:       25 bytes
  8157 ;; Hardware stack levels used: 1
  8158 ;; Hardware stack levels required when called: 8
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_HeartRate_Calculate
  8163 ;;		_CCP_PWM_Set_Duty
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text51
  8168   001056                     __ptext51:
  8169                           	callstack 0
  8170   001056                     ___flmul:
  8171                           	callstack 21
  8172   001056  0100               	movlb	0	; () banked
  8173   001058  51C8               	movf	(___flmul@b+3)& (0+255),w,b
  8174   00105A  0B80               	andlw	128
  8175   00105C  6FD1               	movwf	___flmul@sign& (0+255),b
  8176   00105E  51C8               	movf	(___flmul@b+3)& (0+255),w,b
  8177   001060  25C8               	addwf	(___flmul@b+3)& (0+255),w,b
  8178   001062  6FD7               	movwf	___flmul@bexp& (0+255),b
  8179   001064                     
  8180                           ; BSR set to: 0
  8181   001064  AFC7               	btfss	(___flmul@b+2)& (0+255),7,b
  8182   001066  EF37  F008         	goto	u9471
  8183   00106A  EF39  F008         	goto	u9470
  8184   00106E                     u9471:
  8185   00106E  EF3A  F008         	goto	l9355
  8186   001072                     u9470:
  8187   001072                     
  8188                           ; BSR set to: 0
  8189   001072  81D7               	bsf	___flmul@bexp& (0+255),0,b
  8190   001074                     l9355:
  8191                           
  8192                           ; BSR set to: 0
  8193   001074  51D7               	movf	___flmul@bexp& (0+255),w,b
  8194   001076  B4D8               	btfsc	status,2,c
  8195   001078  EF40  F008         	goto	u9481
  8196   00107C  EF42  F008         	goto	u9480
  8197   001080                     u9481:
  8198   001080  EF55  F008         	goto	l9363
  8199   001084                     u9480:
  8200   001084                     
  8201                           ; BSR set to: 0
  8202   001084  29D7               	incf	___flmul@bexp& (0+255),w,b
  8203   001086  A4D8               	btfss	status,2,c
  8204   001088  EF48  F008         	goto	u9491
  8205   00108C  EF4A  F008         	goto	u9490
  8206   001090                     u9491:
  8207   001090  EF52  F008         	goto	l9361
  8208   001094                     u9490:
  8209   001094                     
  8210                           ; BSR set to: 0
  8211   001094  0E00               	movlw	0
  8212   001096  6FC5               	movwf	___flmul@b& (0+255),b
  8213   001098  0E00               	movlw	0
  8214   00109A  6FC6               	movwf	(___flmul@b+1)& (0+255),b
  8215   00109C  0E00               	movlw	0
  8216   00109E  6FC7               	movwf	(___flmul@b+2)& (0+255),b
  8217   0010A0  0E00               	movlw	0
  8218   0010A2  6FC8               	movwf	(___flmul@b+3)& (0+255),b
  8219   0010A4                     l9361:
  8220                           
  8221                           ; BSR set to: 0
  8222   0010A4  8FC7               	bsf	(___flmul@b+2)& (0+255),7,b
  8223   0010A6  EF5D  F008         	goto	l9365
  8224   0010AA                     l9363:
  8225                           
  8226                           ; BSR set to: 0
  8227   0010AA  0E00               	movlw	0
  8228   0010AC  6FC5               	movwf	___flmul@b& (0+255),b
  8229   0010AE  0E00               	movlw	0
  8230   0010B0  6FC6               	movwf	(___flmul@b+1)& (0+255),b
  8231   0010B2  0E00               	movlw	0
  8232   0010B4  6FC7               	movwf	(___flmul@b+2)& (0+255),b
  8233   0010B6  0E00               	movlw	0
  8234   0010B8  6FC8               	movwf	(___flmul@b+3)& (0+255),b
  8235   0010BA                     l9365:
  8236                           
  8237                           ; BSR set to: 0
  8238   0010BA  51CC               	movf	(___flmul@a+3)& (0+255),w,b
  8239   0010BC  0B80               	andlw	128
  8240   0010BE  1BD1               	xorwf	___flmul@sign& (0+255),f,b
  8241   0010C0                     
  8242                           ; BSR set to: 0
  8243   0010C0  51CC               	movf	(___flmul@a+3)& (0+255),w,b
  8244   0010C2  25CC               	addwf	(___flmul@a+3)& (0+255),w,b
  8245   0010C4  6FD2               	movwf	___flmul@aexp& (0+255),b
  8246   0010C6                     
  8247                           ; BSR set to: 0
  8248   0010C6  AFCB               	btfss	(___flmul@a+2)& (0+255),7,b
  8249   0010C8  EF68  F008         	goto	u9501
  8250   0010CC  EF6A  F008         	goto	u9500
  8251   0010D0                     u9501:
  8252   0010D0  EF6B  F008         	goto	l9373
  8253   0010D4                     u9500:
  8254   0010D4                     
  8255                           ; BSR set to: 0
  8256   0010D4  81D2               	bsf	___flmul@aexp& (0+255),0,b
  8257   0010D6                     l9373:
  8258                           
  8259                           ; BSR set to: 0
  8260   0010D6  51D2               	movf	___flmul@aexp& (0+255),w,b
  8261   0010D8  B4D8               	btfsc	status,2,c
  8262   0010DA  EF71  F008         	goto	u9511
  8263   0010DE  EF73  F008         	goto	u9510
  8264   0010E2                     u9511:
  8265   0010E2  EF86  F008         	goto	l9381
  8266   0010E6                     u9510:
  8267   0010E6                     
  8268                           ; BSR set to: 0
  8269   0010E6  29D2               	incf	___flmul@aexp& (0+255),w,b
  8270   0010E8  A4D8               	btfss	status,2,c
  8271   0010EA  EF79  F008         	goto	u9521
  8272   0010EE  EF7B  F008         	goto	u9520
  8273   0010F2                     u9521:
  8274   0010F2  EF83  F008         	goto	l9379
  8275   0010F6                     u9520:
  8276   0010F6                     
  8277                           ; BSR set to: 0
  8278   0010F6  0E00               	movlw	0
  8279   0010F8  6FC9               	movwf	___flmul@a& (0+255),b
  8280   0010FA  0E00               	movlw	0
  8281   0010FC  6FCA               	movwf	(___flmul@a+1)& (0+255),b
  8282   0010FE  0E00               	movlw	0
  8283   001100  6FCB               	movwf	(___flmul@a+2)& (0+255),b
  8284   001102  0E00               	movlw	0
  8285   001104  6FCC               	movwf	(___flmul@a+3)& (0+255),b
  8286   001106                     l9379:
  8287                           
  8288                           ; BSR set to: 0
  8289   001106  8FCB               	bsf	(___flmul@a+2)& (0+255),7,b
  8290   001108  EF8E  F008         	goto	l2119
  8291   00110C                     l9381:
  8292                           
  8293                           ; BSR set to: 0
  8294   00110C  0E00               	movlw	0
  8295   00110E  6FC9               	movwf	___flmul@a& (0+255),b
  8296   001110  0E00               	movlw	0
  8297   001112  6FCA               	movwf	(___flmul@a+1)& (0+255),b
  8298   001114  0E00               	movlw	0
  8299   001116  6FCB               	movwf	(___flmul@a+2)& (0+255),b
  8300   001118  0E00               	movlw	0
  8301   00111A  6FCC               	movwf	(___flmul@a+3)& (0+255),b
  8302   00111C                     l2119:
  8303                           
  8304                           ; BSR set to: 0
  8305   00111C  51D2               	movf	___flmul@aexp& (0+255),w,b
  8306   00111E  B4D8               	btfsc	status,2,c
  8307   001120  EF94  F008         	goto	u9531
  8308   001124  EF96  F008         	goto	u9530
  8309   001128                     u9531:
  8310   001128  EF9E  F008         	goto	l9385
  8311   00112C                     u9530:
  8312   00112C                     
  8313                           ; BSR set to: 0
  8314   00112C  51D7               	movf	___flmul@bexp& (0+255),w,b
  8315   00112E  A4D8               	btfss	status,2,c
  8316   001130  EF9C  F008         	goto	u9541
  8317   001134  EF9E  F008         	goto	u9540
  8318   001138                     u9541:
  8319   001138  EFA8  F008         	goto	l9389
  8320   00113C                     u9540:
  8321   00113C                     l9385:
  8322                           
  8323                           ; BSR set to: 0
  8324   00113C  0E00               	movlw	0
  8325   00113E  6FC5               	movwf	?___flmul& (0+255),b
  8326   001140  0E00               	movlw	0
  8327   001142  6FC6               	movwf	(?___flmul+1)& (0+255),b
  8328   001144  0E00               	movlw	0
  8329   001146  6FC7               	movwf	(?___flmul+2)& (0+255),b
  8330   001148  0E00               	movlw	0
  8331   00114A  6FC8               	movwf	(?___flmul+3)& (0+255),b
  8332   00114C  EF40  F00A         	goto	l2123
  8333   001150                     l9389:
  8334                           
  8335                           ; BSR set to: 0
  8336   001150  51CB               	movf	(___flmul@a+2)& (0+255),w,b
  8337   001152  03C5               	mulwf	___flmul@b& (0+255),b
  8338   001154  CFF3 F0DC          	movff	prodl,___flmul@temp
  8339   001158  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8340   00115C                     
  8341                           ; BSR set to: 0
  8342   00115C  51DC               	movf	___flmul@temp& (0+255),w,b
  8343   00115E  6FD3               	movwf	___flmul@grs& (0+255),b
  8344   001160  6BD4               	clrf	(___flmul@grs+1)& (0+255),b
  8345   001162  6BD5               	clrf	(___flmul@grs+2)& (0+255),b
  8346   001164  6BD6               	clrf	(___flmul@grs+3)& (0+255),b
  8347   001166                     
  8348                           ; BSR set to: 0
  8349   001166  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8350   001168  6FD8               	movwf	___flmul@prod& (0+255),b
  8351   00116A  6BD9               	clrf	(___flmul@prod+1)& (0+255),b
  8352   00116C  6BDA               	clrf	(___flmul@prod+2)& (0+255),b
  8353   00116E  6BDB               	clrf	(___flmul@prod+3)& (0+255),b
  8354   001170  51CA               	movf	(___flmul@a+1)& (0+255),w,b
  8355   001172  03C6               	mulwf	(___flmul@b+1)& (0+255),b
  8356   001174  CFF3 F0DC          	movff	prodl,___flmul@temp
  8357   001178  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8358   00117C                     
  8359                           ; BSR set to: 0
  8360   00117C  51DC               	movf	___flmul@temp& (0+255),w,b
  8361   00117E  27D3               	addwf	___flmul@grs& (0+255),f,b
  8362   001180  0E00               	movlw	0
  8363   001182  23D4               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8364   001184  23D5               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8365   001186  23D6               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8366   001188                     
  8367                           ; BSR set to: 0
  8368   001188  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8369   00118A  27D8               	addwf	___flmul@prod& (0+255),f,b
  8370   00118C  0E00               	movlw	0
  8371   00118E  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8372   001190  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8373   001192  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8374   001194  51C9               	movf	___flmul@a& (0+255),w,b
  8375   001196  03C7               	mulwf	(___flmul@b+2)& (0+255),b
  8376   001198  CFF3 F0DC          	movff	prodl,___flmul@temp
  8377   00119C  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8378   0011A0                     
  8379                           ; BSR set to: 0
  8380   0011A0  51DC               	movf	___flmul@temp& (0+255),w,b
  8381   0011A2  27D3               	addwf	___flmul@grs& (0+255),f,b
  8382   0011A4  0E00               	movlw	0
  8383   0011A6  23D4               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8384   0011A8  23D5               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8385   0011AA  23D6               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8386   0011AC                     
  8387                           ; BSR set to: 0
  8388   0011AC  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8389   0011AE  27D8               	addwf	___flmul@prod& (0+255),f,b
  8390   0011B0  0E00               	movlw	0
  8391   0011B2  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8392   0011B4  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8393   0011B6  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8394   0011B8                     
  8395                           ; BSR set to: 0
  8396   0011B8  C0D5  F0D6         	movff	___flmul@grs+2,___flmul@grs+3
  8397   0011BC  C0D4  F0D5         	movff	___flmul@grs+1,___flmul@grs+2
  8398   0011C0  C0D3  F0D4         	movff	___flmul@grs,___flmul@grs+1
  8399   0011C4  6BD3               	clrf	___flmul@grs& (0+255),b
  8400   0011C6                     
  8401                           ; BSR set to: 0
  8402   0011C6  51C9               	movf	___flmul@a& (0+255),w,b
  8403   0011C8  03C6               	mulwf	(___flmul@b+1)& (0+255),b
  8404   0011CA  CFF3 F0DC          	movff	prodl,___flmul@temp
  8405   0011CE  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8406   0011D2                     
  8407                           ; BSR set to: 0
  8408   0011D2  51DC               	movf	___flmul@temp& (0+255),w,b
  8409   0011D4  27D3               	addwf	___flmul@grs& (0+255),f,b
  8410   0011D6  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8411   0011D8  23D4               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8412   0011DA  0E00               	movlw	0
  8413   0011DC  23D5               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8414   0011DE  0E00               	movlw	0
  8415   0011E0  23D6               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8416   0011E2                     
  8417                           ; BSR set to: 0
  8418   0011E2  51CA               	movf	(___flmul@a+1)& (0+255),w,b
  8419   0011E4  03C5               	mulwf	___flmul@b& (0+255),b
  8420   0011E6  CFF3 F0DC          	movff	prodl,___flmul@temp
  8421   0011EA  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8422   0011EE                     
  8423                           ; BSR set to: 0
  8424   0011EE  51DC               	movf	___flmul@temp& (0+255),w,b
  8425   0011F0  27D3               	addwf	___flmul@grs& (0+255),f,b
  8426   0011F2  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8427   0011F4  23D4               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8428   0011F6  0E00               	movlw	0
  8429   0011F8  23D5               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8430   0011FA  0E00               	movlw	0
  8431   0011FC  23D6               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8432   0011FE                     
  8433                           ; BSR set to: 0
  8434   0011FE  C0D5  F0D6         	movff	___flmul@grs+2,___flmul@grs+3
  8435   001202  C0D4  F0D5         	movff	___flmul@grs+1,___flmul@grs+2
  8436   001206  C0D3  F0D4         	movff	___flmul@grs,___flmul@grs+1
  8437   00120A  6BD3               	clrf	___flmul@grs& (0+255),b
  8438   00120C  51C9               	movf	___flmul@a& (0+255),w,b
  8439   00120E  03C5               	mulwf	___flmul@b& (0+255),b
  8440   001210  CFF3 F0DC          	movff	prodl,___flmul@temp
  8441   001214  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8442   001218                     
  8443                           ; BSR set to: 0
  8444   001218  51DC               	movf	___flmul@temp& (0+255),w,b
  8445   00121A  27D3               	addwf	___flmul@grs& (0+255),f,b
  8446   00121C  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8447   00121E  23D4               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8448   001220  0E00               	movlw	0
  8449   001222  23D5               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8450   001224  0E00               	movlw	0
  8451   001226  23D6               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8452   001228                     
  8453                           ; BSR set to: 0
  8454   001228  51CB               	movf	(___flmul@a+2)& (0+255),w,b
  8455   00122A  03C6               	mulwf	(___flmul@b+1)& (0+255),b
  8456   00122C  CFF3 F0DC          	movff	prodl,___flmul@temp
  8457   001230  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8458   001234  51DC               	movf	___flmul@temp& (0+255),w,b
  8459   001236  27D8               	addwf	___flmul@prod& (0+255),f,b
  8460   001238  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8461   00123A  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8462   00123C  0E00               	movlw	0
  8463   00123E  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8464   001240  0E00               	movlw	0
  8465   001242  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8466   001244                     
  8467                           ; BSR set to: 0
  8468   001244  51CA               	movf	(___flmul@a+1)& (0+255),w,b
  8469   001246  03C7               	mulwf	(___flmul@b+2)& (0+255),b
  8470   001248  CFF3 F0DC          	movff	prodl,___flmul@temp
  8471   00124C  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8472   001250                     
  8473                           ; BSR set to: 0
  8474   001250  51DC               	movf	___flmul@temp& (0+255),w,b
  8475   001252  27D8               	addwf	___flmul@prod& (0+255),f,b
  8476   001254  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8477   001256  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8478   001258  0E00               	movlw	0
  8479   00125A  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8480   00125C  0E00               	movlw	0
  8481   00125E  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8482   001260  51CB               	movf	(___flmul@a+2)& (0+255),w,b
  8483   001262  03C7               	mulwf	(___flmul@b+2)& (0+255),b
  8484   001264  CFF3 F0DC          	movff	prodl,___flmul@temp
  8485   001268  CFF4 F0DD          	movff	prodh,___flmul@temp+1
  8486   00126C                     
  8487                           ; BSR set to: 0
  8488   00126C  51DC               	movf	___flmul@temp& (0+255),w,b
  8489   00126E  6FCD               	movwf	??___flmul& (0+255),b
  8490   001270  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8491   001272  6FCE               	movwf	(??___flmul+1)& (0+255),b
  8492   001274  6BCF               	clrf	(??___flmul+2)& (0+255),b
  8493   001276  6BD0               	clrf	(??___flmul+3)& (0+255),b
  8494   001278  C0CF  F0D0         	movff	??___flmul+2,??___flmul+3
  8495   00127C  C0CE  F0CF         	movff	??___flmul+1,??___flmul+2
  8496   001280  C0CD  F0CE         	movff	??___flmul,??___flmul+1
  8497   001284  6BCD               	clrf	??___flmul& (0+255),b
  8498   001286  51CD               	movf	??___flmul& (0+255),w,b
  8499   001288  27D8               	addwf	___flmul@prod& (0+255),f,b
  8500   00128A  51CE               	movf	(??___flmul+1)& (0+255),w,b
  8501   00128C  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8502   00128E  51CF               	movf	(??___flmul+2)& (0+255),w,b
  8503   001290  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8504   001292  51D0               	movf	(??___flmul+3)& (0+255),w,b
  8505   001294  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8506   001296                     
  8507                           ; BSR set to: 0
  8508   001296  C0D3  F0CD         	movff	___flmul@grs,??___flmul
  8509   00129A  C0D4  F0CE         	movff	___flmul@grs+1,??___flmul+1
  8510   00129E  C0D5  F0CF         	movff	___flmul@grs+2,??___flmul+2
  8511   0012A2  C0D6  F0D0         	movff	___flmul@grs+3,??___flmul+3
  8512   0012A6  0E19               	movlw	25
  8513   0012A8  EF5B  F009         	goto	u9550
  8514   0012AC                     u9555:
  8515   0012AC  90D8               	bcf	status,0,c
  8516   0012AE  33D0               	rrcf	(??___flmul+3)& (0+255),f,b
  8517   0012B0  33CF               	rrcf	(??___flmul+2)& (0+255),f,b
  8518   0012B2  33CE               	rrcf	(??___flmul+1)& (0+255),f,b
  8519   0012B4  33CD               	rrcf	??___flmul& (0+255),f,b
  8520   0012B6                     u9550:
  8521   0012B6  2EE8               	decfsz	wreg,f,c
  8522   0012B8  EF56  F009         	goto	u9555
  8523   0012BC  51CD               	movf	??___flmul& (0+255),w,b
  8524   0012BE  27D8               	addwf	___flmul@prod& (0+255),f,b
  8525   0012C0  51CE               	movf	(??___flmul+1)& (0+255),w,b
  8526   0012C2  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8527   0012C4  51CF               	movf	(??___flmul+2)& (0+255),w,b
  8528   0012C6  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8529   0012C8  51D0               	movf	(??___flmul+3)& (0+255),w,b
  8530   0012CA  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8531   0012CC                     
  8532                           ; BSR set to: 0
  8533   0012CC  C0D5  F0D6         	movff	___flmul@grs+2,___flmul@grs+3
  8534   0012D0  C0D4  F0D5         	movff	___flmul@grs+1,___flmul@grs+2
  8535   0012D4  C0D3  F0D4         	movff	___flmul@grs,___flmul@grs+1
  8536   0012D8  6BD3               	clrf	___flmul@grs& (0+255),b
  8537   0012DA                     
  8538                           ; BSR set to: 0
  8539   0012DA  51D2               	movf	___flmul@aexp& (0+255),w,b
  8540   0012DC  C0D7  F0CD         	movff	___flmul@bexp,??___flmul
  8541   0012E0  6BCE               	clrf	(??___flmul+1)& (0+255),b
  8542   0012E2  27CD               	addwf	??___flmul& (0+255),f,b
  8543   0012E4  0E00               	movlw	0
  8544   0012E6  23CE               	addwfc	(??___flmul+1)& (0+255),f,b
  8545   0012E8  0E82               	movlw	130
  8546   0012EA  25CD               	addwf	??___flmul& (0+255),w,b
  8547   0012EC  6FDC               	movwf	___flmul@temp& (0+255),b
  8548   0012EE  0EFF               	movlw	255
  8549   0012F0  21CE               	addwfc	(??___flmul+1)& (0+255),w,b
  8550   0012F2  6FDD               	movwf	(___flmul@temp+1)& (0+255),b
  8551   0012F4  EF91  F009         	goto	l9437
  8552   0012F8                     l9431:
  8553                           
  8554                           ; BSR set to: 0
  8555   0012F8  90D8               	bcf	status,0,c
  8556   0012FA  37D8               	rlcf	___flmul@prod& (0+255),f,b
  8557   0012FC  37D9               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8558   0012FE  37DA               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8559   001300  37DB               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8560   001302                     
  8561                           ; BSR set to: 0
  8562   001302  AFD6               	btfss	(___flmul@grs+3)& (0+255),7,b
  8563   001304  EF86  F009         	goto	u9561
  8564   001308  EF88  F009         	goto	u9560
  8565   00130C                     u9561:
  8566   00130C  EF89  F009         	goto	l2126
  8567   001310                     u9560:
  8568   001310                     
  8569                           ; BSR set to: 0
  8570   001310  81D8               	bsf	___flmul@prod& (0+255),0,b
  8571   001312                     l2126:
  8572                           
  8573                           ; BSR set to: 0
  8574   001312  90D8               	bcf	status,0,c
  8575   001314  37D3               	rlcf	___flmul@grs& (0+255),f,b
  8576   001316  37D4               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8577   001318  37D5               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8578   00131A  37D6               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8579   00131C  07DC               	decf	___flmul@temp& (0+255),f,b
  8580   00131E  A0D8               	btfss	status,0,c
  8581   001320  07DD               	decf	(___flmul@temp+1)& (0+255),f,b
  8582   001322                     l9437:
  8583                           
  8584                           ; BSR set to: 0
  8585   001322  AFDA               	btfss	(___flmul@prod+2)& (0+255),7,b
  8586   001324  EF96  F009         	goto	u9571
  8587   001328  EF98  F009         	goto	u9570
  8588   00132C                     u9571:
  8589   00132C  EF7C  F009         	goto	l9431
  8590   001330                     u9570:
  8591   001330                     
  8592                           ; BSR set to: 0
  8593   001330  0E00               	movlw	0
  8594   001332  6FD2               	movwf	___flmul@aexp& (0+255),b
  8595   001334                     
  8596                           ; BSR set to: 0
  8597   001334  AFD6               	btfss	(___flmul@grs+3)& (0+255),7,b
  8598   001336  EF9F  F009         	goto	u9581
  8599   00133A  EFA1  F009         	goto	u9580
  8600   00133E                     u9581:
  8601   00133E  EFC5  F009         	goto	l2128
  8602   001342                     u9580:
  8603   001342                     
  8604                           ; BSR set to: 0
  8605   001342  0EFF               	movlw	255
  8606   001344  15D3               	andwf	___flmul@grs& (0+255),w,b
  8607   001346  6FCD               	movwf	??___flmul& (0+255),b
  8608   001348  0EFF               	movlw	255
  8609   00134A  15D4               	andwf	(___flmul@grs+1)& (0+255),w,b
  8610   00134C  6FCE               	movwf	(??___flmul+1)& (0+255),b
  8611   00134E  0EFF               	movlw	255
  8612   001350  15D5               	andwf	(___flmul@grs+2)& (0+255),w,b
  8613   001352  6FCF               	movwf	(??___flmul+2)& (0+255),b
  8614   001354  0E7F               	movlw	127
  8615   001356  15D6               	andwf	(___flmul@grs+3)& (0+255),w,b
  8616   001358  6FD0               	movwf	(??___flmul+3)& (0+255),b
  8617   00135A  51CD               	movf	??___flmul& (0+255),w,b
  8618   00135C  11CE               	iorwf	(??___flmul+1)& (0+255),w,b
  8619   00135E  11CF               	iorwf	(??___flmul+2)& (0+255),w,b
  8620   001360  11D0               	iorwf	(??___flmul+3)& (0+255),w,b
  8621   001362  B4D8               	btfsc	status,2,c
  8622   001364  EFB6  F009         	goto	u9591
  8623   001368  EFB8  F009         	goto	u9590
  8624   00136C                     u9591:
  8625   00136C  EFBC  F009         	goto	l2129
  8626   001370                     u9590:
  8627   001370                     l9445:
  8628                           
  8629                           ; BSR set to: 0
  8630   001370  0E01               	movlw	1
  8631   001372  6FD2               	movwf	___flmul@aexp& (0+255),b
  8632   001374  EFC5  F009         	goto	l2128
  8633   001378                     l2129:
  8634                           
  8635                           ; BSR set to: 0
  8636   001378  A1D8               	btfss	___flmul@prod& (0+255),0,b
  8637   00137A  EFC1  F009         	goto	u9601
  8638   00137E  EFC3  F009         	goto	u9600
  8639   001382                     u9601:
  8640   001382  EFC5  F009         	goto	l2128
  8641   001386                     u9600:
  8642   001386  EFB8  F009         	goto	l9445
  8643   00138A                     l2128:
  8644                           
  8645                           ; BSR set to: 0
  8646   00138A  51D2               	movf	___flmul@aexp& (0+255),w,b
  8647   00138C  B4D8               	btfsc	status,2,c
  8648   00138E  EFCB  F009         	goto	u9611
  8649   001392  EFCD  F009         	goto	u9610
  8650   001396                     u9611:
  8651   001396  EFF1  F009         	goto	l9457
  8652   00139A                     u9610:
  8653   00139A                     
  8654                           ; BSR set to: 0
  8655   00139A  0E01               	movlw	1
  8656   00139C  27D8               	addwf	___flmul@prod& (0+255),f,b
  8657   00139E  0E00               	movlw	0
  8658   0013A0  23D9               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8659   0013A2  23DA               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8660   0013A4  23DB               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8661   0013A6                     
  8662                           ; BSR set to: 0
  8663   0013A6  A1DB               	btfss	(___flmul@prod+3)& (0+255),0,b
  8664   0013A8  EFD8  F009         	goto	u9621
  8665   0013AC  EFDA  F009         	goto	u9620
  8666   0013B0                     u9621:
  8667   0013B0  EFF1  F009         	goto	l9457
  8668   0013B4                     u9620:
  8669   0013B4                     
  8670                           ; BSR set to: 0
  8671   0013B4  C0D8  F0CD         	movff	___flmul@prod,??___flmul
  8672   0013B8  C0D9  F0CE         	movff	___flmul@prod+1,??___flmul+1
  8673   0013BC  C0DA  F0CF         	movff	___flmul@prod+2,??___flmul+2
  8674   0013C0  C0DB  F0D0         	movff	___flmul@prod+3,??___flmul+3
  8675   0013C4  35D0               	rlcf	(??___flmul+3)& (0+255),w,b
  8676   0013C6  33D0               	rrcf	(??___flmul+3)& (0+255),f,b
  8677   0013C8  33CF               	rrcf	(??___flmul+2)& (0+255),f,b
  8678   0013CA  33CE               	rrcf	(??___flmul+1)& (0+255),f,b
  8679   0013CC  33CD               	rrcf	??___flmul& (0+255),f,b
  8680   0013CE  C0CD  F0D8         	movff	??___flmul,___flmul@prod
  8681   0013D2  C0CE  F0D9         	movff	??___flmul+1,___flmul@prod+1
  8682   0013D6  C0CF  F0DA         	movff	??___flmul+2,___flmul@prod+2
  8683   0013DA  C0D0  F0DB         	movff	??___flmul+3,___flmul@prod+3
  8684   0013DE                     
  8685                           ; BSR set to: 0
  8686   0013DE  4BDC               	infsnz	___flmul@temp& (0+255),f,b
  8687   0013E0  2BDD               	incf	(___flmul@temp+1)& (0+255),f,b
  8688   0013E2                     l9457:
  8689                           
  8690                           ; BSR set to: 0
  8691   0013E2  BFDD               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8692   0013E4  EFFC  F009         	goto	u9631
  8693   0013E8  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8694   0013EA  E108               	bnz	u9630
  8695   0013EC  29DC               	incf	___flmul@temp& (0+255),w,b
  8696   0013EE  A0D8               	btfss	status,0,c
  8697   0013F0  EFFC  F009         	goto	u9631
  8698   0013F4  EFFE  F009         	goto	u9630
  8699   0013F8                     u9631:
  8700   0013F8  EF08  F00A         	goto	l9461
  8701   0013FC                     u9630:
  8702   0013FC                     
  8703                           ; BSR set to: 0
  8704   0013FC  0E00               	movlw	0
  8705   0013FE  6FD8               	movwf	___flmul@prod& (0+255),b
  8706   001400  0E00               	movlw	0
  8707   001402  6FD9               	movwf	(___flmul@prod+1)& (0+255),b
  8708   001404  0E80               	movlw	128
  8709   001406  6FDA               	movwf	(___flmul@prod+2)& (0+255),b
  8710   001408  0E7F               	movlw	127
  8711   00140A  6FDB               	movwf	(___flmul@prod+3)& (0+255),b
  8712   00140C  EF36  F00A         	goto	l9473
  8713   001410                     l9461:
  8714                           
  8715                           ; BSR set to: 0
  8716   001410  BFDD               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8717   001412  EF15  F00A         	goto	u9640
  8718   001416  51DD               	movf	(___flmul@temp+1)& (0+255),w,b
  8719   001418  E106               	bnz	u9641
  8720   00141A  05DC               	decf	___flmul@temp& (0+255),w,b
  8721   00141C  B0D8               	btfsc	status,0,c
  8722   00141E  EF13  F00A         	goto	u9641
  8723   001422  EF15  F00A         	goto	u9640
  8724   001426                     u9641:
  8725   001426  EF21  F00A         	goto	l2136
  8726   00142A                     u9640:
  8727   00142A                     
  8728                           ; BSR set to: 0
  8729   00142A  0E00               	movlw	0
  8730   00142C  6FD8               	movwf	___flmul@prod& (0+255),b
  8731   00142E  0E00               	movlw	0
  8732   001430  6FD9               	movwf	(___flmul@prod+1)& (0+255),b
  8733   001432  0E00               	movlw	0
  8734   001434  6FDA               	movwf	(___flmul@prod+2)& (0+255),b
  8735   001436  0E00               	movlw	0
  8736   001438  6FDB               	movwf	(___flmul@prod+3)& (0+255),b
  8737   00143A  0E00               	movlw	0
  8738   00143C  6FD1               	movwf	___flmul@sign& (0+255),b
  8739   00143E  EF36  F00A         	goto	l9473
  8740   001442                     l2136:
  8741                           
  8742                           ; BSR set to: 0
  8743   001442  C0DC  F0D7         	movff	___flmul@temp,___flmul@bexp
  8744   001446                     
  8745                           ; BSR set to: 0
  8746   001446  0EFF               	movlw	255
  8747   001448  17D8               	andwf	___flmul@prod& (0+255),f,b
  8748   00144A  0EFF               	movlw	255
  8749   00144C  17D9               	andwf	(___flmul@prod+1)& (0+255),f,b
  8750   00144E  0E7F               	movlw	127
  8751   001450  17DA               	andwf	(___flmul@prod+2)& (0+255),f,b
  8752   001452  0E00               	movlw	0
  8753   001454  17DB               	andwf	(___flmul@prod+3)& (0+255),f,b
  8754   001456                     
  8755                           ; BSR set to: 0
  8756   001456  A1D7               	btfss	___flmul@bexp& (0+255),0,b
  8757   001458  EF30  F00A         	goto	u9651
  8758   00145C  EF32  F00A         	goto	u9650
  8759   001460                     u9651:
  8760   001460  EF33  F00A         	goto	l9471
  8761   001464                     u9650:
  8762   001464                     
  8763                           ; BSR set to: 0
  8764   001464  8FDA               	bsf	(___flmul@prod+2)& (0+255),7,b
  8765   001466                     l9471:
  8766                           
  8767                           ; BSR set to: 0
  8768   001466  90D8               	bcf	status,0,c
  8769   001468  31D7               	rrcf	___flmul@bexp& (0+255),w,b
  8770   00146A  6FDB               	movwf	(___flmul@prod+3)& (0+255),b
  8771   00146C                     l9473:
  8772                           
  8773                           ; BSR set to: 0
  8774   00146C  51D1               	movf	___flmul@sign& (0+255),w,b
  8775   00146E  13DB               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8776   001470                     
  8777                           ; BSR set to: 0
  8778   001470  C0D8  F0C5         	movff	___flmul@prod,?___flmul
  8779   001474  C0D9  F0C6         	movff	___flmul@prod+1,?___flmul+1
  8780   001478  C0DA  F0C7         	movff	___flmul@prod+2,?___flmul+2
  8781   00147C  C0DB  F0C8         	movff	___flmul@prod+3,?___flmul+3
  8782   001480                     l2123:
  8783                           
  8784                           ; BSR set to: 0
  8785   001480  0012               	return		;funcret
  8786   001482                     __end_of___flmul:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function ___fldiv *****************
  8790 ;; Defined at:
  8791 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  b               4   43[BANK0 ] unsigned char 
  8794 ;;  a               4   47[BANK0 ] unsigned char 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  grs             4   11[BANK1 ] unsigned long 
  8797 ;;  rem             4    4[BANK1 ] unsigned long 
  8798 ;;  new_exp         2    9[BANK1 ] short 
  8799 ;;  aexp            1   16[BANK1 ] unsigned char 
  8800 ;;  bexp            1   15[BANK1 ] unsigned char 
  8801 ;;  sign            1    8[BANK1 ] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  4   43[BANK0 ] unsigned char 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8811 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8814 ;;      Totals:         0       8      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;Total ram usage:       25 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 8
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_HeartRate_Calculate
  8822 ;;		_CCP_PWM_Set_Duty
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text52
  8827   001482                     __ptext52:
  8828                           	callstack 0
  8829   001482                     ___fldiv:
  8830                           	callstack 21
  8831   001482  0100               	movlb	0	; () banked
  8832   001484  51E1               	movf	(___fldiv@b+3)& (0+255),w,b
  8833   001486  0B80               	andlw	128
  8834   001488  0101               	movlb	1	; () banked
  8835   00148A  6F46               	movwf	___fldiv@sign& (0+255),b
  8836   00148C  0100               	movlb	0	; () banked
  8837   00148E  51E1               	movf	(___fldiv@b+3)& (0+255),w,b
  8838   001490  25E1               	addwf	(___fldiv@b+3)& (0+255),w,b
  8839   001492  0101               	movlb	1	; () banked
  8840   001494  6F4D               	movwf	___fldiv@bexp& (0+255),b
  8841   001496                     
  8842                           ; BSR set to: 1
  8843   001496  0100               	movlb	0	; () banked
  8844   001498  AFE0               	btfss	(___fldiv@b+2)& (0+255),7,b
  8845   00149A  EF51  F00A         	goto	u9241
  8846   00149E  EF53  F00A         	goto	u9240
  8847   0014A2                     u9241:
  8848   0014A2  EF55  F00A         	goto	l9217
  8849   0014A6                     u9240:
  8850   0014A6                     
  8851                           ; BSR set to: 0
  8852   0014A6  0101               	movlb	1	; () banked
  8853   0014A8  814D               	bsf	___fldiv@bexp& (0+255),0,b
  8854   0014AA                     l9217:
  8855   0014AA  0101               	movlb	1	; () banked
  8856   0014AC  514D               	movf	___fldiv@bexp& (0+255),w,b
  8857   0014AE  B4D8               	btfsc	status,2,c
  8858   0014B0  EF5C  F00A         	goto	u9251
  8859   0014B4  EF5E  F00A         	goto	u9250
  8860   0014B8                     u9251:
  8861   0014B8  EF75  F00A         	goto	l9227
  8862   0014BC                     u9250:
  8863   0014BC                     
  8864                           ; BSR set to: 1
  8865   0014BC  294D               	incf	___fldiv@bexp& (0+255),w,b
  8866   0014BE  A4D8               	btfss	status,2,c
  8867   0014C0  EF64  F00A         	goto	u9261
  8868   0014C4  EF66  F00A         	goto	u9260
  8869   0014C8                     u9261:
  8870   0014C8  EF6F  F00A         	goto	l9223
  8871   0014CC                     u9260:
  8872   0014CC                     
  8873                           ; BSR set to: 1
  8874   0014CC  0E00               	movlw	0
  8875   0014CE  0100               	movlb	0	; () banked
  8876   0014D0  6FDE               	movwf	___fldiv@b& (0+255),b
  8877   0014D2  0E00               	movlw	0
  8878   0014D4  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  8879   0014D6  0E00               	movlw	0
  8880   0014D8  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  8881   0014DA  0E00               	movlw	0
  8882   0014DC  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  8883   0014DE                     l9223:
  8884   0014DE  0100               	movlb	0	; () banked
  8885   0014E0  8FE0               	bsf	(___fldiv@b+2)& (0+255),7,b
  8886   0014E2                     
  8887                           ; BSR set to: 0
  8888   0014E2  0E00               	movlw	0
  8889   0014E4  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  8890   0014E6  EF7E  F00A         	goto	l9229
  8891   0014EA                     l9227:
  8892                           
  8893                           ; BSR set to: 1
  8894   0014EA  0E00               	movlw	0
  8895   0014EC  0100               	movlb	0	; () banked
  8896   0014EE  6FDE               	movwf	___fldiv@b& (0+255),b
  8897   0014F0  0E00               	movlw	0
  8898   0014F2  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  8899   0014F4  0E00               	movlw	0
  8900   0014F6  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  8901   0014F8  0E00               	movlw	0
  8902   0014FA  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  8903   0014FC                     l9229:
  8904                           
  8905                           ; BSR set to: 0
  8906   0014FC  51E5               	movf	(___fldiv@a+3)& (0+255),w,b
  8907   0014FE  0B80               	andlw	128
  8908   001500  0101               	movlb	1	; () banked
  8909   001502  1B46               	xorwf	___fldiv@sign& (0+255),f,b
  8910   001504                     
  8911                           ; BSR set to: 1
  8912   001504  0100               	movlb	0	; () banked
  8913   001506  51E5               	movf	(___fldiv@a+3)& (0+255),w,b
  8914   001508  25E5               	addwf	(___fldiv@a+3)& (0+255),w,b
  8915   00150A  0101               	movlb	1	; () banked
  8916   00150C  6F4E               	movwf	___fldiv@aexp& (0+255),b
  8917   00150E                     
  8918                           ; BSR set to: 1
  8919   00150E  0100               	movlb	0	; () banked
  8920   001510  AFE4               	btfss	(___fldiv@a+2)& (0+255),7,b
  8921   001512  EF8D  F00A         	goto	u9271
  8922   001516  EF8F  F00A         	goto	u9270
  8923   00151A                     u9271:
  8924   00151A  EF91  F00A         	goto	l9237
  8925   00151E                     u9270:
  8926   00151E                     
  8927                           ; BSR set to: 0
  8928   00151E  0101               	movlb	1	; () banked
  8929   001520  814E               	bsf	___fldiv@aexp& (0+255),0,b
  8930   001522                     l9237:
  8931   001522  0101               	movlb	1	; () banked
  8932   001524  514E               	movf	___fldiv@aexp& (0+255),w,b
  8933   001526  B4D8               	btfsc	status,2,c
  8934   001528  EF98  F00A         	goto	u9281
  8935   00152C  EF9A  F00A         	goto	u9280
  8936   001530                     u9281:
  8937   001530  EFB1  F00A         	goto	l9247
  8938   001534                     u9280:
  8939   001534                     
  8940                           ; BSR set to: 1
  8941   001534  294E               	incf	___fldiv@aexp& (0+255),w,b
  8942   001536  A4D8               	btfss	status,2,c
  8943   001538  EFA0  F00A         	goto	u9291
  8944   00153C  EFA2  F00A         	goto	u9290
  8945   001540                     u9291:
  8946   001540  EFAB  F00A         	goto	l9243
  8947   001544                     u9290:
  8948   001544                     
  8949                           ; BSR set to: 1
  8950   001544  0E00               	movlw	0
  8951   001546  0100               	movlb	0	; () banked
  8952   001548  6FE2               	movwf	___fldiv@a& (0+255),b
  8953   00154A  0E00               	movlw	0
  8954   00154C  6FE3               	movwf	(___fldiv@a+1)& (0+255),b
  8955   00154E  0E00               	movlw	0
  8956   001550  6FE4               	movwf	(___fldiv@a+2)& (0+255),b
  8957   001552  0E00               	movlw	0
  8958   001554  6FE5               	movwf	(___fldiv@a+3)& (0+255),b
  8959   001556                     l9243:
  8960   001556  0100               	movlb	0	; () banked
  8961   001558  8FE4               	bsf	(___fldiv@a+2)& (0+255),7,b
  8962   00155A                     
  8963                           ; BSR set to: 0
  8964   00155A  0E00               	movlw	0
  8965   00155C  6FE5               	movwf	(___fldiv@a+3)& (0+255),b
  8966   00155E  EFBA  F00A         	goto	l9249
  8967   001562                     l9247:
  8968                           
  8969                           ; BSR set to: 1
  8970   001562  0E00               	movlw	0
  8971   001564  0100               	movlb	0	; () banked
  8972   001566  6FE2               	movwf	___fldiv@a& (0+255),b
  8973   001568  0E00               	movlw	0
  8974   00156A  6FE3               	movwf	(___fldiv@a+1)& (0+255),b
  8975   00156C  0E00               	movlw	0
  8976   00156E  6FE4               	movwf	(___fldiv@a+2)& (0+255),b
  8977   001570  0E00               	movlw	0
  8978   001572  6FE5               	movwf	(___fldiv@a+3)& (0+255),b
  8979   001574                     l9249:
  8980                           
  8981                           ; BSR set to: 0
  8982   001574  51E2               	movf	___fldiv@a& (0+255),w,b
  8983   001576  11E3               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8984   001578  11E4               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8985   00157A  11E5               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8986   00157C  A4D8               	btfss	status,2,c
  8987   00157E  EFC3  F00A         	goto	u9301
  8988   001582  EFC5  F00A         	goto	u9300
  8989   001586                     u9301:
  8990   001586  EFDF  F00A         	goto	l9261
  8991   00158A                     u9300:
  8992   00158A                     
  8993                           ; BSR set to: 0
  8994   00158A  0E00               	movlw	0
  8995   00158C  6FDE               	movwf	___fldiv@b& (0+255),b
  8996   00158E  0E00               	movlw	0
  8997   001590  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  8998   001592  0E00               	movlw	0
  8999   001594  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  9000   001596  0E00               	movlw	0
  9001   001598  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  9002   00159A                     
  9003                           ; BSR set to: 0
  9004   00159A  0E80               	movlw	128
  9005   00159C  13E0               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9006   00159E  0E7F               	movlw	127
  9007   0015A0  13E1               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9008   0015A2                     l9255:
  9009                           
  9010                           ; BSR set to: 0
  9011   0015A2  0101               	movlb	1	; () banked
  9012   0015A4  5146               	movf	___fldiv@sign& (0+255),w,b
  9013   0015A6  0100               	movlb	0	; () banked
  9014   0015A8  13E1               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9015   0015AA                     
  9016                           ; BSR set to: 0
  9017   0015AA  C0DE  F0DE         	movff	___fldiv@b,?___fldiv
  9018   0015AE  C0DF  F0DF         	movff	___fldiv@b+1,?___fldiv+1
  9019   0015B2  C0E0  F0E0         	movff	___fldiv@b+2,?___fldiv+2
  9020   0015B6  C0E1  F0E1         	movff	___fldiv@b+3,?___fldiv+3
  9021   0015BA  EF4D  F00C         	goto	l2087
  9022   0015BE                     l9261:
  9023                           
  9024                           ; BSR set to: 0
  9025   0015BE  0101               	movlb	1	; () banked
  9026   0015C0  514D               	movf	___fldiv@bexp& (0+255),w,b
  9027   0015C2  A4D8               	btfss	status,2,c
  9028   0015C4  EFE6  F00A         	goto	u9311
  9029   0015C8  EFE8  F00A         	goto	u9310
  9030   0015CC                     u9311:
  9031   0015CC  EFF3  F00A         	goto	l9269
  9032   0015D0                     u9310:
  9033   0015D0                     
  9034                           ; BSR set to: 1
  9035   0015D0  0E00               	movlw	0
  9036   0015D2  0100               	movlb	0	; () banked
  9037   0015D4  6FDE               	movwf	?___fldiv& (0+255),b
  9038   0015D6  0E00               	movlw	0
  9039   0015D8  6FDF               	movwf	(?___fldiv+1)& (0+255),b
  9040   0015DA  0E00               	movlw	0
  9041   0015DC  6FE0               	movwf	(?___fldiv+2)& (0+255),b
  9042   0015DE  0E00               	movlw	0
  9043   0015E0  6FE1               	movwf	(?___fldiv+3)& (0+255),b
  9044   0015E2  EF4D  F00C         	goto	l2087
  9045   0015E6                     l9269:
  9046                           
  9047                           ; BSR set to: 1
  9048   0015E6  514E               	movf	___fldiv@aexp& (0+255),w,b
  9049   0015E8  C14D  F13E         	movff	___fldiv@bexp,??___fldiv
  9050   0015EC  6B3F               	clrf	(??___fldiv+1)& (0+255),b
  9051   0015EE  5F3E               	subwf	??___fldiv& (0+255),f,b
  9052   0015F0  0E00               	movlw	0
  9053   0015F2  5B3F               	subwfb	(??___fldiv+1)& (0+255),f,b
  9054   0015F4  0E7F               	movlw	127
  9055   0015F6  253E               	addwf	??___fldiv& (0+255),w,b
  9056   0015F8  6F47               	movwf	___fldiv@new_exp& (0+255),b
  9057   0015FA  0E00               	movlw	0
  9058   0015FC  213F               	addwfc	(??___fldiv+1)& (0+255),w,b
  9059   0015FE  6F48               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9060   001600                     
  9061                           ; BSR set to: 1
  9062   001600  C0DE  F142         	movff	___fldiv@b,___fldiv@rem
  9063   001604  C0DF  F143         	movff	___fldiv@b+1,___fldiv@rem+1
  9064   001608  C0E0  F144         	movff	___fldiv@b+2,___fldiv@rem+2
  9065   00160C  C0E1  F145         	movff	___fldiv@b+3,___fldiv@rem+3
  9066   001610                     
  9067                           ; BSR set to: 1
  9068   001610  0E00               	movlw	0
  9069   001612  0100               	movlb	0	; () banked
  9070   001614  6FDE               	movwf	___fldiv@b& (0+255),b
  9071   001616  0E00               	movlw	0
  9072   001618  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  9073   00161A  0E00               	movlw	0
  9074   00161C  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  9075   00161E  0E00               	movlw	0
  9076   001620  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  9077   001622                     
  9078                           ; BSR set to: 0
  9079   001622  0E00               	movlw	0
  9080   001624  0101               	movlb	1	; () banked
  9081   001626  6F49               	movwf	___fldiv@grs& (0+255),b
  9082   001628  0E00               	movlw	0
  9083   00162A  6F4A               	movwf	(___fldiv@grs+1)& (0+255),b
  9084   00162C  0E00               	movlw	0
  9085   00162E  6F4B               	movwf	(___fldiv@grs+2)& (0+255),b
  9086   001630  0E00               	movlw	0
  9087   001632  6F4C               	movwf	(___fldiv@grs+3)& (0+255),b
  9088   001634                     
  9089                           ; BSR set to: 1
  9090   001634  0E00               	movlw	0
  9091   001636  6F4E               	movwf	___fldiv@aexp& (0+255),b
  9092   001638  EF6A  F00B         	goto	l2089
  9093   00163C                     l9279:
  9094                           
  9095                           ; BSR set to: 1
  9096   00163C  514E               	movf	___fldiv@aexp& (0+255),w,b
  9097   00163E  B4D8               	btfsc	status,2,c
  9098   001640  EF24  F00B         	goto	u9321
  9099   001644  EF26  F00B         	goto	u9320
  9100   001648                     u9321:
  9101   001648  EF41  F00B         	goto	l9287
  9102   00164C                     u9320:
  9103   00164C                     
  9104                           ; BSR set to: 1
  9105   00164C  90D8               	bcf	status,0,c
  9106   00164E  3742               	rlcf	___fldiv@rem& (0+255),f,b
  9107   001650  3743               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9108   001652  3744               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9109   001654  3745               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9110   001656  0100               	movlb	0	; () banked
  9111   001658  90D8               	bcf	status,0,c
  9112   00165A  37DE               	rlcf	___fldiv@b& (0+255),f,b
  9113   00165C  37DF               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9114   00165E  37E0               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9115   001660  37E1               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9116   001662                     
  9117                           ; BSR set to: 0
  9118   001662  0101               	movlb	1	; () banked
  9119   001664  AF4C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9120   001666  EF37  F00B         	goto	u9331
  9121   00166A  EF39  F00B         	goto	u9330
  9122   00166E                     u9331:
  9123   00166E  EF3B  F00B         	goto	l2092
  9124   001672                     u9330:
  9125   001672                     
  9126                           ; BSR set to: 1
  9127   001672  0100               	movlb	0	; () banked
  9128   001674  81DE               	bsf	___fldiv@b& (0+255),0,b
  9129   001676                     l2092:
  9130   001676  0101               	movlb	1	; () banked
  9131   001678  90D8               	bcf	status,0,c
  9132   00167A  3749               	rlcf	___fldiv@grs& (0+255),f,b
  9133   00167C  374A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9134   00167E  374B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9135   001680  374C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9136   001682                     l9287:
  9137                           
  9138                           ; BSR set to: 1
  9139   001682  0100               	movlb	0	; () banked
  9140   001684  51E2               	movf	___fldiv@a& (0+255),w,b
  9141   001686  0101               	movlb	1	; () banked
  9142   001688  5D42               	subwf	___fldiv@rem& (0+255),w,b
  9143   00168A  0100               	movlb	0	; () banked
  9144   00168C  51E3               	movf	(___fldiv@a+1)& (0+255),w,b
  9145   00168E  0101               	movlb	1	; () banked
  9146   001690  5943               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9147   001692  0100               	movlb	0	; () banked
  9148   001694  51E4               	movf	(___fldiv@a+2)& (0+255),w,b
  9149   001696  0101               	movlb	1	; () banked
  9150   001698  5944               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9151   00169A  0100               	movlb	0	; () banked
  9152   00169C  51E5               	movf	(___fldiv@a+3)& (0+255),w,b
  9153   00169E  0101               	movlb	1	; () banked
  9154   0016A0  5945               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9155   0016A2  A0D8               	btfss	status,0,c
  9156   0016A4  EF56  F00B         	goto	u9341
  9157   0016A8  EF58  F00B         	goto	u9340
  9158   0016AC                     u9341:
  9159   0016AC  EF69  F00B         	goto	l9293
  9160   0016B0                     u9340:
  9161   0016B0                     
  9162                           ; BSR set to: 1
  9163   0016B0  8D4C               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9164   0016B2                     
  9165                           ; BSR set to: 1
  9166   0016B2  0100               	movlb	0	; () banked
  9167   0016B4  51E2               	movf	___fldiv@a& (0+255),w,b
  9168   0016B6  0101               	movlb	1	; () banked
  9169   0016B8  5F42               	subwf	___fldiv@rem& (0+255),f,b
  9170   0016BA  0100               	movlb	0	; () banked
  9171   0016BC  51E3               	movf	(___fldiv@a+1)& (0+255),w,b
  9172   0016BE  0101               	movlb	1	; () banked
  9173   0016C0  5B43               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9174   0016C2  0100               	movlb	0	; () banked
  9175   0016C4  51E4               	movf	(___fldiv@a+2)& (0+255),w,b
  9176   0016C6  0101               	movlb	1	; () banked
  9177   0016C8  5B44               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9178   0016CA  0100               	movlb	0	; () banked
  9179   0016CC  51E5               	movf	(___fldiv@a+3)& (0+255),w,b
  9180   0016CE  0101               	movlb	1	; () banked
  9181   0016D0  5B45               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9182   0016D2                     l9293:
  9183                           
  9184                           ; BSR set to: 1
  9185   0016D2  2B4E               	incf	___fldiv@aexp& (0+255),f,b
  9186   0016D4                     l2089:
  9187                           
  9188                           ; BSR set to: 1
  9189   0016D4  0E19               	movlw	25
  9190   0016D6  654E               	cpfsgt	___fldiv@aexp& (0+255),b
  9191   0016D8  EF70  F00B         	goto	u9351
  9192   0016DC  EF72  F00B         	goto	u9350
  9193   0016E0                     u9351:
  9194   0016E0  EF1E  F00B         	goto	l9279
  9195   0016E4                     u9350:
  9196   0016E4                     
  9197                           ; BSR set to: 1
  9198   0016E4  5142               	movf	___fldiv@rem& (0+255),w,b
  9199   0016E6  1143               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9200   0016E8  1144               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9201   0016EA  1145               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9202   0016EC  B4D8               	btfsc	status,2,c
  9203   0016EE  EF7B  F00B         	goto	u9361
  9204   0016F2  EF7D  F00B         	goto	u9360
  9205   0016F6                     u9361:
  9206   0016F6  EF98  F00B         	goto	l9305
  9207   0016FA                     u9360:
  9208   0016FA                     
  9209                           ; BSR set to: 1
  9210   0016FA  8149               	bsf	___fldiv@grs& (0+255),0,b
  9211   0016FC  EF98  F00B         	goto	l9305
  9212   001700                     l9299:
  9213                           
  9214                           ; BSR set to: 0
  9215   001700  90D8               	bcf	status,0,c
  9216   001702  37DE               	rlcf	___fldiv@b& (0+255),f,b
  9217   001704  37DF               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9218   001706  37E0               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9219   001708  37E1               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9220   00170A                     
  9221                           ; BSR set to: 0
  9222   00170A  0101               	movlb	1	; () banked
  9223   00170C  AF4C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9224   00170E  EF8B  F00B         	goto	u9371
  9225   001712  EF8D  F00B         	goto	u9370
  9226   001716                     u9371:
  9227   001716  EF8F  F00B         	goto	l2098
  9228   00171A                     u9370:
  9229   00171A                     
  9230                           ; BSR set to: 1
  9231   00171A  0100               	movlb	0	; () banked
  9232   00171C  81DE               	bsf	___fldiv@b& (0+255),0,b
  9233   00171E                     l2098:
  9234   00171E  0101               	movlb	1	; () banked
  9235   001720  90D8               	bcf	status,0,c
  9236   001722  3749               	rlcf	___fldiv@grs& (0+255),f,b
  9237   001724  374A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9238   001726  374B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9239   001728  374C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9240   00172A  0747               	decf	___fldiv@new_exp& (0+255),f,b
  9241   00172C  A0D8               	btfss	status,0,c
  9242   00172E  0748               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9243   001730                     l9305:
  9244                           
  9245                           ; BSR set to: 1
  9246   001730  0100               	movlb	0	; () banked
  9247   001732  AFE0               	btfss	(___fldiv@b+2)& (0+255),7,b
  9248   001734  EF9E  F00B         	goto	u9381
  9249   001738  EFA0  F00B         	goto	u9380
  9250   00173C                     u9381:
  9251   00173C  EF80  F00B         	goto	l9299
  9252   001740                     u9380:
  9253   001740                     
  9254                           ; BSR set to: 0
  9255   001740  0E00               	movlw	0
  9256   001742  0101               	movlb	1	; () banked
  9257   001744  6F4E               	movwf	___fldiv@aexp& (0+255),b
  9258   001746                     
  9259                           ; BSR set to: 1
  9260   001746  AF4C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9261   001748  EFA8  F00B         	goto	u9391
  9262   00174C  EFAA  F00B         	goto	u9390
  9263   001750                     u9391:
  9264   001750  EFD0  F00B         	goto	l2100
  9265   001754                     u9390:
  9266   001754                     
  9267                           ; BSR set to: 1
  9268   001754  0EFF               	movlw	255
  9269   001756  1549               	andwf	___fldiv@grs& (0+255),w,b
  9270   001758  6F3E               	movwf	??___fldiv& (0+255),b
  9271   00175A  0EFF               	movlw	255
  9272   00175C  154A               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9273   00175E  6F3F               	movwf	(??___fldiv+1)& (0+255),b
  9274   001760  0EFF               	movlw	255
  9275   001762  154B               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9276   001764  6F40               	movwf	(??___fldiv+2)& (0+255),b
  9277   001766  0E7F               	movlw	127
  9278   001768  154C               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9279   00176A  6F41               	movwf	(??___fldiv+3)& (0+255),b
  9280   00176C  513E               	movf	??___fldiv& (0+255),w,b
  9281   00176E  113F               	iorwf	(??___fldiv+1)& (0+255),w,b
  9282   001770  1140               	iorwf	(??___fldiv+2)& (0+255),w,b
  9283   001772  1141               	iorwf	(??___fldiv+3)& (0+255),w,b
  9284   001774  B4D8               	btfsc	status,2,c
  9285   001776  EFBF  F00B         	goto	u9401
  9286   00177A  EFC1  F00B         	goto	u9400
  9287   00177E                     u9401:
  9288   00177E  EFC6  F00B         	goto	l2101
  9289   001782                     u9400:
  9290   001782                     l9313:
  9291   001782  0E01               	movlw	1
  9292   001784  0101               	movlb	1	; () banked
  9293   001786  6F4E               	movwf	___fldiv@aexp& (0+255),b
  9294   001788  EFD0  F00B         	goto	l2100
  9295   00178C                     l2101:
  9296                           
  9297                           ; BSR set to: 1
  9298   00178C  0100               	movlb	0	; () banked
  9299   00178E  A1DE               	btfss	___fldiv@b& (0+255),0,b
  9300   001790  EFCC  F00B         	goto	u9411
  9301   001794  EFCE  F00B         	goto	u9410
  9302   001798                     u9411:
  9303   001798  EFD0  F00B         	goto	l2100
  9304   00179C                     u9410:
  9305   00179C  EFC1  F00B         	goto	l9313
  9306   0017A0                     l2100:
  9307   0017A0  0101               	movlb	1	; () banked
  9308   0017A2  514E               	movf	___fldiv@aexp& (0+255),w,b
  9309   0017A4  B4D8               	btfsc	status,2,c
  9310   0017A6  EFD7  F00B         	goto	u9421
  9311   0017AA  EFD9  F00B         	goto	u9420
  9312   0017AE                     u9421:
  9313   0017AE  EFFF  F00B         	goto	l9325
  9314   0017B2                     u9420:
  9315   0017B2                     
  9316                           ; BSR set to: 1
  9317   0017B2  0E01               	movlw	1
  9318   0017B4  0100               	movlb	0	; () banked
  9319   0017B6  27DE               	addwf	___fldiv@b& (0+255),f,b
  9320   0017B8  0E00               	movlw	0
  9321   0017BA  23DF               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9322   0017BC  23E0               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9323   0017BE  23E1               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9324   0017C0                     
  9325                           ; BSR set to: 0
  9326   0017C0  A1E1               	btfss	(___fldiv@b+3)& (0+255),0,b
  9327   0017C2  EFE5  F00B         	goto	u9431
  9328   0017C6  EFE7  F00B         	goto	u9430
  9329   0017CA                     u9431:
  9330   0017CA  EFFF  F00B         	goto	l9325
  9331   0017CE                     u9430:
  9332   0017CE                     
  9333                           ; BSR set to: 0
  9334   0017CE  C0DE  F13E         	movff	___fldiv@b,??___fldiv
  9335   0017D2  C0DF  F13F         	movff	___fldiv@b+1,??___fldiv+1
  9336   0017D6  C0E0  F140         	movff	___fldiv@b+2,??___fldiv+2
  9337   0017DA  C0E1  F141         	movff	___fldiv@b+3,??___fldiv+3
  9338   0017DE  0101               	movlb	1	; () banked
  9339   0017E0  3541               	rlcf	(??___fldiv+3)& (0+255),w,b
  9340   0017E2  3341               	rrcf	(??___fldiv+3)& (0+255),f,b
  9341   0017E4  3340               	rrcf	(??___fldiv+2)& (0+255),f,b
  9342   0017E6  333F               	rrcf	(??___fldiv+1)& (0+255),f,b
  9343   0017E8  333E               	rrcf	??___fldiv& (0+255),f,b
  9344   0017EA  C13E  F0DE         	movff	??___fldiv,___fldiv@b
  9345   0017EE  C13F  F0DF         	movff	??___fldiv+1,___fldiv@b+1
  9346   0017F2  C140  F0E0         	movff	??___fldiv+2,___fldiv@b+2
  9347   0017F6  C141  F0E1         	movff	??___fldiv+3,___fldiv@b+3
  9348   0017FA                     
  9349                           ; BSR set to: 1
  9350   0017FA  4B47               	infsnz	___fldiv@new_exp& (0+255),f,b
  9351   0017FC  2B48               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9352   0017FE                     l9325:
  9353   0017FE  0101               	movlb	1	; () banked
  9354   001800  BF48               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9355   001802  EF0B  F00C         	goto	u9441
  9356   001806  5148               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9357   001808  E108               	bnz	u9440
  9358   00180A  2947               	incf	___fldiv@new_exp& (0+255),w,b
  9359   00180C  A0D8               	btfss	status,0,c
  9360   00180E  EF0B  F00C         	goto	u9441
  9361   001812  EF0D  F00C         	goto	u9440
  9362   001816                     u9441:
  9363   001816  EF19  F00C         	goto	l9329
  9364   00181A                     u9440:
  9365   00181A                     
  9366                           ; BSR set to: 1
  9367   00181A  0E00               	movlw	0
  9368   00181C  6F48               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9369   00181E  6947               	setf	___fldiv@new_exp& (0+255),b
  9370   001820  0E00               	movlw	0
  9371   001822  0100               	movlb	0	; () banked
  9372   001824  6FDE               	movwf	___fldiv@b& (0+255),b
  9373   001826  0E00               	movlw	0
  9374   001828  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  9375   00182A  0E00               	movlw	0
  9376   00182C  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  9377   00182E  0E00               	movlw	0
  9378   001830  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  9379   001832                     l9329:
  9380   001832  0101               	movlb	1	; () banked
  9381   001834  BF48               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9382   001836  EF27  F00C         	goto	u9450
  9383   00183A  5148               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9384   00183C  E106               	bnz	u9451
  9385   00183E  0547               	decf	___fldiv@new_exp& (0+255),w,b
  9386   001840  B0D8               	btfsc	status,0,c
  9387   001842  EF25  F00C         	goto	u9451
  9388   001846  EF27  F00C         	goto	u9450
  9389   00184A                     u9451:
  9390   00184A  EF37  F00C         	goto	l9333
  9391   00184E                     u9450:
  9392   00184E                     
  9393                           ; BSR set to: 1
  9394   00184E  0E00               	movlw	0
  9395   001850  6F48               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9396   001852  0E00               	movlw	0
  9397   001854  6F47               	movwf	___fldiv@new_exp& (0+255),b
  9398   001856  0E00               	movlw	0
  9399   001858  0100               	movlb	0	; () banked
  9400   00185A  6FDE               	movwf	___fldiv@b& (0+255),b
  9401   00185C  0E00               	movlw	0
  9402   00185E  6FDF               	movwf	(___fldiv@b+1)& (0+255),b
  9403   001860  0E00               	movlw	0
  9404   001862  6FE0               	movwf	(___fldiv@b+2)& (0+255),b
  9405   001864  0E00               	movlw	0
  9406   001866  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  9407   001868  0E00               	movlw	0
  9408   00186A  0101               	movlb	1	; () banked
  9409   00186C  6F46               	movwf	___fldiv@sign& (0+255),b
  9410   00186E                     l9333:
  9411                           
  9412                           ; BSR set to: 1
  9413   00186E  C147  F14D         	movff	___fldiv@new_exp,___fldiv@bexp
  9414   001872                     
  9415                           ; BSR set to: 1
  9416   001872  A14D               	btfss	___fldiv@bexp& (0+255),0,b
  9417   001874  EF3E  F00C         	goto	u9461
  9418   001878  EF40  F00C         	goto	u9460
  9419   00187C                     u9461:
  9420   00187C  EF44  F00C         	goto	l9339
  9421   001880                     u9460:
  9422   001880                     
  9423                           ; BSR set to: 1
  9424   001880  0100               	movlb	0	; () banked
  9425   001882  8FE0               	bsf	(___fldiv@b+2)& (0+255),7,b
  9426   001884  EF46  F00C         	goto	l9341
  9427   001888                     l9339:
  9428                           
  9429                           ; BSR set to: 1
  9430   001888  0100               	movlb	0	; () banked
  9431   00188A  9FE0               	bcf	(___fldiv@b+2)& (0+255),7,b
  9432   00188C                     l9341:
  9433                           
  9434                           ; BSR set to: 0
  9435   00188C  0101               	movlb	1	; () banked
  9436   00188E  90D8               	bcf	status,0,c
  9437   001890  314D               	rrcf	___fldiv@bexp& (0+255),w,b
  9438   001892  0100               	movlb	0	; () banked
  9439   001894  6FE1               	movwf	(___fldiv@b+3)& (0+255),b
  9440   001896  EFD1  F00A         	goto	l9255
  9441   00189A                     l2087:
  9442                           
  9443                           ; BSR set to: 0
  9444   00189A  0012               	return		;funcret
  9445   00189C                     __end_of___fldiv:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _InterruptManagerLow *****************
  9449 ;; Defined at:
  9450 ;;		line 65 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;Total ram usage:        7 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 7
  9471 ;; This function calls:
  9472 ;;		_ADC_ISR
  9473 ;;		_CCP1_ISR
  9474 ;;		_CCP2_ISR
  9475 ;;		_INT1_ISR
  9476 ;;		_INT2_ISR
  9477 ;;		_RB4_ISR
  9478 ;;		_RB5_ISR
  9479 ;;		_RB6_ISR
  9480 ;;		_RB7_ISR
  9481 ;;		_TMR0_ISR
  9482 ;;		_TMR1_ISR
  9483 ;;		_TMR2_ISR
  9484 ;;		_TMR3_ISR
  9485 ;; This function is called by:
  9486 ;;		Interrupt level 1
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           	psect	intcodelo
  9491   000018                     __pintcodelo:
  9492                           	callstack 0
  9493   000018                     _InterruptManagerLow:
  9494                           	callstack 13
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;incstack = 0
  9498   000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9499   00001A  CFD8 F021          	movff	status,??_InterruptManagerLow
  9500   00001E  CFE8 F022          	movff	wreg,??_InterruptManagerLow+1
  9501   000022  CFE0 F023          	movff	bsr,??_InterruptManagerLow+2
  9502   000026  CFFA F024          	movff	pclath,??_InterruptManagerLow+3
  9503   00002A  CFFB F025          	movff	pclatu,??_InterruptManagerLow+4
  9504   00002E  CFD9 F026          	movff	fsr2l,??_InterruptManagerLow+5
  9505   000032  CFDA F027          	movff	fsr2h,??_InterruptManagerLow+6
  9506   000036                     
  9507                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:       if((0 == (*((volatile INTCON3_
      +                          t *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  9508   000036  BCF0               	btfsc	240,6,c	;volatile
  9509   000038  EF20  F000         	goto	i1u771_21
  9510   00003C  EF22  F000         	goto	i1u771_20
  9511   000040                     i1u771_21:
  9512   000040  EF2B  F000         	goto	i1l959
  9513   000044                     i1u771_20:
  9514   000044  A0F0               	btfss	240,0,c	;volatile
  9515   000046  EF27  F000         	goto	i1u772_21
  9516   00004A  EF29  F000         	goto	i1u772_20
  9517   00004E                     i1u772_21:
  9518   00004E  EF2B  F000         	goto	i1l959
  9519   000052                     i1u772_20:
  9520   000052                     
  9521                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         INT1_ISR();
  9522   000052  EC4B  F020         	call	_INT1_ISR	;wreg free
  9523   000056                     i1l959:
  9524                           
  9525                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:     if((0 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  9526   000056  BEF0               	btfsc	240,7,c	;volatile
  9527   000058  EF30  F000         	goto	i1u773_21
  9528   00005C  EF32  F000         	goto	i1u773_20
  9529   000060                     i1u773_21:
  9530   000060  EF3B  F000         	goto	i1l961
  9531   000064                     i1u773_20:
  9532   000064  A2F0               	btfss	240,1,c	;volatile
  9533   000066  EF37  F000         	goto	i1u774_21
  9534   00006A  EF39  F000         	goto	i1u774_20
  9535   00006E                     i1u774_21:
  9536   00006E  EF3B  F000         	goto	i1l961
  9537   000072                     i1u774_20:
  9538   000072                     
  9539                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         INT2_ISR();
  9540   000072  EC49  F020         	call	_INT2_ISR	;wreg free
  9541   000076                     i1l961:
  9542                           
  9543                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:      if((0 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  9544   000076  B0F1               	btfsc	241,0,c	;volatile
  9545   000078  EF40  F000         	goto	i1u775_21
  9546   00007C  EF42  F000         	goto	i1u775_20
  9547   000080                     i1u775_21:
  9548   000080  EF58  F000         	goto	i1l963
  9549   000084                     i1u775_20:
  9550   000084  A0F2               	btfss	242,0,c	;volatile
  9551   000086  EF47  F000         	goto	i1u776_21
  9552   00008A  EF49  F000         	goto	i1u776_20
  9553   00008E                     i1u776_21:
  9554   00008E  EF58  F000         	goto	i1l963
  9555   000092                     i1u776_20:
  9556   000092  3881               	swapf	129,w,c	;volatile
  9557   000094  0B0F               	andlw	15
  9558   000096  0B01               	andlw	1
  9559   000098  184D               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  9560   00009A  B4D8               	btfsc	status,2,c
  9561   00009C  EF52  F000         	goto	i1u777_21
  9562   0000A0  EF54  F000         	goto	i1u777_20
  9563   0000A4                     i1u777_21:
  9564   0000A4  EF58  F000         	goto	i1l963
  9565   0000A8                     i1u777_20:
  9566   0000A8                     
  9567                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB4_pin_init_value^=1;
  9568   0000A8  0E01               	movlw	1
  9569   0000AA  1A4D               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  9570   0000AC                     
  9571                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB4_ISR();
  9572   0000AC  EC47  F020         	call	_RB4_ISR	;wreg free
  9573   0000B0                     i1l963:
  9574                           
  9575                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  9576   0000B0  B0F1               	btfsc	241,0,c	;volatile
  9577   0000B2  EF5D  F000         	goto	i1u778_21
  9578   0000B6  EF5F  F000         	goto	i1u778_20
  9579   0000BA                     i1u778_21:
  9580   0000BA  EF76  F000         	goto	i1l965
  9581   0000BE                     i1u778_20:
  9582   0000BE  A0F2               	btfss	242,0,c	;volatile
  9583   0000C0  EF64  F000         	goto	i1u779_21
  9584   0000C4  EF66  F000         	goto	i1u779_20
  9585   0000C8                     i1u779_21:
  9586   0000C8  EF76  F000         	goto	i1l965
  9587   0000CC                     i1u779_20:
  9588   0000CC  3881               	swapf	129,w,c	;volatile
  9589   0000CE  42E8               	rrncf	wreg,f,c
  9590   0000D0  0B07               	andlw	7
  9591   0000D2  0B01               	andlw	1
  9592   0000D4  184C               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
  9593   0000D6  B4D8               	btfsc	status,2,c
  9594   0000D8  EF70  F000         	goto	i1u780_21
  9595   0000DC  EF72  F000         	goto	i1u780_20
  9596   0000E0                     i1u780_21:
  9597   0000E0  EF76  F000         	goto	i1l965
  9598   0000E4                     i1u780_20:
  9599   0000E4                     
  9600                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB5_pin_init_value^=1;
  9601   0000E4  0E01               	movlw	1
  9602   0000E6  1A4C               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
  9603   0000E8                     
  9604                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR();
  9605   0000E8  EC45  F020         	call	_RB5_ISR	;wreg free
  9606   0000EC                     i1l965:
  9607                           
  9608                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
  9609   0000EC  B0F1               	btfsc	241,0,c	;volatile
  9610   0000EE  EF7B  F000         	goto	i1u781_21
  9611   0000F2  EF7D  F000         	goto	i1u781_20
  9612   0000F6                     i1u781_21:
  9613   0000F6  EF94  F000         	goto	i1l967
  9614   0000FA                     i1u781_20:
  9615   0000FA  A0F2               	btfss	242,0,c	;volatile
  9616   0000FC  EF82  F000         	goto	i1u782_21
  9617   000100  EF84  F000         	goto	i1u782_20
  9618   000104                     i1u782_21:
  9619   000104  EF94  F000         	goto	i1l967
  9620   000108                     i1u782_20:
  9621   000108  4481               	rlncf	129,w,c	;volatile
  9622   00010A  46E8               	rlncf	wreg,f,c
  9623   00010C  0B03               	andlw	3
  9624   00010E  0B01               	andlw	1
  9625   000110  184B               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
  9626   000112  B4D8               	btfsc	status,2,c
  9627   000114  EF8E  F000         	goto	i1u783_21
  9628   000118  EF90  F000         	goto	i1u783_20
  9629   00011C                     i1u783_21:
  9630   00011C  EF94  F000         	goto	i1l967
  9631   000120                     i1u783_20:
  9632   000120                     
  9633                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB6_pin_init_value^=1;
  9634   000120  0E01               	movlw	1
  9635   000122  1A4B               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
  9636   000124                     
  9637                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         RB6_ISR();
  9638   000124  EC43  F020         	call	_RB6_ISR	;wreg free
  9639   000128                     i1l967:
  9640                           
  9641                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
  9642   000128  B0F1               	btfsc	241,0,c	;volatile
  9643   00012A  EF99  F000         	goto	i1u784_21
  9644   00012E  EF9B  F000         	goto	i1u784_20
  9645   000132                     i1u784_21:
  9646   000132  EFB0  F000         	goto	i1l969
  9647   000136                     i1u784_20:
  9648   000136  A0F2               	btfss	242,0,c	;volatile
  9649   000138  EFA0  F000         	goto	i1u785_21
  9650   00013C  EFA2  F000         	goto	i1u785_20
  9651   000140                     i1u785_21:
  9652   000140  EFB0  F000         	goto	i1l969
  9653   000144                     i1u785_20:
  9654   000144  4481               	rlncf	129,w,c	;volatile
  9655   000146  0B01               	andlw	1
  9656   000148  184A               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
  9657   00014A  B4D8               	btfsc	status,2,c
  9658   00014C  EFAA  F000         	goto	i1u786_21
  9659   000150  EFAC  F000         	goto	i1u786_20
  9660   000154                     i1u786_21:
  9661   000154  EFB0  F000         	goto	i1l969
  9662   000158                     i1u786_20:
  9663   000158                     
  9664                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         RB7_pin_init_value^=1;
  9665   000158  0E01               	movlw	1
  9666   00015A  1A4A               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
  9667   00015C                     
  9668                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:         RB7_ISR();
  9669   00015C  EC41  F020         	call	_RB7_ISR	;wreg free
  9670   000160                     i1l969:
  9671                           
  9672                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:      if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
  9673   000160  BC9F               	btfsc	159,6,c	;volatile
  9674   000162  EFB5  F000         	goto	i1u787_21
  9675   000166  EFB7  F000         	goto	i1u787_20
  9676   00016A                     i1u787_21:
  9677   00016A  EFC0  F000         	goto	i1l971
  9678   00016E                     i1u787_20:
  9679   00016E  AC9E               	btfss	158,6,c	;volatile
  9680   000170  EFBC  F000         	goto	i1u788_21
  9681   000174  EFBE  F000         	goto	i1u788_20
  9682   000178                     i1u788_21:
  9683   000178  EFC0  F000         	goto	i1l971
  9684   00017C                     i1u788_20:
  9685   00017C                     
  9686                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         ADC_ISR();
  9687   00017C  EC4D  F020         	call	_ADC_ISR	;wreg free
  9688   000180                     i1l971:
  9689                           
  9690                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 98:     if((0 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
  9691   000180  B4F1               	btfsc	241,2,c	;volatile
  9692   000182  EFC5  F000         	goto	i1u789_21
  9693   000186  EFC7  F000         	goto	i1u789_20
  9694   00018A                     i1u789_21:
  9695   00018A  EFD0  F000         	goto	i1l973
  9696   00018E                     i1u789_20:
  9697   00018E  A4F2               	btfss	242,2,c	;volatile
  9698   000190  EFCC  F000         	goto	i1u790_21
  9699   000194  EFCE  F000         	goto	i1u790_20
  9700   000198                     i1u790_21:
  9701   000198  EFD0  F000         	goto	i1l973
  9702   00019C                     i1u790_20:
  9703   00019C                     
  9704                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:         TMR0_ISR();
  9705   00019C  EC24  F020         	call	_TMR0_ISR	;wreg free
  9706   0001A0                     i1l973:
  9707                           
  9708                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
  9709   0001A0  B09F               	btfsc	159,0,c	;volatile
  9710   0001A2  EFD5  F000         	goto	i1u791_21
  9711   0001A6  EFD7  F000         	goto	i1u791_20
  9712   0001AA                     i1u791_21:
  9713   0001AA  EFE0  F000         	goto	i1l975
  9714   0001AE                     i1u791_20:
  9715   0001AE  A09E               	btfss	158,0,c	;volatile
  9716   0001B0  EFDC  F000         	goto	i1u792_21
  9717   0001B4  EFDE  F000         	goto	i1u792_20
  9718   0001B8                     i1u792_21:
  9719   0001B8  EFE0  F000         	goto	i1l975
  9720   0001BC                     i1u792_20:
  9721   0001BC                     
  9722                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:         TMR1_ISR();
  9723   0001BC  EC1E  F020         	call	_TMR1_ISR	;wreg free
  9724   0001C0                     i1l975:
  9725                           
  9726                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:       if((0 == (*((volatile IPR1_t 
      +                          *)(0xF9F))).TMR2IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR2IF)){
  9727   0001C0  B29F               	btfsc	159,1,c	;volatile
  9728   0001C2  EFE5  F000         	goto	i1u793_21
  9729   0001C6  EFE7  F000         	goto	i1u793_20
  9730   0001CA                     i1u793_21:
  9731   0001CA  EFF0  F000         	goto	i1l977
  9732   0001CE                     i1u793_20:
  9733   0001CE  A29E               	btfss	158,1,c	;volatile
  9734   0001D0  EFEC  F000         	goto	i1u794_21
  9735   0001D4  EFEE  F000         	goto	i1u794_20
  9736   0001D8                     i1u794_21:
  9737   0001D8  EFF0  F000         	goto	i1l977
  9738   0001DC                     i1u794_20:
  9739   0001DC                     
  9740                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         TMR2_ISR();
  9741   0001DC  EC3B  F020         	call	_TMR2_ISR	;wreg free
  9742   0001E0                     i1l977:
  9743                           
  9744                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 110:      if((0 == (*((volatile IPR2_t *
      +                          )(0xFA2))).TMR3IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).TMR3IF)){
  9745   0001E0  B2A2               	btfsc	162,1,c	;volatile
  9746   0001E2  EFF5  F000         	goto	i1u795_21
  9747   0001E6  EFF7  F000         	goto	i1u795_20
  9748   0001EA                     i1u795_21:
  9749   0001EA  EF00  F001         	goto	i1l979
  9750   0001EE                     i1u795_20:
  9751   0001EE  A2A1               	btfss	161,1,c	;volatile
  9752   0001F0  EFFC  F000         	goto	i1u796_21
  9753   0001F4  EFFE  F000         	goto	i1u796_20
  9754   0001F8                     i1u796_21:
  9755   0001F8  EF00  F001         	goto	i1l979
  9756   0001FC                     i1u796_20:
  9757   0001FC                     
  9758                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:         TMR3_ISR();
  9759   0001FC  EC14  F01F         	call	_TMR3_ISR	;wreg free
  9760   000200                     i1l979:
  9761                           
  9762                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:       if((0 == (*((volatile IPR1_t 
      +                          *)(0xF9F))).CCP1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).CCP1IF)){
  9763   000200  B49F               	btfsc	159,2,c	;volatile
  9764   000202  EF05  F001         	goto	i1u797_21
  9765   000206  EF07  F001         	goto	i1u797_20
  9766   00020A                     i1u797_21:
  9767   00020A  EF10  F001         	goto	i1l981
  9768   00020E                     i1u797_20:
  9769   00020E  A49E               	btfss	158,2,c	;volatile
  9770   000210  EF0C  F001         	goto	i1u798_21
  9771   000214  EF0E  F001         	goto	i1u798_20
  9772   000218                     i1u798_21:
  9773   000218  EF10  F001         	goto	i1l981
  9774   00021C                     i1u798_20:
  9775   00021C                     
  9776                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 115:         CCP1_ISR();
  9777   00021C  EC61  F01F         	call	_CCP1_ISR	;wreg free
  9778   000220                     i1l981:
  9779                           
  9780                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:       if((0 == (*((volatile IPR2_t 
      +                          *)(0xFA2))).CCP2IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).CCP2IF)){
  9781   000220  B0A2               	btfsc	162,0,c	;volatile
  9782   000222  EF15  F001         	goto	i1u799_21
  9783   000226  EF17  F001         	goto	i1u799_20
  9784   00022A                     i1u799_21:
  9785   00022A  EF20  F001         	goto	i1l984
  9786   00022E                     i1u799_20:
  9787   00022E  A0A1               	btfss	161,0,c	;volatile
  9788   000230  EF1C  F001         	goto	i1u800_21
  9789   000234  EF1E  F001         	goto	i1u800_20
  9790   000238                     i1u800_21:
  9791   000238  EF20  F001         	goto	i1l984
  9792   00023C                     i1u800_20:
  9793   00023C                     
  9794                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         CCP2_ISR();
  9795   00023C  EC4A  F01F         	call	_CCP2_ISR	;wreg free
  9796   000240                     i1l984:
  9797   000240  C027  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
  9798   000244  C026  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
  9799   000248  C025  FFFB         	movff	??_InterruptManagerLow+4,pclatu
  9800   00024C  C024  FFFA         	movff	??_InterruptManagerLow+3,pclath
  9801   000250  C023  FFE0         	movff	??_InterruptManagerLow+2,bsr
  9802   000254  C022  FFE8         	movff	??_InterruptManagerLow+1,wreg
  9803   000258  C021  FFD8         	movff	??_InterruptManagerLow,status
  9804   00025C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9805   00025E  0010               	retfie	
  9806   000260                     __end_of_InterruptManagerLow:
  9807                           	callstack 0
  9808                           
  9809 ;; *************** function _TMR3_ISR *****************
  9810 ;; Defined at:
  9811 ;;		line 139 in file "MCAL_Layer/Timer3/hal_timer3.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      void 
  9818 ;; Registers used:
  9819 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;Total ram usage:        0 bytes
  9830 ;; Hardware stack levels used: 1
  9831 ;; Hardware stack levels required when called: 5
  9832 ;; This function calls:
  9833 ;;		NULL
  9834 ;;		_TMR3_Callback_ISR
  9835 ;; This function is called by:
  9836 ;;		_InterruptManagerLow
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text54
  9841   003E28                     __ptext54:
  9842                           	callstack 0
  9843   003E28                     _TMR3_ISR:
  9844                           	callstack 14
  9845   003E28                     
  9846                           ;MCAL_Layer/Timer3/hal_timer3.c: 141:     (*((volatile uint8 *)(0xFB3))) = (timer3_prelo
      +                          ad)>>8;
  9847   003E28  5036               	movf	(_timer3_preload+1)^0,w,c
  9848   003E2A  6EB3               	movwf	179,c	;volatile
  9849   003E2C                     
  9850                           ;MCAL_Layer/Timer3/hal_timer3.c: 142:     (*((volatile uint8 *)(0xFB2))) = (uint8)(timer
      +                          3_preload);
  9851   003E2C  C035  FFB2         	movff	_timer3_preload,4018	;volatile
  9852   003E30                     
  9853                           ;MCAL_Layer/Timer3/hal_timer3.c: 143:     ((*((volatile PIR2_t *)(0xFA1))).TMR3IF=0);
  9854   003E30  92A1               	bcf	161,1,c	;volatile
  9855   003E32                     
  9856                           ;MCAL_Layer/Timer3/hal_timer3.c: 144:       if(TMR3_InterruptHandler){
  9857   003E32  5037               	movf	_TMR3_InterruptHandler^0,w,c
  9858   003E34  1038               	iorwf	(_TMR3_InterruptHandler+1)^0,w,c
  9859   003E36  B4D8               	btfsc	status,2,c
  9860   003E38  EF20  F01F         	goto	i1u198_21
  9861   003E3C  EF22  F01F         	goto	i1u198_20
  9862   003E40                     i1u198_21:
  9863   003E40  EF2E  F01F         	goto	i1l1173
  9864   003E44                     i1u198_20:
  9865   003E44                     
  9866                           ;MCAL_Layer/Timer3/hal_timer3.c: 145:        TMR3_InterruptHandler();
  9867   003E44  D802               	call	i1u199_28
  9868   003E46  EF2E  F01F         	goto	i1u199_29
  9869   003E4A                     i1u199_28:
  9870   003E4A  0005               	push	
  9871   003E4C  6EFA               	movwf	pclath,c
  9872   003E4E  5037               	movf	_TMR3_InterruptHandler^0,w,c
  9873   003E50  6EFD               	movwf	tosl,c
  9874   003E52  5038               	movf	(_TMR3_InterruptHandler+1)^0,w,c
  9875   003E54  6EFE               	movwf	tosh,c
  9876   003E56  6AFF               	clrf	tosu,c
  9877   003E58  50FA               	movf	pclath,w,c
  9878   003E5A  0012               	return		;indir
  9879   003E5C                     i1u199_29:
  9880   003E5C                     i1l1173:
  9881   003E5C  0012               	return		;funcret
  9882   003E5E                     __end_of_TMR3_ISR:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _TMR3_Callback_ISR *****************
  9886 ;; Defined at:
  9887 ;;		line 81 in file "HeartRate_Measure.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;		None
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;		None
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      void 
  9894 ;; Registers used:
  9895 ;;		status,2, status,0
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;Total ram usage:        0 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; Hardware stack levels required when called: 4
  9908 ;; This function calls:
  9909 ;;		Nothing
  9910 ;; This function is called by:
  9911 ;;		_Timer3_Timer_Init
  9912 ;;		_TMR3_ISR
  9913 ;;		i2_TMR3_ISR
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text55
  9918   00402E                     __ptext55:
  9919                           	callstack 0
  9920   00402E                     _TMR3_Callback_ISR:
  9921                           	callstack 0
  9922                           
  9923                           ;Skip over the trampoline to the duplicate function for level 2
  9924   00402E  A258               	btfss	int$flags,1,c
  9925   004030  EF1C  F020         	goto	_TMR3_Callback_ISR$intlevel1
  9926   004034  EF4F  F020         	goto	i2_TMR3_Callback_ISR
  9927   004038                     _TMR3_Callback_ISR$intlevel1:
  9928                           	callstack 14
  9929   004038                     
  9930                           ;HeartRate_Measure.c: 83:     ovf_cnt++;
  9931   004038  2A48               	incf	_ovf_cnt^0,f,c	;volatile
  9932   00403A  0012               	return		;funcret
  9933   00403C                     __end_of_TMR3_Callback_ISR:
  9934                           	callstack 0
  9935                           
  9936 ;; *************** function _TMR2_ISR *****************
  9937 ;; Defined at:
  9938 ;;		line 111 in file "MCAL_Layer/Timer2/hal_timer2.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;		None
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		None
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used: 1
  9958 ;; Hardware stack levels required when called: 4
  9959 ;; This function calls:
  9960 ;;		Nothing
  9961 ;; This function is called by:
  9962 ;;		_InterruptManagerLow
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text56
  9967   004076                     __ptext56:
  9968                           	callstack 0
  9969   004076                     _TMR2_ISR:
  9970                           	callstack 15
  9971   004076                     
  9972                           ;MCAL_Layer/Timer2/hal_timer2.c: 112:     (*((volatile uint8 *)(0xFCC))) = timer2_preloa
      +                          d;
  9973   004076  C049  FFCC         	movff	_timer2_preload,4044	;volatile
  9974   00407A  0012               	return		;funcret
  9975   00407C                     __end_of_TMR2_ISR:
  9976                           	callstack 0
  9977                           
  9978 ;; *************** function _TMR1_ISR *****************
  9979 ;; Defined at:
  9980 ;;		line 114 in file "MCAL_Layer/Timer1/hal_timer1.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;		None
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        0 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; Hardware stack levels required when called: 4
 10001 ;; This function calls:
 10002 ;;		Nothing
 10003 ;; This function is called by:
 10004 ;;		_InterruptManagerLow
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text57
 10009   00403C                     __ptext57:
 10010                           	callstack 0
 10011   00403C                     _TMR1_ISR:
 10012                           	callstack 15
 10013   00403C                     
 10014                           ;MCAL_Layer/Timer1/hal_timer1.c: 115:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
 10015   00403C  503A               	movf	(_timer1_preload+1)^0,w,c
 10016   00403E  6ECF               	movwf	207,c	;volatile
 10017   004040                     
 10018                           ;MCAL_Layer/Timer1/hal_timer1.c: 116:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
 10019   004040  C039  FFCE         	movff	_timer1_preload,4046	;volatile
 10020   004044                     
 10021                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
 10022   004044  909E               	bcf	158,0,c	;volatile
 10023   004046  0012               	return		;funcret
 10024   004048                     __end_of_TMR1_ISR:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function _TMR0_ISR *****************
 10028 ;; Defined at:
 10029 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 4
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_InterruptManagerLow
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text58
 10058   004048                     __ptext58:
 10059                           	callstack 0
 10060   004048                     _TMR0_ISR:
 10061                           	callstack 15
 10062   004048                     
 10063                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
 10064   004048  503C               	movf	(_timer0_preload+1)^0,w,c
 10065   00404A  6ED7               	movwf	215,c	;volatile
 10066   00404C                     
 10067                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
 10068   00404C  C03B  FFD6         	movff	_timer0_preload,4054	;volatile
 10069   004050                     
 10070                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
 10071   004050  94F2               	bcf	242,2,c	;volatile
 10072   004052  0012               	return		;funcret
 10073   004054                     __end_of_TMR0_ISR:
 10074                           	callstack 0
 10075                           
 10076 ;; *************** function _RB7_ISR *****************
 10077 ;; Defined at:
 10078 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;		None
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		None
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;Total ram usage:        0 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; Hardware stack levels required when called: 4
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_InterruptManagerLow
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text59
 10107   004082                     __ptext59:
 10108                           	callstack 0
 10109   004082                     _RB7_ISR:
 10110                           	callstack 15
 10111   004082                     
 10112                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10113   004082  90F2               	bcf	242,0,c	;volatile
 10114   004084  0012               	return		;funcret
 10115   004086                     __end_of_RB7_ISR:
 10116                           	callstack 0
 10117                           
 10118 ;; *************** function _RB6_ISR *****************
 10119 ;; Defined at:
 10120 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		None
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used: 1
 10140 ;; Hardware stack levels required when called: 4
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_InterruptManagerLow
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text60
 10149   004086                     __ptext60:
 10150                           	callstack 0
 10151   004086                     _RB6_ISR:
 10152                           	callstack 15
 10153   004086                     
 10154                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10155   004086  90F2               	bcf	242,0,c	;volatile
 10156   004088  0012               	return		;funcret
 10157   00408A                     __end_of_RB6_ISR:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _RB5_ISR *****************
 10161 ;; Defined at:
 10162 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		None
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 4
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_InterruptManagerLow
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text61
 10191   00408A                     __ptext61:
 10192                           	callstack 0
 10193   00408A                     _RB5_ISR:
 10194                           	callstack 15
 10195   00408A                     
 10196                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10197   00408A  90F2               	bcf	242,0,c	;volatile
 10198   00408C  0012               	return		;funcret
 10199   00408E                     __end_of_RB5_ISR:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function _RB4_ISR *****************
 10203 ;; Defined at:
 10204 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;		None
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;		None
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		None
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;Total ram usage:        0 bytes
 10223 ;; Hardware stack levels used: 1
 10224 ;; Hardware stack levels required when called: 4
 10225 ;; This function calls:
 10226 ;;		Nothing
 10227 ;; This function is called by:
 10228 ;;		_InterruptManagerLow
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text62
 10233   00408E                     __ptext62:
 10234                           	callstack 0
 10235   00408E                     _RB4_ISR:
 10236                           	callstack 15
 10237   00408E                     
 10238                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10239   00408E  90F2               	bcf	242,0,c	;volatile
 10240   004090  0012               	return		;funcret
 10241   004092                     __end_of_RB4_ISR:
 10242                           	callstack 0
 10243                           
 10244 ;; *************** function _INT2_ISR *****************
 10245 ;; Defined at:
 10246 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;		None
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		None
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used: 1
 10266 ;; Hardware stack levels required when called: 4
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_InterruptManagerLow
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text63
 10275   004092                     __ptext63:
 10276                           	callstack 0
 10277   004092                     _INT2_ISR:
 10278                           	callstack 15
 10279   004092                     
 10280                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
 10281   004092  92F0               	bcf	240,1,c	;volatile
 10282   004094  0012               	return		;funcret
 10283   004096                     __end_of_INT2_ISR:
 10284                           	callstack 0
 10285                           
 10286 ;; *************** function _INT1_ISR *****************
 10287 ;; Defined at:
 10288 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;		None
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		None
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;Total ram usage:        0 bytes
 10307 ;; Hardware stack levels used: 1
 10308 ;; Hardware stack levels required when called: 4
 10309 ;; This function calls:
 10310 ;;		Nothing
 10311 ;; This function is called by:
 10312 ;;		_InterruptManagerLow
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text64
 10317   004096                     __ptext64:
 10318                           	callstack 0
 10319   004096                     _INT1_ISR:
 10320                           	callstack 15
 10321   004096                     
 10322                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
 10323   004096  90F0               	bcf	240,0,c	;volatile
 10324   004098  0012               	return		;funcret
 10325   00409A                     __end_of_INT1_ISR:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function _CCP2_ISR *****************
 10329 ;; Defined at:
 10330 ;;		line 606 in file "MCAL_Layer/CCP/hal_ccp.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;		None
 10333 ;; Auto vars:     Size  Location     Type
 10334 ;;		None
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  1    wreg      void 
 10337 ;; Registers used:
 10338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;Total ram usage:        0 bytes
 10349 ;; Hardware stack levels used: 1
 10350 ;; Hardware stack levels required when called: 6
 10351 ;; This function calls:
 10352 ;;		NULL
 10353 ;;		_CCP1_Callback_ISR
 10354 ;; This function is called by:
 10355 ;;		_InterruptManagerLow
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text65
 10360   003E94                     __ptext65:
 10361                           	callstack 0
 10362   003E94                     _CCP2_ISR:
 10363                           	callstack 13
 10364   003E94                     
 10365                           ;MCAL_Layer/CCP/hal_ccp.c: 609:     ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
 10366   003E94  90A1               	bcf	161,0,c	;volatile
 10367   003E96                     
 10368                           ;MCAL_Layer/CCP/hal_ccp.c: 610:       if(CCP2_InterruptHandler){
 10369   003E96  5031               	movf	_CCP2_InterruptHandler^0,w,c
 10370   003E98  1032               	iorwf	(_CCP2_InterruptHandler+1)^0,w,c
 10371   003E9A  B4D8               	btfsc	status,2,c
 10372   003E9C  EF52  F01F         	goto	i1u649_21
 10373   003EA0  EF54  F01F         	goto	i1u649_20
 10374   003EA4                     i1u649_21:
 10375   003EA4  EF60  F01F         	goto	i1l1431
 10376   003EA8                     i1u649_20:
 10377   003EA8                     
 10378                           ;MCAL_Layer/CCP/hal_ccp.c: 611:        CCP2_InterruptHandler();
 10379   003EA8  D802               	call	i1u650_28
 10380   003EAA  EF60  F01F         	goto	i1u650_29
 10381   003EAE                     i1u650_28:
 10382   003EAE  0005               	push	
 10383   003EB0  6EFA               	movwf	pclath,c
 10384   003EB2  5031               	movf	_CCP2_InterruptHandler^0,w,c
 10385   003EB4  6EFD               	movwf	tosl,c
 10386   003EB6  5032               	movf	(_CCP2_InterruptHandler+1)^0,w,c
 10387   003EB8  6EFE               	movwf	tosh,c
 10388   003EBA  6AFF               	clrf	tosu,c
 10389   003EBC  50FA               	movf	pclath,w,c
 10390   003EBE  0012               	return		;indir
 10391   003EC0                     i1u650_29:
 10392   003EC0                     i1l1431:
 10393   003EC0  0012               	return		;funcret
 10394   003EC2                     __end_of_CCP2_ISR:
 10395                           	callstack 0
 10396                           
 10397 ;; *************** function _CCP1_ISR *****************
 10398 ;; Defined at:
 10399 ;;		line 596 in file "MCAL_Layer/CCP/hal_ccp.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; Hardware stack levels required when called: 6
 10420 ;; This function calls:
 10421 ;;		NULL
 10422 ;;		_CCP1_Callback_ISR
 10423 ;; This function is called by:
 10424 ;;		_InterruptManagerLow
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text66
 10429   003EC2                     __ptext66:
 10430                           	callstack 0
 10431   003EC2                     _CCP1_ISR:
 10432                           	callstack 13
 10433   003EC2                     
 10434                           ;MCAL_Layer/CCP/hal_ccp.c: 599:     ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
 10435   003EC2  949E               	bcf	158,2,c	;volatile
 10436   003EC4                     
 10437                           ;MCAL_Layer/CCP/hal_ccp.c: 600:       if(CCP1_InterruptHandler){
 10438   003EC4  5033               	movf	_CCP1_InterruptHandler^0,w,c
 10439   003EC6  1034               	iorwf	(_CCP1_InterruptHandler+1)^0,w,c
 10440   003EC8  B4D8               	btfsc	status,2,c
 10441   003ECA  EF69  F01F         	goto	i1u647_21
 10442   003ECE  EF6B  F01F         	goto	i1u647_20
 10443   003ED2                     i1u647_21:
 10444   003ED2  EF77  F01F         	goto	i1l1426
 10445   003ED6                     i1u647_20:
 10446   003ED6                     
 10447                           ;MCAL_Layer/CCP/hal_ccp.c: 601:        CCP1_InterruptHandler();
 10448   003ED6  D802               	call	i1u648_28
 10449   003ED8  EF77  F01F         	goto	i1u648_29
 10450   003EDC                     i1u648_28:
 10451   003EDC  0005               	push	
 10452   003EDE  6EFA               	movwf	pclath,c
 10453   003EE0  5033               	movf	_CCP1_InterruptHandler^0,w,c
 10454   003EE2  6EFD               	movwf	tosl,c
 10455   003EE4  5034               	movf	(_CCP1_InterruptHandler+1)^0,w,c
 10456   003EE6  6EFE               	movwf	tosh,c
 10457   003EE8  6AFF               	clrf	tosu,c
 10458   003EEA  50FA               	movf	pclath,w,c
 10459   003EEC  0012               	return		;indir
 10460   003EEE                     i1u648_29:
 10461   003EEE                     i1l1426:
 10462   003EEE  0012               	return		;funcret
 10463   003EF0                     __end_of_CCP1_ISR:
 10464                           	callstack 0
 10465                           
 10466 ;; *************** function _CCP1_Callback_ISR *****************
 10467 ;; Defined at:
 10468 ;;		line 64 in file "HeartRate_Measure.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;		None
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;		None
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      void 
 10475 ;; Registers used:
 10476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;Total ram usage:        4 bytes
 10487 ;; Hardware stack levels used: 1
 10488 ;; Hardware stack levels required when called: 5
 10489 ;; This function calls:
 10490 ;;		_CCP_Capture_Mode_Read_Value
 10491 ;;		_Timer3_Write_Value
 10492 ;; This function is called by:
 10493 ;;		_CCP1_Capture_Mode_Init
 10494 ;;		_CCP1_ISR
 10495 ;;		_CCP2_ISR
 10496 ;;		i2_CCP1_ISR
 10497 ;;		i2_CCP2_ISR
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text67
 10502   002F46                     __ptext67:
 10503                           	callstack 0
 10504   002F46                     _CCP1_Callback_ISR:
 10505                           	callstack 0
 10506                           
 10507                           ;Skip over the trampoline to the duplicate function for level 2
 10508   002F46  A258               	btfss	int$flags,1,c
 10509   002F48  EFA8  F017         	goto	_CCP1_Callback_ISR$intlevel1
 10510   002F4C  EFAF  F018         	goto	i2_CCP1_Callback_ISR
 10511   002F50                     _CCP1_Callback_ISR$intlevel1:
 10512                           	callstack 13
 10513   002F50                     
 10514                           ;HeartRate_Measure.c: 66:     if(cap_flag == 0){
 10515   002F50  0100               	movlb	0	; () banked
 10516   002F52  5199               	movf	_cap_flag& (0+255),w,b	;volatile
 10517   002F54  A4D8               	btfss	status,2,c
 10518   002F56  EFAF  F017         	goto	i1u579_21
 10519   002F5A  EFB1  F017         	goto	i1u579_20
 10520   002F5E                     i1u579_21:
 10521   002F5E  EFC1  F017         	goto	i1l6665
 10522   002F62                     i1u579_20:
 10523   002F62                     
 10524                           ; BSR set to: 0
 10525                           ;HeartRate_Measure.c: 67:     cap_flag = 1;
 10526   002F62  0E01               	movlw	1
 10527   002F64  6F99               	movwf	_cap_flag& (0+255),b	;volatile
 10528   002F66                     
 10529                           ; BSR set to: 0
 10530                           ;HeartRate_Measure.c: 68:     Timer3_Write_Value(&timer3_obj,0);
 10531   002F66  0EA7               	movlw	low _timer3_obj
 10532   002F68  6E13               	movwf	Timer3_Write_Value@_timer^0,c
 10533   002F6A  0E00               	movlw	high _timer3_obj
 10534   002F6C  6E14               	movwf	(Timer3_Write_Value@_timer+1)^0,c
 10535   002F6E  0E00               	movlw	0
 10536   002F70  6E16               	movwf	(Timer3_Write_Value@_value+1)^0,c
 10537   002F72  0E00               	movlw	0
 10538   002F74  6E15               	movwf	Timer3_Write_Value@_value^0,c
 10539   002F76  ECCC  F01F         	call	_Timer3_Write_Value	;wreg free
 10540   002F7A                     i1l6663:
 10541                           
 10542                           ;HeartRate_Measure.c: 69:     ovf_cnt = 0;
 10543   002F7A  0E00               	movlw	0
 10544   002F7C  6E48               	movwf	_ovf_cnt^0,c	;volatile
 10545                           
 10546                           ;HeartRate_Measure.c: 70:     }
 10547   002F7E  EFFD  F017         	goto	i1l1499
 10548   002F82                     i1l6665:
 10549                           
 10550                           ; BSR set to: 0
 10551   002F82  0599               	decf	_cap_flag& (0+255),w,b	;volatile
 10552   002F84  A4D8               	btfss	status,2,c
 10553   002F86  EFC7  F017         	goto	i1u580_21
 10554   002F8A  EFC9  F017         	goto	i1u580_20
 10555   002F8E                     i1u580_21:
 10556   002F8E  EFFD  F017         	goto	i1l1499
 10557   002F92                     i1u580_20:
 10558   002F92                     
 10559                           ; BSR set to: 0
 10560                           ;HeartRate_Measure.c: 72:     {;HeartRate_Measure.c: 73:      Cap=0;
 10561   002F92  0E00               	movlw	0
 10562   002F94  6FAD               	movwf	_Cap& (0+255),b	;volatile
 10563   002F96  0E00               	movlw	0
 10564   002F98  6FAE               	movwf	(_Cap+1)& (0+255),b	;volatile
 10565   002F9A  0E00               	movlw	0
 10566   002F9C  6FAF               	movwf	(_Cap+2)& (0+255),b	;volatile
 10567   002F9E  0E00               	movlw	0
 10568   002FA0  6FB0               	movwf	(_Cap+3)& (0+255),b	;volatile
 10569                           
 10570                           ;HeartRate_Measure.c: 74:      cap_flag = 2 ;
 10571   002FA2  0E02               	movlw	2
 10572   002FA4  6F99               	movwf	_cap_flag& (0+255),b	;volatile
 10573   002FA6                     
 10574                           ; BSR set to: 0
 10575                           ;HeartRate_Measure.c: 75:      CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap);
 10576   002FA6  0E9A               	movlw	low _ccp1_obj
 10577   002FA8  6E13               	movwf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 10578   002FAA  0E00               	movlw	high _ccp1_obj
 10579   002FAC  6E14               	movwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 10580   002FAE  0EAD               	movlw	low _Cap
 10581   002FB0  6E15               	movwf	CCP_Capture_Mode_Read_Value@capture_value^0,c
 10582   002FB2  0E00               	movlw	high _Cap
 10583   002FB4  6E16               	movwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 10584   002FB6  EC58  F019         	call	_CCP_Capture_Mode_Read_Value	;wreg free
 10585   002FBA                     
 10586                           ;HeartRate_Measure.c: 76:      Timer3_Write_Value(&timer3_obj,0);
 10587   002FBA  0EA7               	movlw	low _timer3_obj
 10588   002FBC  6E13               	movwf	Timer3_Write_Value@_timer^0,c
 10589   002FBE  0E00               	movlw	high _timer3_obj
 10590   002FC0  6E14               	movwf	(Timer3_Write_Value@_timer+1)^0,c
 10591   002FC2  0E00               	movlw	0
 10592   002FC4  6E16               	movwf	(Timer3_Write_Value@_value+1)^0,c
 10593   002FC6  0E00               	movlw	0
 10594   002FC8  6E15               	movwf	Timer3_Write_Value@_value^0,c
 10595   002FCA  ECCC  F01F         	call	_Timer3_Write_Value	;wreg free
 10596   002FCE                     
 10597                           ;HeartRate_Measure.c: 77:      Cap+= (ovf_cnt*65536);
 10598   002FCE  C048  F01D         	movff	_ovf_cnt,??_CCP1_Callback_ISR	;volatile
 10599   002FD2  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 10600   002FD4  6A1F               	clrf	(??_CCP1_Callback_ISR+2)^0,c
 10601   002FD6  6A20               	clrf	(??_CCP1_Callback_ISR+3)^0,c
 10602   002FD8  C01E  F020         	movff	??_CCP1_Callback_ISR+1,??_CCP1_Callback_ISR+3
 10603   002FDC  C01D  F01F         	movff	??_CCP1_Callback_ISR,??_CCP1_Callback_ISR+2
 10604   002FE0  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 10605   002FE2  6A1D               	clrf	??_CCP1_Callback_ISR^0,c
 10606   002FE4  501D               	movf	??_CCP1_Callback_ISR^0,w,c
 10607   002FE6  0100               	movlb	0	; () banked
 10608   002FE8  27AD               	addwf	_Cap& (0+255),f,b	;volatile
 10609   002FEA  501E               	movf	(??_CCP1_Callback_ISR+1)^0,w,c
 10610   002FEC  23AE               	addwfc	(_Cap+1)& (0+255),f,b	;volatile
 10611   002FEE  501F               	movf	(??_CCP1_Callback_ISR+2)^0,w,c
 10612   002FF0  23AF               	addwfc	(_Cap+2)& (0+255),f,b	;volatile
 10613   002FF2  5020               	movf	(??_CCP1_Callback_ISR+3)^0,w,c
 10614   002FF4  23B0               	addwfc	(_Cap+3)& (0+255),f,b	;volatile
 10615   002FF6  EFBD  F017         	goto	i1l6663
 10616   002FFA                     i1l1499:
 10617   002FFA  0012               	return		;funcret
 10618   002FFC                     __end_of_CCP1_Callback_ISR:
 10619                           	callstack 0
 10620                           
 10621 ;; *************** function _Timer3_Write_Value *****************
 10622 ;; Defined at:
 10623 ;;		line 80 in file "MCAL_Layer/Timer3/hal_timer3.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  _timer          2   18[COMRAM] PTR const struct .
 10626 ;;		 -> timer3_obj(6), 
 10627 ;;  _value          2   20[COMRAM] unsigned int 
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;  ret             1    0        unsigned char 
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      unsigned char 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2, status,0
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;Total ram usage:        4 bytes
 10644 ;; Hardware stack levels used: 1
 10645 ;; Hardware stack levels required when called: 4
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_CCP1_Callback_ISR
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text68
 10654   003F98                     __ptext68:
 10655                           	callstack 0
 10656   003F98                     _Timer3_Write_Value:
 10657                           	callstack 13
 10658   003F98                     
 10659                           ;MCAL_Layer/Timer3/hal_timer3.c: 83:     if(_timer==((void*)0)){
 10660   003F98  5013               	movf	Timer3_Write_Value@_timer^0,w,c
 10661   003F9A  1014               	iorwf	(Timer3_Write_Value@_timer+1)^0,w,c
 10662   003F9C  A4D8               	btfss	status,2,c
 10663   003F9E  EFD3  F01F         	goto	i1u557_21
 10664   003FA2  EFD5  F01F         	goto	i1u557_20
 10665   003FA6                     i1u557_21:
 10666   003FA6  EFD7  F01F         	goto	i1l6435
 10667   003FAA                     i1u557_20:
 10668   003FAA                     
 10669                           ;MCAL_Layer/Timer3/hal_timer3.c: 85:     }
 10670   003FAA  EFDB  F01F         	goto	i1l1150
 10671   003FAE                     i1l6435:
 10672                           
 10673                           ;MCAL_Layer/Timer3/hal_timer3.c: 87:     {;MCAL_Layer/Timer3/hal_timer3.c: 88:         (
      +                          *((volatile uint8 *)(0xFB3))) = (_value)>>8;
 10674   003FAE  5016               	movf	(Timer3_Write_Value@_value+1)^0,w,c
 10675   003FB0  6EB3               	movwf	179,c	;volatile
 10676   003FB2                     
 10677                           ;MCAL_Layer/Timer3/hal_timer3.c: 89:         (*((volatile uint8 *)(0xFB2))) = (uint8)(_v
      +                          alue);
 10678   003FB2  C015  FFB2         	movff	Timer3_Write_Value@_value,4018	;volatile
 10679   003FB6                     i1l1150:
 10680   003FB6  0012               	return		;funcret
 10681   003FB8                     __end_of_Timer3_Write_Value:
 10682                           	callstack 0
 10683                           
 10684 ;; *************** function _CCP_Capture_Mode_Read_Value *****************
 10685 ;; Defined at:
 10686 ;;		line 142 in file "MCAL_Layer/CCP/hal_ccp.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  _ccp_obj        2   18[COMRAM] PTR const struct .
 10689 ;;		 -> ccp1_obj(13), 
 10690 ;;  capture_valu    2   20[COMRAM] PTR unsigned long 
 10691 ;;		 -> Cap(4), 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  capture_temp    2   26[COMRAM] struct .
 10694 ;;  ret             1    0        unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      unsigned char 
 10697 ;; Registers used:
 10698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;Total ram usage:       10 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 4
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_CCP1_Callback_ISR
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text69
 10719   0032B0                     __ptext69:
 10720                           	callstack 0
 10721   0032B0                     _CCP_Capture_Mode_Read_Value:
 10722                           	callstack 13
 10723   0032B0                     
 10724                           ;MCAL_Layer/CCP/hal_ccp.c: 145:     CCP_REG_T capture_temp_value = {0};
 10725   0032B0  C08C  F01B         	movff	CCP_Capture_Mode_Read_Value@F3461,CCP_Capture_Mode_Read_Value@capture_temp_value
 10726   0032B4  C08D  F01C         	movff	CCP_Capture_Mode_Read_Value@F3461+1,CCP_Capture_Mode_Read_Value@capture_temp_valu
      +                          e+1
 10727   0032B8                     
 10728                           ;MCAL_Layer/CCP/hal_ccp.c: 146:     if( (capture_value==((void*)0)) || (_ccp_obj == ((vo
      +                          id*)0)) )
 10729   0032B8  5015               	movf	CCP_Capture_Mode_Read_Value@capture_value^0,w,c
 10730   0032BA  1016               	iorwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,w,c
 10731   0032BC  B4D8               	btfsc	status,2,c
 10732   0032BE  EF63  F019         	goto	i1u558_21
 10733   0032C2  EF65  F019         	goto	i1u558_20
 10734   0032C6                     i1u558_21:
 10735   0032C6  EF6E  F019         	goto	i1l6487
 10736   0032CA                     i1u558_20:
 10737   0032CA  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 10738   0032CC  1014               	iorwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 10739   0032CE  A4D8               	btfss	status,2,c
 10740   0032D0  EF6C  F019         	goto	i1u559_21
 10741   0032D4  EF6E  F019         	goto	i1u559_20
 10742   0032D8                     i1u559_21:
 10743   0032D8  EF70  F019         	goto	i1l6489
 10744   0032DC                     i1u559_20:
 10745   0032DC                     i1l6487:
 10746                           
 10747                           ;MCAL_Layer/CCP/hal_ccp.c: 149:     }
 10748   0032DC  EFAA  F019         	goto	i1l1313
 10749   0032E0                     i1l6489:
 10750                           
 10751                           ;MCAL_Layer/CCP/hal_ccp.c: 151:     {;MCAL_Layer/CCP/hal_ccp.c: 152:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
 10752   0032E0  EE20 F001          	lfsr	2,1
 10753   0032E4  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 10754   0032E6  26D9               	addwf	fsr2l,f,c
 10755   0032E8  5014               	movf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 10756   0032EA  22DA               	addwfc	fsr2h,f,c
 10757   0032EC  50DF               	movf	indf2,w,c
 10758   0032EE  A4D8               	btfss	status,2,c
 10759   0032F0  EF7C  F019         	goto	i1u560_21
 10760   0032F4  EF7E  F019         	goto	i1u560_20
 10761   0032F8                     i1u560_21:
 10762   0032F8  EF84  F019         	goto	i1l6493
 10763   0032FC                     i1u560_20:
 10764   0032FC                     
 10765                           ;MCAL_Layer/CCP/hal_ccp.c: 153:         {;MCAL_Layer/CCP/hal_ccp.c: 154:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBE) ) );
 10766   0032FC  CFBE F01B          	movff	4030,CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 10767                           
 10768                           ;MCAL_Layer/CCP/hal_ccp.c: 155:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBF) ) );
 10769   003300  CFBF F01C          	movff	4031,CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 10770                           
 10771                           ;MCAL_Layer/CCP/hal_ccp.c: 156:         }
 10772   003304  EF98  F019         	goto	i1l6499
 10773   003308                     i1l6493:
 10774   003308  EE20 F001          	lfsr	2,1
 10775   00330C  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 10776   00330E  26D9               	addwf	fsr2l,f,c
 10777   003310  5014               	movf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 10778   003312  22DA               	addwfc	fsr2h,f,c
 10779   003314  04DE               	decf	postinc2,w,c
 10780   003316  A4D8               	btfss	status,2,c
 10781   003318  EF90  F019         	goto	i1u561_21
 10782   00331C  EF92  F019         	goto	i1u561_20
 10783   003320                     i1u561_21:
 10784   003320  EF98  F019         	goto	i1l6497
 10785   003324                     i1u561_20:
 10786   003324                     
 10787                           ;MCAL_Layer/CCP/hal_ccp.c: 158:         {;MCAL_Layer/CCP/hal_ccp.c: 159:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBB) ) );
 10788   003324  CFBB F01B          	movff	4027,CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 10789                           
 10790                           ;MCAL_Layer/CCP/hal_ccp.c: 160:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBC) ) );
 10791   003328  CFBC F01C          	movff	4028,CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 10792                           
 10793                           ;MCAL_Layer/CCP/hal_ccp.c: 161:         }
 10794   00332C  EF98  F019         	goto	i1l6499
 10795   003330                     i1l6497:
 10796   003330                     i1l6499:
 10797                           
 10798                           ;MCAL_Layer/CCP/hal_ccp.c: 163:         *capture_value = capture_temp_value.ccpr_16Bit;
 10799   003330  501B               	movf	CCP_Capture_Mode_Read_Value@capture_temp_value^0,w,c
 10800   003332  6E17               	movwf	??_CCP_Capture_Mode_Read_Value^0,c
 10801   003334  501C               	movf	(CCP_Capture_Mode_Read_Value@capture_temp_value+1)^0,w,c
 10802   003336  6E18               	movwf	(??_CCP_Capture_Mode_Read_Value+1)^0,c
 10803   003338  6A19               	clrf	(??_CCP_Capture_Mode_Read_Value+2)^0,c
 10804   00333A  6A1A               	clrf	(??_CCP_Capture_Mode_Read_Value+3)^0,c
 10805   00333C  C015  FFD9         	movff	CCP_Capture_Mode_Read_Value@capture_value,fsr2l
 10806   003340  C016  FFDA         	movff	CCP_Capture_Mode_Read_Value@capture_value+1,fsr2h
 10807   003344  C017  FFDE         	movff	??_CCP_Capture_Mode_Read_Value,postinc2
 10808   003348  C018  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+1,postinc2
 10809   00334C  C019  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+2,postinc2
 10810   003350  C01A  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+3,postinc2
 10811   003354                     i1l1313:
 10812   003354  0012               	return		;funcret
 10813   003356                     __end_of_CCP_Capture_Mode_Read_Value:
 10814                           	callstack 0
 10815                           
 10816 ;; *************** function _ADC_ISR *****************
 10817 ;; Defined at:
 10818 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		None
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;Total ram usage:        0 bytes
 10837 ;; Hardware stack levels used: 1
 10838 ;; Hardware stack levels required when called: 4
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		_InterruptManagerLow
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text70
 10847   00409A                     __ptext70:
 10848                           	callstack 0
 10849   00409A                     _ADC_ISR:
 10850                           	callstack 15
 10851   00409A                     
 10852                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
 10853   00409A  9C9E               	bcf	158,6,c	;volatile
 10854   00409C  0012               	return		;funcret
 10855   00409E                     __end_of_ADC_ISR:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _InterruptManagerHigh *****************
 10859 ;; Defined at:
 10860 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;		None
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;		None
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      void 
 10867 ;; Registers used:
 10868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;Total ram usage:        4 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 3
 10881 ;; This function calls:
 10882 ;;		_INT0_ISR
 10883 ;;		i2_ADC_ISR
 10884 ;;		i2_CCP1_ISR
 10885 ;;		i2_CCP2_ISR
 10886 ;;		i2_INT1_ISR
 10887 ;;		i2_INT2_ISR
 10888 ;;		i2_RB4_ISR
 10889 ;;		i2_RB5_ISR
 10890 ;;		i2_RB6_ISR
 10891 ;;		i2_RB7_ISR
 10892 ;;		i2_TMR0_ISR
 10893 ;;		i2_TMR1_ISR
 10894 ;;		i2_TMR2_ISR
 10895 ;;		i2_TMR3_ISR
 10896 ;; This function is called by:
 10897 ;;		Interrupt level 2
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	intcode
 10902   000008                     __pintcode:
 10903                           	callstack 0
 10904   000008                     _InterruptManagerHigh:
 10905                           	callstack 13
 10906                           
 10907                           ;incstack = 0
 10908   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10909   00000A  ED4E  F00C         	call	int_func,f	;refresh shadow registers
 10910                           
 10911                           	psect	intcode_body
 10912   00189C                     __pintcode_body:
 10913                           	callstack 13
 10914   00189C                     int_func:
 10915                           	callstack 13
 10916   00189C  0006               	pop		; remove dummy address from shadow register refresh
 10917   00189E  CFFA F00F          	movff	pclath,??_InterruptManagerHigh
 10918   0018A2  CFFB F010          	movff	pclatu,??_InterruptManagerHigh+1
 10919   0018A6  CFD9 F011          	movff	fsr2l,??_InterruptManagerHigh+2
 10920   0018AA  CFDA F012          	movff	fsr2h,??_InterruptManagerHigh+3
 10921   0018AE                     
 10922                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 4:     if((1 == (*((volatile INTCON_t *)
      +                          (0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
 10923   0018AE  A8F2               	btfss	242,4,c	;volatile
 10924   0018B0  EF5C  F00C         	goto	i2u739_41
 10925   0018B4  EF5E  F00C         	goto	i2u739_40
 10926   0018B8                     i2u739_41:
 10927   0018B8  EF67  F00C         	goto	i2l926
 10928   0018BC                     i2u739_40:
 10929   0018BC  A2F2               	btfss	242,1,c	;volatile
 10930   0018BE  EF63  F00C         	goto	i2u740_41
 10931   0018C2  EF65  F00C         	goto	i2u740_40
 10932   0018C6                     i2u740_41:
 10933   0018C6  EF67  F00C         	goto	i2l926
 10934   0018CA                     i2u740_40:
 10935   0018CA                     
 10936                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 5:         INT0_ISR();
 10937   0018CA  EC5F  F020         	call	_INT0_ISR	;wreg free
 10938   0018CE                     i2l926:
 10939                           
 10940                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 8:      if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
 10941   0018CE  ACF0               	btfss	240,6,c	;volatile
 10942   0018D0  EF6C  F00C         	goto	i2u741_41
 10943   0018D4  EF6E  F00C         	goto	i2u741_40
 10944   0018D8                     i2u741_41:
 10945   0018D8  EF77  F00C         	goto	i2l928
 10946   0018DC                     i2u741_40:
 10947   0018DC  A0F0               	btfss	240,0,c	;volatile
 10948   0018DE  EF73  F00C         	goto	i2u742_41
 10949   0018E2  EF75  F00C         	goto	i2u742_40
 10950   0018E6                     i2u742_41:
 10951   0018E6  EF77  F00C         	goto	i2l928
 10952   0018EA                     i2u742_40:
 10953   0018EA                     
 10954                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 9:         INT1_ISR();
 10955   0018EA  EC5B  F020         	call	i2_INT1_ISR	;wreg free
 10956   0018EE                     i2l928:
 10957                           
 10958                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 12:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
 10959   0018EE  AEF0               	btfss	240,7,c	;volatile
 10960   0018F0  EF7C  F00C         	goto	i2u743_41
 10961   0018F4  EF7E  F00C         	goto	i2u743_40
 10962   0018F8                     i2u743_41:
 10963   0018F8  EF87  F00C         	goto	i2l930
 10964   0018FC                     i2u743_40:
 10965   0018FC  A2F0               	btfss	240,1,c	;volatile
 10966   0018FE  EF83  F00C         	goto	i2u744_41
 10967   001902  EF85  F00C         	goto	i2u744_40
 10968   001906                     i2u744_41:
 10969   001906  EF87  F00C         	goto	i2l930
 10970   00190A                     i2u744_40:
 10971   00190A                     
 10972                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 13:         INT2_ISR();
 10973   00190A  EC59  F020         	call	i2_INT2_ISR	;wreg free
 10974   00190E                     i2l930:
 10975                           
 10976                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 16:      if((1 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
 10977   00190E  A0F1               	btfss	241,0,c	;volatile
 10978   001910  EF8C  F00C         	goto	i2u745_41
 10979   001914  EF8E  F00C         	goto	i2u745_40
 10980   001918                     i2u745_41:
 10981   001918  EFA4  F00C         	goto	i2l932
 10982   00191C                     i2u745_40:
 10983   00191C  A0F2               	btfss	242,0,c	;volatile
 10984   00191E  EF93  F00C         	goto	i2u746_41
 10985   001922  EF95  F00C         	goto	i2u746_40
 10986   001926                     i2u746_41:
 10987   001926  EFA4  F00C         	goto	i2l932
 10988   00192A                     i2u746_40:
 10989   00192A  3881               	swapf	129,w,c	;volatile
 10990   00192C  0B0F               	andlw	15
 10991   00192E  0B01               	andlw	1
 10992   001930  184D               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
 10993   001932  B4D8               	btfsc	status,2,c
 10994   001934  EF9E  F00C         	goto	i2u747_41
 10995   001938  EFA0  F00C         	goto	i2u747_40
 10996   00193C                     i2u747_41:
 10997   00193C  EFA4  F00C         	goto	i2l932
 10998   001940                     i2u747_40:
 10999   001940                     
 11000                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 17:         RB4_pin_init_value^=1;
 11001   001940  0E01               	movlw	1
 11002   001942  1A4D               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
 11003   001944                     
 11004                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:         RB4_ISR();
 11005   001944  EC57  F020         	call	i2_RB4_ISR	;wreg free
 11006   001948                     i2l932:
 11007                           
 11008                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 21:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
 11009   001948  A0F1               	btfss	241,0,c	;volatile
 11010   00194A  EFA9  F00C         	goto	i2u748_41
 11011   00194E  EFAB  F00C         	goto	i2u748_40
 11012   001952                     i2u748_41:
 11013   001952  EFC2  F00C         	goto	i2l934
 11014   001956                     i2u748_40:
 11015   001956  A0F2               	btfss	242,0,c	;volatile
 11016   001958  EFB0  F00C         	goto	i2u749_41
 11017   00195C  EFB2  F00C         	goto	i2u749_40
 11018   001960                     i2u749_41:
 11019   001960  EFC2  F00C         	goto	i2l934
 11020   001964                     i2u749_40:
 11021   001964  3881               	swapf	129,w,c	;volatile
 11022   001966  42E8               	rrncf	wreg,f,c
 11023   001968  0B07               	andlw	7
 11024   00196A  0B01               	andlw	1
 11025   00196C  184C               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
 11026   00196E  B4D8               	btfsc	status,2,c
 11027   001970  EFBC  F00C         	goto	i2u750_41
 11028   001974  EFBE  F00C         	goto	i2u750_40
 11029   001978                     i2u750_41:
 11030   001978  EFC2  F00C         	goto	i2l934
 11031   00197C                     i2u750_40:
 11032   00197C                     
 11033                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:         RB5_pin_init_value^=1;
 11034   00197C  0E01               	movlw	1
 11035   00197E  1A4C               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
 11036   001980                     
 11037                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 23:         RB5_ISR();
 11038   001980  EC55  F020         	call	i2_RB5_ISR	;wreg free
 11039   001984                     i2l934:
 11040                           
 11041                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 26:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
 11042   001984  A0F1               	btfss	241,0,c	;volatile
 11043   001986  EFC7  F00C         	goto	i2u751_41
 11044   00198A  EFC9  F00C         	goto	i2u751_40
 11045   00198E                     i2u751_41:
 11046   00198E  EFE0  F00C         	goto	i2l936
 11047   001992                     i2u751_40:
 11048   001992  A0F2               	btfss	242,0,c	;volatile
 11049   001994  EFCE  F00C         	goto	i2u752_41
 11050   001998  EFD0  F00C         	goto	i2u752_40
 11051   00199C                     i2u752_41:
 11052   00199C  EFE0  F00C         	goto	i2l936
 11053   0019A0                     i2u752_40:
 11054   0019A0  4481               	rlncf	129,w,c	;volatile
 11055   0019A2  46E8               	rlncf	wreg,f,c
 11056   0019A4  0B03               	andlw	3
 11057   0019A6  0B01               	andlw	1
 11058   0019A8  184B               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
 11059   0019AA  B4D8               	btfsc	status,2,c
 11060   0019AC  EFDA  F00C         	goto	i2u753_41
 11061   0019B0  EFDC  F00C         	goto	i2u753_40
 11062   0019B4                     i2u753_41:
 11063   0019B4  EFE0  F00C         	goto	i2l936
 11064   0019B8                     i2u753_40:
 11065   0019B8                     
 11066                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 27:         RB6_pin_init_value^=1;
 11067   0019B8  0E01               	movlw	1
 11068   0019BA  1A4B               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
 11069   0019BC                     
 11070                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:         RB6_ISR();
 11071   0019BC  EC53  F020         	call	i2_RB6_ISR	;wreg free
 11072   0019C0                     i2l936:
 11073                           
 11074                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 31:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
 11075   0019C0  A0F1               	btfss	241,0,c	;volatile
 11076   0019C2  EFE5  F00C         	goto	i2u754_41
 11077   0019C6  EFE7  F00C         	goto	i2u754_40
 11078   0019CA                     i2u754_41:
 11079   0019CA  EFFC  F00C         	goto	i2l938
 11080   0019CE                     i2u754_40:
 11081   0019CE  A0F2               	btfss	242,0,c	;volatile
 11082   0019D0  EFEC  F00C         	goto	i2u755_41
 11083   0019D4  EFEE  F00C         	goto	i2u755_40
 11084   0019D8                     i2u755_41:
 11085   0019D8  EFFC  F00C         	goto	i2l938
 11086   0019DC                     i2u755_40:
 11087   0019DC  4481               	rlncf	129,w,c	;volatile
 11088   0019DE  0B01               	andlw	1
 11089   0019E0  184A               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
 11090   0019E2  B4D8               	btfsc	status,2,c
 11091   0019E4  EFF6  F00C         	goto	i2u756_41
 11092   0019E8  EFF8  F00C         	goto	i2u756_40
 11093   0019EC                     i2u756_41:
 11094   0019EC  EFFC  F00C         	goto	i2l938
 11095   0019F0                     i2u756_40:
 11096   0019F0                     
 11097                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:         RB7_pin_init_value^=1;
 11098   0019F0  0E01               	movlw	1
 11099   0019F2  1A4A               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
 11100   0019F4                     
 11101                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:         RB7_ISR();
 11102   0019F4  EC51  F020         	call	i2_RB7_ISR	;wreg free
 11103   0019F8                     i2l938:
 11104                           
 11105                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 36:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
 11106   0019F8  AC9F               	btfss	159,6,c	;volatile
 11107   0019FA  EF01  F00D         	goto	i2u757_41
 11108   0019FE  EF03  F00D         	goto	i2u757_40
 11109   001A02                     i2u757_41:
 11110   001A02  EF0C  F00D         	goto	i2l940
 11111   001A06                     i2u757_40:
 11112   001A06  AC9E               	btfss	158,6,c	;volatile
 11113   001A08  EF08  F00D         	goto	i2u758_41
 11114   001A0C  EF0A  F00D         	goto	i2u758_40
 11115   001A10                     i2u758_41:
 11116   001A10  EF0C  F00D         	goto	i2l940
 11117   001A14                     i2u758_40:
 11118   001A14                     
 11119                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:         ADC_ISR();
 11120   001A14  EC5D  F020         	call	i2_ADC_ISR	;wreg free
 11121   001A18                     i2l940:
 11122                           
 11123                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:     if((1 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
 11124   001A18  A4F1               	btfss	241,2,c	;volatile
 11125   001A1A  EF11  F00D         	goto	i2u759_41
 11126   001A1E  EF13  F00D         	goto	i2u759_40
 11127   001A22                     i2u759_41:
 11128   001A22  EF1C  F00D         	goto	i2l942
 11129   001A26                     i2u759_40:
 11130   001A26  A4F2               	btfss	242,2,c	;volatile
 11131   001A28  EF18  F00D         	goto	i2u760_41
 11132   001A2C  EF1A  F00D         	goto	i2u760_40
 11133   001A30                     i2u760_41:
 11134   001A30  EF1C  F00D         	goto	i2l942
 11135   001A34                     i2u760_40:
 11136   001A34                     
 11137                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41:         TMR0_ISR();
 11138   001A34  EC30  F020         	call	i2_TMR0_ISR	;wreg free
 11139   001A38                     i2l942:
 11140                           
 11141                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
 11142   001A38  A09F               	btfss	159,0,c	;volatile
 11143   001A3A  EF21  F00D         	goto	i2u761_41
 11144   001A3E  EF23  F00D         	goto	i2u761_40
 11145   001A42                     i2u761_41:
 11146   001A42  EF2C  F00D         	goto	i2l944
 11147   001A46                     i2u761_40:
 11148   001A46  A09E               	btfss	158,0,c	;volatile
 11149   001A48  EF28  F00D         	goto	i2u762_41
 11150   001A4C  EF2A  F00D         	goto	i2u762_40
 11151   001A50                     i2u762_41:
 11152   001A50  EF2C  F00D         	goto	i2l944
 11153   001A54                     i2u762_40:
 11154   001A54                     
 11155                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:         TMR1_ISR();
 11156   001A54  EC2A  F020         	call	i2_TMR1_ISR	;wreg free
 11157   001A58                     i2l944:
 11158                           
 11159                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR2IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR2IF)){
 11160   001A58  A29F               	btfss	159,1,c	;volatile
 11161   001A5A  EF31  F00D         	goto	i2u763_41
 11162   001A5E  EF33  F00D         	goto	i2u763_40
 11163   001A62                     i2u763_41:
 11164   001A62  EF3C  F00D         	goto	i2l946
 11165   001A66                     i2u763_40:
 11166   001A66  A29E               	btfss	158,1,c	;volatile
 11167   001A68  EF38  F00D         	goto	i2u764_41
 11168   001A6C  EF3A  F00D         	goto	i2u764_40
 11169   001A70                     i2u764_41:
 11170   001A70  EF3C  F00D         	goto	i2l946
 11171   001A74                     i2u764_40:
 11172   001A74                     
 11173                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:         TMR2_ISR();
 11174   001A74  EC3E  F020         	call	i2_TMR2_ISR	;wreg free
 11175   001A78                     i2l946:
 11176                           
 11177                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:     if((1 == (*((volatile IPR2_t *)(
      +                          0xFA2))).TMR3IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).TMR3IF)){
 11178   001A78  A2A2               	btfss	162,1,c	;volatile
 11179   001A7A  EF41  F00D         	goto	i2u765_41
 11180   001A7E  EF43  F00D         	goto	i2u765_40
 11181   001A82                     i2u765_41:
 11182   001A82  EF4C  F00D         	goto	i2l948
 11183   001A86                     i2u765_40:
 11184   001A86  A2A1               	btfss	161,1,c	;volatile
 11185   001A88  EF48  F00D         	goto	i2u766_41
 11186   001A8C  EF4A  F00D         	goto	i2u766_40
 11187   001A90                     i2u766_41:
 11188   001A90  EF4C  F00D         	goto	i2l948
 11189   001A94                     i2u766_40:
 11190   001A94                     
 11191                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:         TMR3_ISR();
 11192   001A94  EC2F  F01F         	call	i2_TMR3_ISR	;wreg free
 11193   001A98                     i2l948:
 11194                           
 11195                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).CCP1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).CCP1IF)){
 11196   001A98  A49F               	btfss	159,2,c	;volatile
 11197   001A9A  EF51  F00D         	goto	i2u767_41
 11198   001A9E  EF53  F00D         	goto	i2u767_40
 11199   001AA2                     i2u767_41:
 11200   001AA2  EF5C  F00D         	goto	i2l950
 11201   001AA6                     i2u767_40:
 11202   001AA6  A49E               	btfss	158,2,c	;volatile
 11203   001AA8  EF58  F00D         	goto	i2u768_41
 11204   001AAC  EF5A  F00D         	goto	i2u768_40
 11205   001AB0                     i2u768_41:
 11206   001AB0  EF5C  F00D         	goto	i2l950
 11207   001AB4                     i2u768_40:
 11208   001AB4                     
 11209                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         CCP1_ISR();
 11210   001AB4  EC8F  F01F         	call	i2_CCP1_ISR	;wreg free
 11211   001AB8                     i2l950:
 11212                           
 11213                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:       if((1 == (*((volatile IPR2_t *
      +                          )(0xFA2))).CCP2IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).CCP2IF)){
 11214   001AB8  A0A2               	btfss	162,0,c	;volatile
 11215   001ABA  EF61  F00D         	goto	i2u769_41
 11216   001ABE  EF63  F00D         	goto	i2u769_40
 11217   001AC2                     i2u769_41:
 11218   001AC2  EF6C  F00D         	goto	i2l953
 11219   001AC6                     i2u769_40:
 11220   001AC6  A0A1               	btfss	161,0,c	;volatile
 11221   001AC8  EF68  F00D         	goto	i2u770_41
 11222   001ACC  EF6A  F00D         	goto	i2u770_40
 11223   001AD0                     i2u770_41:
 11224   001AD0  EF6C  F00D         	goto	i2l953
 11225   001AD4                     i2u770_40:
 11226   001AD4                     
 11227                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         CCP2_ISR();
 11228   001AD4  EC78  F01F         	call	i2_CCP2_ISR	;wreg free
 11229   001AD8                     i2l953:
 11230   001AD8  C012  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 11231   001ADC  C011  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 11232   001AE0  C010  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 11233   001AE4  C00F  FFFA         	movff	??_InterruptManagerHigh,pclath
 11234   001AE8  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11235   001AEA  0011               	retfie		f
 11236   001AEC                     __end_of_InterruptManagerHigh:
 11237                           	callstack 0
 11238                           
 11239 ;; *************** function i2_TMR3_ISR *****************
 11240 ;; Defined at:
 11241 ;;		line 139 in file "MCAL_Layer/Timer3/hal_timer3.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;Total ram usage:        0 bytes
 11260 ;; Hardware stack levels used: 1
 11261 ;; Hardware stack levels required when called: 1
 11262 ;; This function calls:
 11263 ;;		NULL
 11264 ;;		i2_TMR3_Callback_ISR
 11265 ;; This function is called by:
 11266 ;;		_InterruptManagerHigh
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text72
 11271   003E5E                     __ptext72:
 11272                           	callstack 0
 11273   003E5E                     i2_TMR3_ISR:
 11274                           	callstack 14
 11275   003E5E                     
 11276                           ;MCAL_Layer/Timer3/hal_timer3.c: 141:     (*((volatile uint8 *)(0xFB3))) = (timer3_prelo
      +                          ad)>>8;
 11277   003E5E  5036               	movf	(_timer3_preload+1)^0,w,c
 11278   003E60  6EB3               	movwf	179,c	;volatile
 11279   003E62                     
 11280                           ;MCAL_Layer/Timer3/hal_timer3.c: 142:     (*((volatile uint8 *)(0xFB2))) = (uint8)(timer
      +                          3_preload);
 11281   003E62  C035  FFB2         	movff	_timer3_preload,4018	;volatile
 11282   003E66                     
 11283                           ;MCAL_Layer/Timer3/hal_timer3.c: 143:     ((*((volatile PIR2_t *)(0xFA1))).TMR3IF=0);
 11284   003E66  92A1               	bcf	161,1,c	;volatile
 11285   003E68                     
 11286                           ;MCAL_Layer/Timer3/hal_timer3.c: 144:       if(TMR3_InterruptHandler){
 11287   003E68  5037               	movf	_TMR3_InterruptHandler^0,w,c
 11288   003E6A  1038               	iorwf	(_TMR3_InterruptHandler+1)^0,w,c
 11289   003E6C  B4D8               	btfsc	status,2,c
 11290   003E6E  EF3B  F01F         	goto	i2u207_41
 11291   003E72  EF3D  F01F         	goto	i2u207_40
 11292   003E76                     i2u207_41:
 11293   003E76  EF49  F01F         	goto	i2l1173
 11294   003E7A                     i2u207_40:
 11295   003E7A                     
 11296                           ;MCAL_Layer/Timer3/hal_timer3.c: 145:        TMR3_InterruptHandler();
 11297   003E7A  D802               	call	i2u208_48
 11298   003E7C  EF49  F01F         	goto	i2u208_49
 11299   003E80                     i2u208_48:
 11300   003E80  0005               	push	
 11301   003E82  6EFA               	movwf	pclath,c
 11302   003E84  5037               	movf	_TMR3_InterruptHandler^0,w,c
 11303   003E86  6EFD               	movwf	tosl,c
 11304   003E88  5038               	movf	(_TMR3_InterruptHandler+1)^0,w,c
 11305   003E8A  6EFE               	movwf	tosh,c
 11306   003E8C  6AFF               	clrf	tosu,c
 11307   003E8E  50FA               	movf	pclath,w,c
 11308   003E90  0012               	return		;indir
 11309   003E92                     i2u208_49:
 11310   003E92                     i2l1173:
 11311   003E92  0012               	return		;funcret
 11312   003E94                     __end_ofi2_TMR3_ISR:
 11313                           	callstack 0
 11314                           
 11315 ;; *************** function i2_TMR3_Callback_ISR *****************
 11316 ;; Defined at:
 11317 ;;		line 81 in file "HeartRate_Measure.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;		None
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  1    wreg      void 
 11324 ;; Registers used:
 11325 ;;		status,2, status,0
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;Total ram usage:        0 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_TMR3_ISR
 11341 ;;		i2_TMR3_ISR
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text73
 11346   00409E                     __ptext73:
 11347                           	callstack 0
 11348   00409E                     i2_TMR3_Callback_ISR:
 11349                           	callstack 14
 11350   00409E                     
 11351                           ;HeartRate_Measure.c: 83:     ovf_cnt++;
 11352   00409E  2A48               	incf	_ovf_cnt^0,f,c	;volatile
 11353   0040A0  0012               	return		;funcret
 11354   0040A2                     __end_ofi2_TMR3_Callback_ISR:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function i2_TMR2_ISR *****************
 11358 ;; Defined at:
 11359 ;;		line 111 in file "MCAL_Layer/Timer2/hal_timer2.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;		None
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      void 
 11366 ;; Registers used:
 11367 ;;		None
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;Total ram usage:        0 bytes
 11378 ;; Hardware stack levels used: 1
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_InterruptManagerHigh
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	text74
 11387   00407C                     __ptext74:
 11388                           	callstack 0
 11389   00407C                     i2_TMR2_ISR:
 11390                           	callstack 15
 11391   00407C                     
 11392                           ;MCAL_Layer/Timer2/hal_timer2.c: 112:     (*((volatile uint8 *)(0xFCC))) = timer2_preloa
      +                          d;
 11393   00407C  C049  FFCC         	movff	_timer2_preload,4044	;volatile
 11394   004080  0012               	return		;funcret
 11395   004082                     __end_ofi2_TMR2_ISR:
 11396                           	callstack 0
 11397                           
 11398 ;; *************** function i2_TMR1_ISR *****************
 11399 ;; Defined at:
 11400 ;;		line 114 in file "MCAL_Layer/Timer1/hal_timer1.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;		None
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg, status,2
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;Total ram usage:        0 bytes
 11419 ;; Hardware stack levels used: 1
 11420 ;; This function calls:
 11421 ;;		Nothing
 11422 ;; This function is called by:
 11423 ;;		_InterruptManagerHigh
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text75
 11428   004054                     __ptext75:
 11429                           	callstack 0
 11430   004054                     i2_TMR1_ISR:
 11431                           	callstack 15
 11432   004054                     
 11433                           ;MCAL_Layer/Timer1/hal_timer1.c: 115:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
 11434   004054  503A               	movf	(_timer1_preload+1)^0,w,c
 11435   004056  6ECF               	movwf	207,c	;volatile
 11436   004058                     
 11437                           ;MCAL_Layer/Timer1/hal_timer1.c: 116:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
 11438   004058  C039  FFCE         	movff	_timer1_preload,4046	;volatile
 11439   00405C                     
 11440                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
 11441   00405C  909E               	bcf	158,0,c	;volatile
 11442   00405E  0012               	return		;funcret
 11443   004060                     __end_ofi2_TMR1_ISR:
 11444                           	callstack 0
 11445                           
 11446 ;; *************** function i2_TMR0_ISR *****************
 11447 ;; Defined at:
 11448 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;		None
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;		None
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      void 
 11455 ;; Registers used:
 11456 ;;		wreg, status,2
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;Total ram usage:        0 bytes
 11467 ;; Hardware stack levels used: 1
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_InterruptManagerHigh
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text76
 11476   004060                     __ptext76:
 11477                           	callstack 0
 11478   004060                     i2_TMR0_ISR:
 11479                           	callstack 15
 11480   004060                     
 11481                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
 11482   004060  503C               	movf	(_timer0_preload+1)^0,w,c
 11483   004062  6ED7               	movwf	215,c	;volatile
 11484   004064                     
 11485                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
 11486   004064  C03B  FFD6         	movff	_timer0_preload,4054	;volatile
 11487   004068                     
 11488                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
 11489   004068  94F2               	bcf	242,2,c	;volatile
 11490   00406A  0012               	return		;funcret
 11491   00406C                     __end_ofi2_TMR0_ISR:
 11492                           	callstack 0
 11493                           
 11494 ;; *************** function i2_RB7_ISR *****************
 11495 ;; Defined at:
 11496 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		None
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; This function calls:
 11517 ;;		Nothing
 11518 ;; This function is called by:
 11519 ;;		_InterruptManagerHigh
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text77
 11524   0040A2                     __ptext77:
 11525                           	callstack 0
 11526   0040A2                     i2_RB7_ISR:
 11527                           	callstack 15
 11528   0040A2                     
 11529                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 11530   0040A2  90F2               	bcf	242,0,c	;volatile
 11531   0040A4  0012               	return		;funcret
 11532   0040A6                     __end_ofi2_RB7_ISR:
 11533                           	callstack 0
 11534                           
 11535 ;; *************** function i2_RB6_ISR *****************
 11536 ;; Defined at:
 11537 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;		None
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      void 
 11544 ;; Registers used:
 11545 ;;		None
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;Total ram usage:        0 bytes
 11556 ;; Hardware stack levels used: 1
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_InterruptManagerHigh
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text78
 11565   0040A6                     __ptext78:
 11566                           	callstack 0
 11567   0040A6                     i2_RB6_ISR:
 11568                           	callstack 15
 11569   0040A6                     
 11570                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 11571   0040A6  90F2               	bcf	242,0,c	;volatile
 11572   0040A8  0012               	return		;funcret
 11573   0040AA                     __end_ofi2_RB6_ISR:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function i2_RB5_ISR *****************
 11577 ;; Defined at:
 11578 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		None
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;Total ram usage:        0 bytes
 11597 ;; Hardware stack levels used: 1
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_InterruptManagerHigh
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text79
 11606   0040AA                     __ptext79:
 11607                           	callstack 0
 11608   0040AA                     i2_RB5_ISR:
 11609                           	callstack 15
 11610   0040AA                     
 11611                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 11612   0040AA  90F2               	bcf	242,0,c	;volatile
 11613   0040AC  0012               	return		;funcret
 11614   0040AE                     __end_ofi2_RB5_ISR:
 11615                           	callstack 0
 11616                           
 11617 ;; *************** function i2_RB4_ISR *****************
 11618 ;; Defined at:
 11619 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		None
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used: 1
 11639 ;; This function calls:
 11640 ;;		Nothing
 11641 ;; This function is called by:
 11642 ;;		_InterruptManagerHigh
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text80
 11647   0040AE                     __ptext80:
 11648                           	callstack 0
 11649   0040AE                     i2_RB4_ISR:
 11650                           	callstack 15
 11651   0040AE                     
 11652                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 11653   0040AE  90F2               	bcf	242,0,c	;volatile
 11654   0040B0  0012               	return		;funcret
 11655   0040B2                     __end_ofi2_RB4_ISR:
 11656                           	callstack 0
 11657                           
 11658 ;; *************** function i2_INT2_ISR *****************
 11659 ;; Defined at:
 11660 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;		None
 11663 ;; Auto vars:     Size  Location     Type
 11664 ;;		None
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  1    wreg      void 
 11667 ;; Registers used:
 11668 ;;		None
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;Total ram usage:        0 bytes
 11679 ;; Hardware stack levels used: 1
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_InterruptManagerHigh
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text81
 11688   0040B2                     __ptext81:
 11689                           	callstack 0
 11690   0040B2                     i2_INT2_ISR:
 11691                           	callstack 15
 11692   0040B2                     
 11693                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
 11694   0040B2  92F0               	bcf	240,1,c	;volatile
 11695   0040B4  0012               	return		;funcret
 11696   0040B6                     __end_ofi2_INT2_ISR:
 11697                           	callstack 0
 11698                           
 11699 ;; *************** function i2_INT1_ISR *****************
 11700 ;; Defined at:
 11701 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;		None
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;		None
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		None
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;Total ram usage:        0 bytes
 11720 ;; Hardware stack levels used: 1
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_InterruptManagerHigh
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text82
 11729   0040B6                     __ptext82:
 11730                           	callstack 0
 11731   0040B6                     i2_INT1_ISR:
 11732                           	callstack 15
 11733   0040B6                     
 11734                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
 11735   0040B6  90F0               	bcf	240,0,c	;volatile
 11736   0040B8  0012               	return		;funcret
 11737   0040BA                     __end_ofi2_INT1_ISR:
 11738                           	callstack 0
 11739                           
 11740 ;; *************** function i2_CCP2_ISR *****************
 11741 ;; Defined at:
 11742 ;;		line 606 in file "MCAL_Layer/CCP/hal_ccp.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;		None
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;		None
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      void 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;Total ram usage:        0 bytes
 11761 ;; Hardware stack levels used: 1
 11762 ;; Hardware stack levels required when called: 2
 11763 ;; This function calls:
 11764 ;;		NULL
 11765 ;;		i2_CCP1_Callback_ISR
 11766 ;; This function is called by:
 11767 ;;		_InterruptManagerHigh
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text83
 11772   003EF0                     __ptext83:
 11773                           	callstack 0
 11774   003EF0                     i2_CCP2_ISR:
 11775                           	callstack 13
 11776   003EF0                     
 11777                           ;MCAL_Layer/CCP/hal_ccp.c: 609:     ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
 11778   003EF0  90A1               	bcf	161,0,c	;volatile
 11779   003EF2                     
 11780                           ;MCAL_Layer/CCP/hal_ccp.c: 610:       if(CCP2_InterruptHandler){
 11781   003EF2  5031               	movf	_CCP2_InterruptHandler^0,w,c
 11782   003EF4  1032               	iorwf	(_CCP2_InterruptHandler+1)^0,w,c
 11783   003EF6  B4D8               	btfsc	status,2,c
 11784   003EF8  EF80  F01F         	goto	i2u656_41
 11785   003EFC  EF82  F01F         	goto	i2u656_40
 11786   003F00                     i2u656_41:
 11787   003F00  EF8E  F01F         	goto	i2l1431
 11788   003F04                     i2u656_40:
 11789   003F04                     
 11790                           ;MCAL_Layer/CCP/hal_ccp.c: 611:        CCP2_InterruptHandler();
 11791   003F04  D802               	call	i2u657_48
 11792   003F06  EF8E  F01F         	goto	i2u657_49
 11793   003F0A                     i2u657_48:
 11794   003F0A  0005               	push	
 11795   003F0C  6EFA               	movwf	pclath,c
 11796   003F0E  5031               	movf	_CCP2_InterruptHandler^0,w,c
 11797   003F10  6EFD               	movwf	tosl,c
 11798   003F12  5032               	movf	(_CCP2_InterruptHandler+1)^0,w,c
 11799   003F14  6EFE               	movwf	tosh,c
 11800   003F16  6AFF               	clrf	tosu,c
 11801   003F18  50FA               	movf	pclath,w,c
 11802   003F1A  0012               	return		;indir
 11803   003F1C                     i2u657_49:
 11804   003F1C                     i2l1431:
 11805   003F1C  0012               	return		;funcret
 11806   003F1E                     __end_ofi2_CCP2_ISR:
 11807                           	callstack 0
 11808                           
 11809 ;; *************** function i2_CCP1_ISR *****************
 11810 ;; Defined at:
 11811 ;;		line 596 in file "MCAL_Layer/CCP/hal_ccp.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used: 1
 11831 ;; Hardware stack levels required when called: 2
 11832 ;; This function calls:
 11833 ;;		NULL
 11834 ;;		i2_CCP1_Callback_ISR
 11835 ;; This function is called by:
 11836 ;;		_InterruptManagerHigh
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text84
 11841   003F1E                     __ptext84:
 11842                           	callstack 0
 11843   003F1E                     i2_CCP1_ISR:
 11844                           	callstack 13
 11845   003F1E                     
 11846                           ;MCAL_Layer/CCP/hal_ccp.c: 599:     ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
 11847   003F1E  949E               	bcf	158,2,c	;volatile
 11848   003F20                     
 11849                           ;MCAL_Layer/CCP/hal_ccp.c: 600:       if(CCP1_InterruptHandler){
 11850   003F20  5033               	movf	_CCP1_InterruptHandler^0,w,c
 11851   003F22  1034               	iorwf	(_CCP1_InterruptHandler+1)^0,w,c
 11852   003F24  B4D8               	btfsc	status,2,c
 11853   003F26  EF97  F01F         	goto	i2u654_41
 11854   003F2A  EF99  F01F         	goto	i2u654_40
 11855   003F2E                     i2u654_41:
 11856   003F2E  EFA5  F01F         	goto	i2l1426
 11857   003F32                     i2u654_40:
 11858   003F32                     
 11859                           ;MCAL_Layer/CCP/hal_ccp.c: 601:        CCP1_InterruptHandler();
 11860   003F32  D802               	call	i2u655_48
 11861   003F34  EFA5  F01F         	goto	i2u655_49
 11862   003F38                     i2u655_48:
 11863   003F38  0005               	push	
 11864   003F3A  6EFA               	movwf	pclath,c
 11865   003F3C  5033               	movf	_CCP1_InterruptHandler^0,w,c
 11866   003F3E  6EFD               	movwf	tosl,c
 11867   003F40  5034               	movf	(_CCP1_InterruptHandler+1)^0,w,c
 11868   003F42  6EFE               	movwf	tosh,c
 11869   003F44  6AFF               	clrf	tosu,c
 11870   003F46  50FA               	movf	pclath,w,c
 11871   003F48  0012               	return		;indir
 11872   003F4A                     i2u655_49:
 11873   003F4A                     i2l1426:
 11874   003F4A  0012               	return		;funcret
 11875   003F4C                     __end_ofi2_CCP1_ISR:
 11876                           	callstack 0
 11877                           
 11878 ;; *************** function i2_CCP1_Callback_ISR *****************
 11879 ;; Defined at:
 11880 ;;		line 64 in file "HeartRate_Measure.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;		None
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;		None
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      void 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;Total ram usage:        4 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; Hardware stack levels required when called: 1
 11901 ;; This function calls:
 11902 ;;		i2_CCP_Capture_Mode_Read_Value
 11903 ;;		i2_Timer3_Write_Value
 11904 ;; This function is called by:
 11905 ;;		_CCP1_ISR
 11906 ;;		_CCP2_ISR
 11907 ;;		i2_CCP1_ISR
 11908 ;;		i2_CCP2_ISR
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text85
 11913   00315E                     __ptext85:
 11914                           	callstack 0
 11915   00315E                     i2_CCP1_Callback_ISR:
 11916                           	callstack 13
 11917   00315E                     
 11918                           ;HeartRate_Measure.c: 66:     if(cap_flag == 0){
 11919   00315E  0100               	movlb	0	; () banked
 11920   003160  5199               	movf	_cap_flag& (0+255),w,b	;volatile
 11921   003162  A4D8               	btfss	status,2,c
 11922   003164  EFB6  F018         	goto	i2u640_41
 11923   003168  EFB8  F018         	goto	i2u640_40
 11924   00316C                     i2u640_41:
 11925   00316C  EFC8  F018         	goto	i2l7043
 11926   003170                     i2u640_40:
 11927   003170                     
 11928                           ; BSR set to: 0
 11929                           ;HeartRate_Measure.c: 67:     cap_flag = 1;
 11930   003170  0E01               	movlw	1
 11931   003172  6F99               	movwf	_cap_flag& (0+255),b	;volatile
 11932   003174                     
 11933                           ; BSR set to: 0
 11934                           ;HeartRate_Measure.c: 68:     Timer3_Write_Value(&timer3_obj,0);
 11935   003174  0EA7               	movlw	low _timer3_obj
 11936   003176  6E01               	movwf	i2Timer3_Write_Value@_timer^0,c
 11937   003178  0E00               	movlw	high _timer3_obj
 11938   00317A  6E02               	movwf	(i2Timer3_Write_Value@_timer+1)^0,c
 11939   00317C  0E00               	movlw	0
 11940   00317E  6E04               	movwf	(i2Timer3_Write_Value@_value+1)^0,c
 11941   003180  0E00               	movlw	0
 11942   003182  6E03               	movwf	i2Timer3_Write_Value@_value^0,c
 11943   003184  ECDC  F01F         	call	i2_Timer3_Write_Value	;wreg free
 11944   003188                     i2l7041:
 11945                           
 11946                           ;HeartRate_Measure.c: 69:     ovf_cnt = 0;
 11947   003188  0E00               	movlw	0
 11948   00318A  6E48               	movwf	_ovf_cnt^0,c	;volatile
 11949                           
 11950                           ;HeartRate_Measure.c: 70:     }
 11951   00318C  EF04  F019         	goto	i2l1499
 11952   003190                     i2l7043:
 11953                           
 11954                           ; BSR set to: 0
 11955   003190  0599               	decf	_cap_flag& (0+255),w,b	;volatile
 11956   003192  A4D8               	btfss	status,2,c
 11957   003194  EFCE  F018         	goto	i2u641_41
 11958   003198  EFD0  F018         	goto	i2u641_40
 11959   00319C                     i2u641_41:
 11960   00319C  EF04  F019         	goto	i2l1499
 11961   0031A0                     i2u641_40:
 11962   0031A0                     
 11963                           ; BSR set to: 0
 11964                           ;HeartRate_Measure.c: 72:     {;HeartRate_Measure.c: 73:      Cap=0;
 11965   0031A0  0E00               	movlw	0
 11966   0031A2  6FAD               	movwf	_Cap& (0+255),b	;volatile
 11967   0031A4  0E00               	movlw	0
 11968   0031A6  6FAE               	movwf	(_Cap+1)& (0+255),b	;volatile
 11969   0031A8  0E00               	movlw	0
 11970   0031AA  6FAF               	movwf	(_Cap+2)& (0+255),b	;volatile
 11971   0031AC  0E00               	movlw	0
 11972   0031AE  6FB0               	movwf	(_Cap+3)& (0+255),b	;volatile
 11973                           
 11974                           ;HeartRate_Measure.c: 74:      cap_flag = 2 ;
 11975   0031B0  0E02               	movlw	2
 11976   0031B2  6F99               	movwf	_cap_flag& (0+255),b	;volatile
 11977   0031B4                     
 11978                           ; BSR set to: 0
 11979                           ;HeartRate_Measure.c: 75:      CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap);
 11980   0031B4  0E9A               	movlw	low _ccp1_obj
 11981   0031B6  6E01               	movwf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 11982   0031B8  0E00               	movlw	high _ccp1_obj
 11983   0031BA  6E02               	movwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 11984   0031BC  0EAD               	movlw	low _Cap
 11985   0031BE  6E03               	movwf	i2CCP_Capture_Mode_Read_Value@capture_value^0,c
 11986   0031C0  0E00               	movlw	high _Cap
 11987   0031C2  6E04               	movwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 11988   0031C4  ECAB  F019         	call	i2_CCP_Capture_Mode_Read_Value	;wreg free
 11989   0031C8                     
 11990                           ;HeartRate_Measure.c: 76:      Timer3_Write_Value(&timer3_obj,0);
 11991   0031C8  0EA7               	movlw	low _timer3_obj
 11992   0031CA  6E01               	movwf	i2Timer3_Write_Value@_timer^0,c
 11993   0031CC  0E00               	movlw	high _timer3_obj
 11994   0031CE  6E02               	movwf	(i2Timer3_Write_Value@_timer+1)^0,c
 11995   0031D0  0E00               	movlw	0
 11996   0031D2  6E04               	movwf	(i2Timer3_Write_Value@_value+1)^0,c
 11997   0031D4  0E00               	movlw	0
 11998   0031D6  6E03               	movwf	i2Timer3_Write_Value@_value^0,c
 11999   0031D8  ECDC  F01F         	call	i2_Timer3_Write_Value	;wreg free
 12000   0031DC                     
 12001                           ;HeartRate_Measure.c: 77:      Cap+= (ovf_cnt*65536);
 12002   0031DC  C048  F00B         	movff	_ovf_cnt,??i2_CCP1_Callback_ISR	;volatile
 12003   0031E0  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12004   0031E2  6A0D               	clrf	(??i2_CCP1_Callback_ISR+2)^0,c
 12005   0031E4  6A0E               	clrf	(??i2_CCP1_Callback_ISR+3)^0,c
 12006   0031E6  C00C  F00E         	movff	??i2_CCP1_Callback_ISR+1,??i2_CCP1_Callback_ISR+3
 12007   0031EA  C00B  F00D         	movff	??i2_CCP1_Callback_ISR,??i2_CCP1_Callback_ISR+2
 12008   0031EE  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12009   0031F0  6A0B               	clrf	??i2_CCP1_Callback_ISR^0,c
 12010   0031F2  500B               	movf	??i2_CCP1_Callback_ISR^0,w,c
 12011   0031F4  0100               	movlb	0	; () banked
 12012   0031F6  27AD               	addwf	_Cap& (0+255),f,b	;volatile
 12013   0031F8  500C               	movf	(??i2_CCP1_Callback_ISR+1)^0,w,c
 12014   0031FA  23AE               	addwfc	(_Cap+1)& (0+255),f,b	;volatile
 12015   0031FC  500D               	movf	(??i2_CCP1_Callback_ISR+2)^0,w,c
 12016   0031FE  23AF               	addwfc	(_Cap+2)& (0+255),f,b	;volatile
 12017   003200  500E               	movf	(??i2_CCP1_Callback_ISR+3)^0,w,c
 12018   003202  23B0               	addwfc	(_Cap+3)& (0+255),f,b	;volatile
 12019   003204  EFC4  F018         	goto	i2l7041
 12020   003208                     i2l1499:
 12021   003208  0012               	return		;funcret
 12022   00320A                     __end_ofi2_CCP1_Callback_ISR:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function i2_Timer3_Write_Value *****************
 12026 ;; Defined at:
 12027 ;;		line 80 in file "MCAL_Layer/Timer3/hal_timer3.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  _timer          2    0[COMRAM] PTR const struct .
 12030 ;;		 -> timer3_obj(6), 
 12031 ;;  _value          2    2[COMRAM] unsigned int 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;  ret             1    0        unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      unsigned char 
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;Total ram usage:        4 bytes
 12048 ;; Hardware stack levels used: 1
 12049 ;; This function calls:
 12050 ;;		Nothing
 12051 ;; This function is called by:
 12052 ;;		i2_CCP1_Callback_ISR
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056                           	psect	text86
 12057   003FB8                     __ptext86:
 12058                           	callstack 0
 12059   003FB8                     i2_Timer3_Write_Value:
 12060                           	callstack 13
 12061   003FB8                     
 12062                           ;MCAL_Layer/Timer3/hal_timer3.c: 83:     if(_timer==((void*)0)){
 12063   003FB8  5001               	movf	i2Timer3_Write_Value@_timer^0,w,c
 12064   003FBA  1002               	iorwf	(i2Timer3_Write_Value@_timer+1)^0,w,c
 12065   003FBC  A4D8               	btfss	status,2,c
 12066   003FBE  EFE3  F01F         	goto	i2u562_41
 12067   003FC2  EFE5  F01F         	goto	i2u562_40
 12068   003FC6                     i2u562_41:
 12069   003FC6  EFE7  F01F         	goto	i2l6509
 12070   003FCA                     i2u562_40:
 12071   003FCA                     
 12072                           ;MCAL_Layer/Timer3/hal_timer3.c: 85:     }
 12073   003FCA  EFEB  F01F         	goto	i2l1150
 12074   003FCE                     i2l6509:
 12075                           
 12076                           ;MCAL_Layer/Timer3/hal_timer3.c: 87:     {;MCAL_Layer/Timer3/hal_timer3.c: 88:         (
      +                          *((volatile uint8 *)(0xFB3))) = (_value)>>8;
 12077   003FCE  5004               	movf	(i2Timer3_Write_Value@_value+1)^0,w,c
 12078   003FD0  6EB3               	movwf	179,c	;volatile
 12079   003FD2                     
 12080                           ;MCAL_Layer/Timer3/hal_timer3.c: 89:         (*((volatile uint8 *)(0xFB2))) = (uint8)(_v
      +                          alue);
 12081   003FD2  C003  FFB2         	movff	i2Timer3_Write_Value@_value,4018	;volatile
 12082   003FD6                     i2l1150:
 12083   003FD6  0012               	return		;funcret
 12084   003FD8                     __end_ofi2_Timer3_Write_Value:
 12085                           	callstack 0
 12086                           
 12087 ;; *************** function i2_CCP_Capture_Mode_Read_Value *****************
 12088 ;; Defined at:
 12089 ;;		line 142 in file "MCAL_Layer/CCP/hal_ccp.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
 12092 ;;		 -> ccp1_obj(13), 
 12093 ;;  capture_valu    2    2[COMRAM] PTR unsigned long 
 12094 ;;		 -> Cap(4), 
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;  capture_temp    2    8[COMRAM] struct .
 12097 ;;  ret             1    0        unsigned char 
 12098 ;; Return value:  Size  Location     Type
 12099 ;;                  1    wreg      unsigned char 
 12100 ;; Registers used:
 12101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12102 ;; Tracked objects:
 12103 ;;		On entry : 0/0
 12104 ;;		On exit  : 0/0
 12105 ;;		Unchanged: 0/0
 12106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12111 ;;Total ram usage:       10 bytes
 12112 ;; Hardware stack levels used: 1
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		i2_CCP1_Callback_ISR
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           	psect	text87
 12121   003356                     __ptext87:
 12122                           	callstack 0
 12123   003356                     i2_CCP_Capture_Mode_Read_Value:
 12124                           	callstack 13
 12125   003356                     
 12126                           ;MCAL_Layer/CCP/hal_ccp.c: 145:     CCP_REG_T capture_temp_value = {0};
 12127   003356  C08C  F009         	movff	CCP_Capture_Mode_Read_Value@F3461,i2CCP_Capture_Mode_Read_Value@capture_temp_valu
      +                          e
 12128   00335A  C08D  F00A         	movff	CCP_Capture_Mode_Read_Value@F3461+1,i2CCP_Capture_Mode_Read_Value@capture_temp_va
      +                          lue+1
 12129   00335E                     
 12130                           ;MCAL_Layer/CCP/hal_ccp.c: 146:     if( (capture_value==((void*)0)) || (_ccp_obj == ((vo
      +                          id*)0)) )
 12131   00335E  5003               	movf	i2CCP_Capture_Mode_Read_Value@capture_value^0,w,c
 12132   003360  1004               	iorwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,w,c
 12133   003362  B4D8               	btfsc	status,2,c
 12134   003364  EFB6  F019         	goto	i2u563_41
 12135   003368  EFB8  F019         	goto	i2u563_40
 12136   00336C                     i2u563_41:
 12137   00336C  EFC1  F019         	goto	i2l6523
 12138   003370                     i2u563_40:
 12139   003370  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12140   003372  1002               	iorwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12141   003374  A4D8               	btfss	status,2,c
 12142   003376  EFBF  F019         	goto	i2u564_41
 12143   00337A  EFC1  F019         	goto	i2u564_40
 12144   00337E                     i2u564_41:
 12145   00337E  EFC3  F019         	goto	i2l6525
 12146   003382                     i2u564_40:
 12147   003382                     i2l6523:
 12148                           
 12149                           ;MCAL_Layer/CCP/hal_ccp.c: 149:     }
 12150   003382  EFFD  F019         	goto	i2l1313
 12151   003386                     i2l6525:
 12152                           
 12153                           ;MCAL_Layer/CCP/hal_ccp.c: 151:     {;MCAL_Layer/CCP/hal_ccp.c: 152:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
 12154   003386  EE20 F001          	lfsr	2,1
 12155   00338A  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12156   00338C  26D9               	addwf	fsr2l,f,c
 12157   00338E  5002               	movf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12158   003390  22DA               	addwfc	fsr2h,f,c
 12159   003392  50DF               	movf	indf2,w,c
 12160   003394  A4D8               	btfss	status,2,c
 12161   003396  EFCF  F019         	goto	i2u565_41
 12162   00339A  EFD1  F019         	goto	i2u565_40
 12163   00339E                     i2u565_41:
 12164   00339E  EFD7  F019         	goto	i2l6529
 12165   0033A2                     i2u565_40:
 12166   0033A2                     
 12167                           ;MCAL_Layer/CCP/hal_ccp.c: 153:         {;MCAL_Layer/CCP/hal_ccp.c: 154:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBE) ) );
 12168   0033A2  CFBE F009          	movff	4030,i2CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 12169                           
 12170                           ;MCAL_Layer/CCP/hal_ccp.c: 155:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBF) ) );
 12171   0033A6  CFBF F00A          	movff	4031,i2CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 12172                           
 12173                           ;MCAL_Layer/CCP/hal_ccp.c: 156:         }
 12174   0033AA  EFEB  F019         	goto	i2l6535
 12175   0033AE                     i2l6529:
 12176   0033AE  EE20 F001          	lfsr	2,1
 12177   0033B2  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12178   0033B4  26D9               	addwf	fsr2l,f,c
 12179   0033B6  5002               	movf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12180   0033B8  22DA               	addwfc	fsr2h,f,c
 12181   0033BA  04DE               	decf	postinc2,w,c
 12182   0033BC  A4D8               	btfss	status,2,c
 12183   0033BE  EFE3  F019         	goto	i2u566_41
 12184   0033C2  EFE5  F019         	goto	i2u566_40
 12185   0033C6                     i2u566_41:
 12186   0033C6  EFEB  F019         	goto	i2l6533
 12187   0033CA                     i2u566_40:
 12188   0033CA                     
 12189                           ;MCAL_Layer/CCP/hal_ccp.c: 158:         {;MCAL_Layer/CCP/hal_ccp.c: 159:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBB) ) );
 12190   0033CA  CFBB F009          	movff	4027,i2CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 12191                           
 12192                           ;MCAL_Layer/CCP/hal_ccp.c: 160:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBC) ) );
 12193   0033CE  CFBC F00A          	movff	4028,i2CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 12194                           
 12195                           ;MCAL_Layer/CCP/hal_ccp.c: 161:         }
 12196   0033D2  EFEB  F019         	goto	i2l6535
 12197   0033D6                     i2l6533:
 12198   0033D6                     i2l6535:
 12199                           
 12200                           ;MCAL_Layer/CCP/hal_ccp.c: 163:         *capture_value = capture_temp_value.ccpr_16Bit;
 12201   0033D6  5009               	movf	i2CCP_Capture_Mode_Read_Value@capture_temp_value^0,w,c
 12202   0033D8  6E05               	movwf	??i2_CCP_Capture_Mode_Read_Value^0,c
 12203   0033DA  500A               	movf	(i2CCP_Capture_Mode_Read_Value@capture_temp_value+1)^0,w,c
 12204   0033DC  6E06               	movwf	(??i2_CCP_Capture_Mode_Read_Value+1)^0,c
 12205   0033DE  6A07               	clrf	(??i2_CCP_Capture_Mode_Read_Value+2)^0,c
 12206   0033E0  6A08               	clrf	(??i2_CCP_Capture_Mode_Read_Value+3)^0,c
 12207   0033E2  C003  FFD9         	movff	i2CCP_Capture_Mode_Read_Value@capture_value,fsr2l
 12208   0033E6  C004  FFDA         	movff	i2CCP_Capture_Mode_Read_Value@capture_value+1,fsr2h
 12209   0033EA  C005  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value,postinc2
 12210   0033EE  C006  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+1,postinc2
 12211   0033F2  C007  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+2,postinc2
 12212   0033F6  C008  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+3,postinc2
 12213   0033FA                     i2l1313:
 12214   0033FA  0012               	return		;funcret
 12215   0033FC                     __end_ofi2_CCP_Capture_Mode_Read_Value:
 12216                           	callstack 0
 12217                           
 12218 ;; *************** function i2_ADC_ISR *****************
 12219 ;; Defined at:
 12220 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;		None
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;		None
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      void 
 12227 ;; Registers used:
 12228 ;;		None
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;Total ram usage:        0 bytes
 12239 ;; Hardware stack levels used: 1
 12240 ;; This function calls:
 12241 ;;		Nothing
 12242 ;; This function is called by:
 12243 ;;		_InterruptManagerHigh
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           	psect	text88
 12248   0040BA                     __ptext88:
 12249                           	callstack 0
 12250   0040BA                     i2_ADC_ISR:
 12251                           	callstack 15
 12252   0040BA                     
 12253                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
 12254   0040BA  9C9E               	bcf	158,6,c	;volatile
 12255   0040BC  0012               	return		;funcret
 12256   0040BE                     __end_ofi2_ADC_ISR:
 12257                           	callstack 0
 12258                           
 12259 ;; *************** function _INT0_ISR *****************
 12260 ;; Defined at:
 12261 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;		None
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;		None
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		None
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;Total ram usage:        0 bytes
 12280 ;; Hardware stack levels used: 1
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_InterruptManagerHigh
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text89
 12289   0040BE                     __ptext89:
 12290                           	callstack 0
 12291   0040BE                     _INT0_ISR:
 12292                           	callstack 15
 12293   0040BE                     
 12294                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
 12295   0040BE  92F2               	bcf	242,1,c	;volatile
 12296   0040C0  0012               	return		;funcret
 12297   0040C2                     __end_of_INT0_ISR:
 12298                           	callstack 0
 12299                           
 12300                           	psect	text90
 12301   000000                     __ptext90:
 12302                           	callstack 0
 12303   000000                     
 12304                           	psect	rparam
 12305   000000                     
 12306                           	psect	temp
 12307   000058                     btemp:
 12308                           	callstack 0
 12309   000058                     	ds	1
 12310   000000                     int$flags	set	btemp
 12311   000000                     wtemp8	set	btemp+1
 12312   000000                     ttemp5	set	btemp+1
 12313   000000                     ttemp6	set	btemp+4
 12314   000000                     ttemp7	set	btemp+8
 12315                           
 12316                           	psect	config
 12317                           
 12318                           ; Padding undefined space
 12319   300000                     	org	3145728
 12320   300000  FF                 	db	255
 12321                           
 12322                           ;Config register CONFIG1H @ 0x300001
 12323                           ;	Oscillator Selection bits
 12324                           ;	OSC = HS, HS oscillator
 12325                           ;	Fail-Safe Clock Monitor Enable bit
 12326                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12327                           ;	Internal/External Oscillator Switchover bit
 12328                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12329   300001                     	org	3145729
 12330   300001  02                 	db	2
 12331                           
 12332                           ;Config register CONFIG2L @ 0x300002
 12333                           ;	Power-up Timer Enable bit
 12334                           ;	PWRT = OFF, PWRT disabled
 12335                           ;	Brown-out Reset Enable bits
 12336                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 12337                           ;	Brown Out Reset Voltage bits
 12338                           ;	BORV = 1, 
 12339   300002                     	org	3145730
 12340   300002  09                 	db	9
 12341                           
 12342                           ;Config register CONFIG2H @ 0x300003
 12343                           ;	Watchdog Timer Enable bit
 12344                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12345                           ;	Watchdog Timer Postscale Select bits
 12346                           ;	WDTPS = 32768, 1:32768
 12347   300003                     	org	3145731
 12348   300003  1E                 	db	30
 12349                           
 12350                           ; Padding undefined space
 12351   300004                     	org	3145732
 12352   300004  FF                 	db	255
 12353                           
 12354                           ;Config register CONFIG3H @ 0x300005
 12355                           ;	CCP2 MUX bit
 12356                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12357                           ;	PORTB A/D Enable bit
 12358                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12359                           ;	Low-Power Timer1 Oscillator Enable bit
 12360                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12361                           ;	MCLR Pin Enable bit
 12362                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12363   300005                     	org	3145733
 12364   300005  81                 	db	129
 12365                           
 12366                           ;Config register CONFIG4L @ 0x300006
 12367                           ;	Stack Full/Underflow Reset Enable bit
 12368                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12369                           ;	Single-Supply ICSP Enable bit
 12370                           ;	LVP = OFF, Single-Supply ICSP disabled
 12371                           ;	Extended Instruction Set Enable bit
 12372                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12373                           ;	Background Debugger Enable bit
 12374                           ;	DEBUG = 0x1, unprogrammed default
 12375   300006                     	org	3145734
 12376   300006  81                 	db	129
 12377                           
 12378                           ; Padding undefined space
 12379   300007                     	org	3145735
 12380   300007  FF                 	db	255
 12381                           
 12382                           ;Config register CONFIG5L @ 0x300008
 12383                           ;	Code Protection bit
 12384                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12385                           ;	Code Protection bit
 12386                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12387                           ;	Code Protection bit
 12388                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12389                           ;	Code Protection bit
 12390                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12391   300008                     	org	3145736
 12392   300008  0F                 	db	15
 12393                           
 12394                           ;Config register CONFIG5H @ 0x300009
 12395                           ;	Boot Block Code Protection bit
 12396                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12397                           ;	Data EEPROM Code Protection bit
 12398                           ;	CPD = OFF, Data EEPROM not code-protected
 12399   300009                     	org	3145737
 12400   300009  C0                 	db	192
 12401                           
 12402                           ;Config register CONFIG6L @ 0x30000A
 12403                           ;	Write Protection bit
 12404                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12405                           ;	Write Protection bit
 12406                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12407                           ;	Write Protection bit
 12408                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12409                           ;	Write Protection bit
 12410                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12411   30000A                     	org	3145738
 12412   30000A  0F                 	db	15
 12413                           
 12414                           ;Config register CONFIG6H @ 0x30000B
 12415                           ;	Configuration Register Write Protection bit
 12416                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12417                           ;	Boot Block Write Protection bit
 12418                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12419                           ;	Data EEPROM Write Protection bit
 12420                           ;	WRTD = OFF, Data EEPROM not write-protected
 12421   30000B                     	org	3145739
 12422   30000B  E0                 	db	224
 12423                           
 12424                           ;Config register CONFIG7L @ 0x30000C
 12425                           ;	Table Read Protection bit
 12426                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12427                           ;	Table Read Protection bit
 12428                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12429                           ;	Table Read Protection bit
 12430                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12431                           ;	Table Read Protection bit
 12432                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12433   30000C                     	org	3145740
 12434   30000C  0F                 	db	15
 12435                           
 12436                           ;Config register CONFIG7H @ 0x30000D
 12437                           ;	Boot Block Table Read Protection bit
 12438                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12439   30000D                     	org	3145741
 12440   30000D  40                 	db	64
 12441                           tosu	equ	0xFFF
 12442                           tosh	equ	0xFFE
 12443                           tosl	equ	0xFFD
 12444                           stkptr	equ	0xFFC
 12445                           pclatu	equ	0xFFB
 12446                           pclath	equ	0xFFA
 12447                           pcl	equ	0xFF9
 12448                           tblptru	equ	0xFF8
 12449                           tblptrh	equ	0xFF7
 12450                           tblptrl	equ	0xFF6
 12451                           tablat	equ	0xFF5
 12452                           prodh	equ	0xFF4
 12453                           prodl	equ	0xFF3
 12454                           indf0	equ	0xFEF
 12455                           postinc0	equ	0xFEE
 12456                           postdec0	equ	0xFED
 12457                           preinc0	equ	0xFEC
 12458                           plusw0	equ	0xFEB
 12459                           fsr0h	equ	0xFEA
 12460                           fsr0l	equ	0xFE9
 12461                           wreg	equ	0xFE8
 12462                           indf1	equ	0xFE7
 12463                           postinc1	equ	0xFE6
 12464                           postdec1	equ	0xFE5
 12465                           preinc1	equ	0xFE4
 12466                           plusw1	equ	0xFE3
 12467                           fsr1h	equ	0xFE2
 12468                           fsr1l	equ	0xFE1
 12469                           bsr	equ	0xFE0
 12470                           indf2	equ	0xFDF
 12471                           postinc2	equ	0xFDE
 12472                           postdec2	equ	0xFDD
 12473                           preinc2	equ	0xFDC
 12474                           plusw2	equ	0xFDB
 12475                           fsr2h	equ	0xFDA
 12476                           fsr2l	equ	0xFD9
 12477                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    16
    Data        53
    BSS         150
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48      87
    BANK0           128     51     128
    BANK1           256     39     127
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S3341$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_str(COMRAM[11]), convert_uint16_to_string@Temp_str(COMRAM[6]), convert_uint8_to_string@Temp_str(BANK1[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S3288$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3288$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 4
		 -> HeartRate_Display@BPM_Str(BANK1[4]), 

    memset@s	PTR unsigned char  size(2) Largest target is 4
		 -> HeartRate_Display@BPM_Str(BANK1[4]), 

    HeartRate_Calculate@HeartRate_BPM	PTR unsigned char  size(2) Largest target is 1
		 -> heart_rate_bpm(COMRAM[1]), 

    CCP_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP2_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), NULL(), 

    CCP2_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP1_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), NULL(), 

    CCP1_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP_Capture_Compare_Timer_Config@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Compare_Timer_Config@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP_PWM_Mode_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Mode_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP_Capture_Mode_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Mode_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    CCP_PWM_Stop@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Start@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Set_Duty@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Mode_Read_Value@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Mode_Read_Value@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), 

    CCP_Capture_Mode_Read_Value@capture_value	PTR unsigned long  size(2) Largest target is 4
		 -> Cap(BANK0[4]), 

    CCP_IsCapturedDataReady@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_DeInit@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), 

    ccp1_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), 

    S2133$CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    ccp2_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    timer3_obj.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR3_Callback_ISR(), TMR3_Callback_ISR(), 

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_Callback_ISR(), 

    Timer3_Mode_Select@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer3_obj(BANK0[6]), 

    Timer3_Write_Value@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer3_obj(BANK0[6]), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR3_Callback_ISR(), TMR3_Callback_ISR(), NULL(), 

    S1975$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_Callback_ISR(), 

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_Callback_ISR(), 

    Timer3_Init@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer3_obj(BANK0[6]), 

    Timer2_Init@_timer	PTR const struct . size(2) Largest target is 2
		 -> timer2_obj(BANK0[2]), 

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1801$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1651$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1169$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1127$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK0[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S718$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 4
		 -> HeartRate_Display@BPM_Str(BANK1[4]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> HeartRate_Display@BPM_Str(BANK1[4]), 

    lcd_4bit_send_custom_char@_chr	PTR const unsigned char  size(2) Largest target is 8
		 -> Full_Heart_Custom_Char(BANK1[8]), Hollow_Heart_Custom_Char(BANK1[8]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_7(CODE[8]), STR_6(CODE[17]), STR_5(CODE[18]), STR_4(CODE[21]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> HeartRate_Display@BPM_Str(BANK1[4]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _Timer3_Timer_Init->_Timer3_Init
    _Timer3_Init->_Timer3_Mode_Select
    _Timer2_Timer_Init->_Timer2_Init
    _CCP_Init->_CCP_PWM_Mode_Init
    _CCP_PWM_Mode_Init->___lmul
    ___lldiv->___lmul
    _CCP_Interrupt_Init->_CCP1_Interrupt_Init
    _CCP_Interrupt_Init->_CCP2_Interrupt_Init
    _CCP_Capture_Mode_Init->_CCP_Capture_Compare_Timer_Config
    _gpio_pin_initialize->_gpio_pin_direction_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _lcd_4bit_send_command->_gpio_pin_write_logic
    _lcd_4bit_send_char_data->_gpio_pin_write_logic
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _vfpfcnvrt->_fputc
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _HeartRate_Calculate->___lmul
    ___xxtofl->___lmul
    ___flmul->___lmul
    ___fldiv->___lmul

Critical Paths under _InterruptManagerLow in COMRAM

    _CCP2_ISR->_CCP1_Callback_ISR
    _CCP1_ISR->_CCP1_Callback_ISR
    _CCP1_Callback_ISR->_CCP_Capture_Mode_Read_Value

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_CCP2_ISR->i2_CCP1_Callback_ISR
    i2_CCP1_ISR->i2_CCP1_Callback_ISR
    i2_CCP1_Callback_ISR->i2_CCP_Capture_Mode_Read_Value

Critical Paths under _main in BANK0

    _Welcome_Message->_lcd_4bit_send_custom_char
    _CCP2_PWM_200KHZ_INIT->_CCP_Init
    _CCP1_Capture_Mode_Init->_CCP_Init
    _CCP_Init->_CCP_PWM_Mode_Init
    _CCP_PWM_Mode_Init->___lldiv
    ___lldiv->___lmul
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _gpio_pin_initialize->_gpio_pin_write_logic
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _HeartRate_Calculate->___fldiv
    ___xxtofl->___lmul
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_HeartRate_Calculate
    _HeartRate_Display->_convert_uint8_to_string
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _HeartRate_Calculate->___fltol
    ___fltol->___fldiv

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  375720
                _HeartRate_Calculate
                  _HeartRate_Display
             _HeartRate_Measure_Init
                    _Welcome_Message
 ---------------------------------------------------------------------------------
 (1) _Welcome_Message                                      2     2      0  152710
                                             29 BANK0      2     2      0
              _lcd_4bit_send_command
          _lcd_4bit_send_custom_char
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _HeartRate_Measure_Init                               0     0      0   53707
               _ecu_layer_initialize
              _mcal_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_layer_initialize                                0     0      0   23252
             _CCP1_Capture_Mode_Init
               _CCP2_PWM_200KHZ_INIT
                  _Timer2_Timer_Init
                  _Timer3_Timer_Init
 ---------------------------------------------------------------------------------
 (3) _Timer3_Timer_Init                                    0     0      0     462
                        _Timer3_Init
 ---------------------------------------------------------------------------------
 (4) _Timer3_Init                                          5     3      2     462
                                             41 COMRAM     5     3      2
                 _Timer3_Mode_Select
 ---------------------------------------------------------------------------------
 (5) _Timer3_Mode_Select                                   2     0      2     164
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Timer2_Timer_Init                                    0     0      0     210
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (4) _Timer2_Init                                          4     2      2     210
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_PWM_200KHZ_INIT                                 0     0      0   11290
                           _CCP_Init
 ---------------------------------------------------------------------------------
 (3) _CCP1_Capture_Mode_Init                               0     0      0   11290
                           _CCP_Init
 ---------------------------------------------------------------------------------
 (4) _CCP_Init                                             5     3      2   11290
                                             20 BANK0      5     3      2
              _CCP_Capture_Mode_Init
                 _CCP_Interrupt_Init
                  _CCP_PWM_Mode_Init
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (5) _CCP_PWM_Mode_Init                                    4     2      2    1290
                                             47 COMRAM     1     1      0
                                             17 BANK0      3     1      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     361
                                              4 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CCP_Interrupt_Init                                   5     3      2     714
                                             42 COMRAM     5     3      2
                _CCP1_Interrupt_Init
                _CCP2_Interrupt_Init
 ---------------------------------------------------------------------------------
 (6) _CCP2_Interrupt_Init                                  4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _CCP1_Interrupt_Init                                  4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _CCP_Capture_Mode_Init                                5     3      2     552
                                             42 COMRAM     5     3      2
   _CCP_Capture_Compare_Timer_Config
 ---------------------------------------------------------------------------------
 (6) _CCP_Capture_Compare_Timer_Config                     4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   30455
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   30449
                                              9 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_initialize                                  4     2      2    8275
                                              1 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_direction_initialize                        9     7      2     738
                                             39 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _HeartRate_Display                                    6     6      0  161701
                                             32 BANK1      6     6      0
            _convert_uint8_to_string
          _lcd_4bit_send_custom_char
               _lcd_4bit_send_string
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             7     1      6   44333
                                             15 BANK0      6     0      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 5     1      4   20491
                                              9 BANK0      4     0      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_custom_char                            9     2      7   86769
                                             21 BANK0      8     1      7
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data_pos                          6     1      5   43240
                                             15 BANK0      6     1      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  7     3      4   22489
                                              9 BANK0      6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                4     1      3   21608
                                              5 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              4     1      3   20168
                                              5 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       4     1      3    6916
                                              1 BANK0      4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          3     1      2    6364
                                              1 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    5868
                                             39 COMRAM     9     6      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              9     7      2    9940
                                             24 BANK1      8     6      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             24    16      8    7642
                                              2 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6796
                                             45 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    13      6    6335
                                             31 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    4768
                                             18 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2533
                                              7 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1177
                                              0 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     857
                                             39 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             45 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     625
                                             39 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1827
                                             39 COMRAM     8     2      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _HeartRate_Calculate                                 12     5      7    7602
                                             27 BANK1     12     5      7
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     836
                                              4 BANK0     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     576
                                             39 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             17 BANK1     10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2873
                                             18 BANK0     25    17      8
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2363
                                             43 BANK0      8     0      8
                                              0 BANK1     17    17      0
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManagerLow                                 7     7      0    1444
                                             32 COMRAM     7     7      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0       0
                                NULL *
                  _TMR3_Callback_ISR *
 ---------------------------------------------------------------------------------
 (13) _TMR3_Callback_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP2_ISR                                            0     0      0     722
                                NULL *
                  _CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (12) _CCP1_ISR                                            0     0      0     722
                                NULL *
                  _CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (13) _CCP1_Callback_ISR                                   4     4      0     722
                                             28 COMRAM     4     4      0
        _CCP_Capture_Mode_Read_Value
                 _Timer3_Write_Value
 ---------------------------------------------------------------------------------
 (14) _Timer3_Write_Value                                  5     1      4     378
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (14) _CCP_Capture_Mode_Read_Value                        11     7      4     344
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _InterruptManagerHigh                                4     4      0     844
                                             14 COMRAM     4     4      0
                           _INT0_ISR
                          i2_ADC_ISR
                         i2_CCP1_ISR
                         i2_CCP2_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
                         i2_TMR0_ISR
                         i2_TMR1_ISR
                         i2_TMR2_ISR
                         i2_TMR3_ISR
 ---------------------------------------------------------------------------------
 (16) i2_TMR3_ISR                                          0     0      0       0
                                NULL *
                i2_TMR3_Callback_ISR *
 ---------------------------------------------------------------------------------
 (17) i2_TMR3_Callback_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB7_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB6_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB5_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB4_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_CCP2_ISR                                          0     0      0     422
                                NULL *
                i2_CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (16) i2_CCP1_ISR                                          0     0      0     422
                                NULL *
                i2_CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (17) i2_CCP1_Callback_ISR                                 4     4      0     422
                                             10 COMRAM     4     4      0
      i2_CCP_Capture_Mode_Read_Value
               i2_Timer3_Write_Value
 ---------------------------------------------------------------------------------
 (18) i2_Timer3_Write_Value                                5     1      4     178
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (18) i2_CCP_Capture_Mode_Read_Value                      11     7      4     244
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HeartRate_Calculate
     ___fldiv
       ___flmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fldiv (ARG)
     ___lmul
     ___xxtofl
   _HeartRate_Display
     _convert_uint8_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
     _lcd_4bit_send_custom_char
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
       _lcd_4bit_send_char_data_pos
         _lcd_4bit_send_char_data
         _lcd_4bit_set_cursor
           _lcd_4bit_send_command
             _gpio_pin_write_logic
             _lcd_4bit_send_enable_signal
             _lcd_send_4bits
       _lcd_4bit_send_command
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
   _HeartRate_Measure_Init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
     _mcal_layer_initialize
       _CCP1_Capture_Mode_Init
         _CCP_Init
           _CCP_Capture_Mode_Init
             _CCP_Capture_Compare_Timer_Config
           _CCP_Interrupt_Init
             _CCP1_Interrupt_Init
             _CCP2_Interrupt_Init
           _CCP_PWM_Mode_Init
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _gpio_pin_initialize
       _CCP2_PWM_200KHZ_INIT
         _CCP_Init
       _Timer2_Timer_Init
         _Timer2_Init
       _Timer3_Timer_Init
         _Timer3_Init
           _Timer3_Mode_Select
   _Welcome_Message
     _lcd_4bit_send_command
     _lcd_4bit_send_custom_char
     _lcd_4bit_send_string_pos

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_Callback_ISR *
       _CCP_Capture_Mode_Read_Value
       _Timer3_Write_Value
   _CCP2_ISR
     NULL(Fake) *
     _CCP1_Callback_ISR *
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR
     NULL(Fake) *
     _TMR3_Callback_ISR *

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_ADC_ISR
   i2_CCP1_ISR
     NULL(Fake) *
     i2_CCP1_Callback_ISR *
       i2_CCP_Capture_Mode_Read_Value
       i2_Timer3_Write_Value
   i2_CCP2_ISR
     NULL(Fake) *
     i2_CCP1_Callback_ISR *
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR
   i2_TMR0_ISR
   i2_TMR1_ISR
   i2_TMR2_ISR
   i2_TMR3_ISR
     NULL(Fake) *
     i2_TMR3_Callback_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     27      7F       7       49.6%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     33      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      57       1       69.0%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRhh         28      0       0      36        0.0%
BITBIGSFRhl         12      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      39        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jan 07 22:55:19 2024

                                   ___fldiv@aexp 014E                                     ___fldiv@bexp 014D  
                                   ___fldiv@sign 0146                                  ?_lcd_send_4bits 00B4  
                                             l71 2B2C                                               l81 3816  
                                             l76 3798                                               l86 3CE6  
                                             l94 3C9C                                     ___awdiv@sign 002D  
                 __end_of_HeartRate_Measure_Init 4076                                               bsr 0FE0  
                          ??_InterruptManagerLow 0021                                              l102 3AE4  
                                            l109 359E                                              l227 30AC  
                             _Timer3_Mode_Select 3620                                              l168 2F44  
                                            l512 351C                                              l193 348C  
                                            l354 402C                                              l524 2116  
                                            l198 3BA6                                              l543 23BE  
                                            _Cap 00AD                    gpio_pin_initialize@pin_config 00B4  
                                            _abs 3D74                           ??_InterruptManagerHigh 000F  
                                            _pad 3818                                      ?i2_CCP1_ISR 0001  
                                __end_of_ADC_ISR 409E                                      ?i2_CCP2_ISR 0001  
                                            _ret 0056              __end_of_lcd_4bit_send_enable_signal 3BA8  
                    _lcd_4bit_send_enable_signal 3B54                                     ___awmod@sign 002D  
                            led_initialize@F3319 0054                                              prod 0FF3  
                                            tosl 0FFD                                              wreg 0FE8  
                          relay_initialize@F3313 0050                                     ___flmul@aexp 00D2  
                                   ___flmul@bexp 00D7                      lcd_send_4bits@_data_command 00B6  
                                   ___flmul@sign 00D1                                     ___flmul@temp 00DC  
                                   ___flmul@prod 00D8                              ?_Timer3_Mode_Select 0028  
                                __end_of_RB4_ISR 4092                                  __end_of_RB5_ISR 408E  
                                __end_of_RB6_ISR 408A                                  __end_of_RB7_ISR 4086  
                                   ___fltol@exp1 0158                                             l1104 36BC  
                                           l1106 371A                                             ?_abs 002E  
                                           l2100 17A0                                             l1140 2C1A  
                                           l2101 178C                                             l1135 2B4C  
                                           l1232 401C                                             l1241 3DEE  
                                           l1402 39FC                                             l1138 2C16  
                                           l2123 1480                                             l1411 3984  
                                           l1235 3F96                                             l1244 3F74  
                                           l1405 3924                                             l1421 390C  
                                           l2126 1312                                             l1238 3D72  
                                           l2119 111C                                             l2215 383C  
                                           l1167 369C                                             l2136 1442  
                                           l2128 138A                                             l2160 1B46  
                                           l2224 1CEC                                             l1344 226E  
                                           l1272 294C                                             l1168 369C  
                                           l2129 1378                                             l2226 1CF4  
                                           l2163 1CA2                                             l2219 3894  
                                           l2227 1D3A                                             l2251 3BFA  
                                           l1363 2270                                             l2092 1676  
                                           l1516 3B42                                             l2180 1FB4  
                                           l1532 329E                                             l1517 3B52  
                                           l2245 2622                                             l2174 1C3A  
                                           l2270 2DC8                                             l2238 1E3C  
                                           l1390 3A6E                                             l1382 3A2C  
                                           l2087 189A                                             l2167 1BDE  
                                           l2255 3DAC                                             l1376 274C  
                                           l2089 16D4                                             l2281 40C2  
                                           l2193 3C4C                                             l1393 3A72  
                                           l2098 171E                                             l1802 2854  
                                           l2258 3DB4                                             l1386 3A4C  
                                           l1483 24F6                                             l1539 32AE  
                                           l1396 399C                                             l1476 2A3C  
                                           l1493 2CFE                                             l2278 3D2E  
                                           l1479 4074                                             l1736 2E8C  
                                           l1749 315C                                             l6051 363A  
                                           l6061 367C                                             l6053 3640  
                                           ?_pad 00BA                                             l6063 3696  
                                           l6055 365A                                             l6241 36B4  
                                           l6057 365C                                             l6049 3620  
                                           l6243 36BE                                             l6251 3718  
                                           l6059 3676                                             l6245 36FE  
                                           l6237 369E                                             l6261 2B4E  
                                           l6247 370A                                             l6239 36A2  
                                           l6271 2BBA                                             l6263 2B6C  
                                           l6255 2B2E                                             l9001 2ADE  
                                           l6249 3716                                             l6441 3F76  
                                           l6281 2BEC                                             l6273 2BBC  
                                           l6265 2B78                                             l6257 2B32  
                                           l9003 2AF0                                             l6443 3F88  
                                           l6283 2BF4                                             l6275 2BBE  
                                           l6267 2B96                                             l6259 2B44  
                                           l6451 3F5E                                             l9021 3CE2  
                                           l9013 3C9E                                             l9101 3C7E  
                                           l9005 2B02                                             l6285 2C10  
                                           l6277 2BCE                                             l6269 2BA6  
                                           l6453 3F66                                             l6445 3F4C  
                                           l9031 1E68                                             l9015 3CA4  
                                           l9103 3C84                                             l9111 3A8C  
                                           l9007 2B14                                             l6279 2BD0  
                                           l6287 2C18                                             l6447 3F56  
                                           l9041 1F12                                             l9025 1E3E  
                                           l8401 2D4C                                             l9017 3CB6  
                                           l9121 3524                                             l9113 3AA4  
                                           l9105 3A74                                             l9009 2B2A  
                                           l9201 401E                                             l6449 3F58  
                                           l9211 1482                                             l9051 1F98  
                                           l9043 1F3E                                             l9035 1EA0  
                                           l8403 2D82                                             l8411 3D08  
                                           l9019 3CBE                                             l9123 3536  
                                           l9115 3AC0                                             l9107 3A74  
                                           l9203 401E                                             l9301 170A  
                                           l9221 14CC                                             l9213 1496  
                                           l9053 1F9E                                             l9037 1EF8  
                                           l9029 1E5C                                             l8501 30FC  
                                           l8413 3D0E                                             l9061 3C16  
                                           l8421 22AC                                             l9133 3556  
                                           l9125 353A                                             l9117 3AC6  
                                           l9109 3A88                                             l9205 400C  
                                           l9311 1754                                             l9303 171A  
                                           l9231 1504                                             l9223 14DE  
                                           l9215 14A6                                             l9055 1FA2  
                                           l9047 1F58                                             l8511 3136  
                                           l8503 3104                                             l8407 3CE8  
                                           l9063 3C1E                                             l8431 2390  
                                           l8423 22CA                                             l8415 2272  
                                           l9135 3572                                             l9127 3550  
                                           l9119 351E                                             l9071 3D3E  
                                           l9207 4014                                             l9321 17CE  
                                           l9313 1782                                             l9305 1730  
                                           l9241 1544                                             l9233 150E  
                                           l9225 14E2                                             l9217 14AA  
                                           l9401 11AC                                             l9049 1F8C  
                                           l8441 2DCA                                             l8505 3112  
                                           l8513 313C                                             l8409 3CF6  
                                           l8521 3818                                             l9065 3C3C  
                                           l9057 3BFC                                             l8425 22D2  
                                           l8433 23BA                                             l8417 2278  
                                           l9137 3576                                             l8601 3A54  
                                           l9081 3DC8                                             l9073 3D64  
                                           l9209 4018                                             l9331 184E  
                                           l9323 17FA                                             l9307 1740  
                                           l9251 158A                                             l9243 1556  
                                           l9235 151E                                             l9219 14BC  
                                           l9227 14EA                                             l9411 11EE  
                                           l9403 11B8                                             l8451 2DF6  
                                           l8443 2DCE                                             l8515 314C  
                                           l8507 3128                                             l8531 3862  
                                           l8523 3828                                             l9059 3C0E  
                                           l8427 232E                                             l8419 228A  
                                           l9139 3586                                             l8611 3998  
                                           l9091 3DE2                                             l9083 3DCC  
                                           l9075 3DB6                                             l9341 188C  
                                           l9333 186E                                             l9317 17B2  
                                           l9325 17FE                                             l9309 1746  
                                           l9253 159A                                             l9261 15BE  
                                           l9245 155A                                             l9237 1522  
                                           l9229 14FC                                             l9421 1250  
                                           l9413 11FE                                             l9405 11C6  
                                           l9501 27E0                                             l8461 2E24  
                                           l8453 2DFE                                             l8445 2DDC  
                                           l8517 3154                                             l8509 3130  
                                           l8533 3880                                             l8525 3834  
                                           l8701 1D42                                             l9181 2E92  
                                           l9093 3C4E                                             l8541 1FBA  
                                           l8621 39F6                                             l8613 39A0  
                                           l9085 3DD0                                             l9077 3DC0  
                                           l9069 3D30                                             l9335 1872  
                                           l9327 181A                                             l9319 17C0  
                                           l9271 1600                                             l9263 15D0  
                                           l9255 15A2                                             l9239 1534  
                                           l9247 1562                                             l9431 12F8  
                                           l9423 126C                                             l9415 1218  
                                           l9407 11D2                                             l9351 1064  
                                           l9511 2808                                             l9503 27EA  
                                           l8471 2E5E                                             l8463 2E2C  
                                           l8455 2E02                                             l8447 2DE4  
                                           l8535 3D74                                             l8527 3848  
                                           l8711 1D92                                             l8703 1D4C  
                                           l9191 2EFA                                             l9183 2EA8  
                                           l9095 3C4E                                             l8551 2076  
                                           l8543 1FCC                                             l8615 39B4  
                                           l8607 3986                                             l8631 3920  
                                           l9087 3DD2                                             l9079 3DC4  
                                           l9337 1880                                             l9329 1832  
                                           l9281 164C                                             l9273 1610  
                                           l9265 15D0                                             l9257 15AA  
                                           l9249 1574                                             l9441 1334  
                                           l9433 1302                                             l9425 1296  
                                           l9417 1228                                             l9409 11E2  
                                           l9361 10A4                                             l9353 1072  
                                           l9513 2814                                             l9505 27F4  
                                           l8481 2E84                                             l8473 2E60  
                                           l8465 2E3A                                             l8457 2E0A  
                                           l8449 2DE8                                             l8537 3D8E  
                                           l8393 2D00                                             l8529 385C  
                                           l8721 1E06                                             l8705 1D52  
                                           l8713 1DAE                                             l9193 2F16  
                                           l9185 2EBA                                             l9097 3C62  
                                           l8545 1FEE                                             l8617 39D2  
                                           l8609 3986                                             l8641 397E  
                                           l8633 3928                                             l9089 3DDA  
                                           l9339 1888                                             l9291 16B2  
                                           l9283 1662                                             l9275 1622  
                                           l9451 13A6                                             l9443 1342  
                                           l9435 1310                                             l9427 12CC  
                                           l9419 1244                                             l9371 10D4  
                                           l9363 10AA                                             l9355 1074  
                                           l9515 2824                                             l8651 3B06  
                                           l9531 1B6C                                             l9523 1AF0  
                                           l8475 2E66                                             l8467 2E40  
                                           l8459 2E1C                                             l8491 30C8  
                                           l8395 2D12                                             l8723 1E0C  
                                           l8715 1DCA                                             l8707 1D84  
                                           l9195 2F18                                             l9187 2EBE  
                                           l8571 3418                                             l9099 3C66  
                                           l8555 20D2                                             l8547 200C  
                                           l8539 1FB6                                             l8731 348E  
                                           l8619 39DA                                             l8635 393C  
                                           l8627 390E                                             l8811 262A  
                                           l9611 296C                                             l9293 16D2  
                                           l9285 1672                                             l9277 1634  
                                           l9269 15E6                                             l9461 1410  
                                           l9453 13B4                                             l9445 1370  
                                           l9437 1322                                             l9429 12DA  
                                           l9381 110C                                             l9373 10D6  
                                           l9365 10BA                                             l9357 1084  
                                           l9349 1056                                             l9517 2834  
                                           l8653 3B18                                             l9541 1BC6  
                                           l9525 1B02                                             l8469 2E56  
                                           l8477 2E6C                                             l8493 30CC  
                                           l8485 30AE                                             l8397 2D24  
                                           l8725 1E1C                                             l8717 1DDC  
                                           l8709 1D8C                                             l9197 2F36  
                                           l9189 2EDA                                             l8581 3B68  
                                           l8573 348A                                             l8565 33FC  
                                           l8549 2014                                             l8557 2114  
                                           l8741 351A                                             l8733 34A2  
                                           l8637 395A                                             l8629 390E  
                                           l8661 3232                                             l8821 268A  
                                           l8813 263C                                             l9621 2A12  
                                           l9613 2984                                             l9295 16E4  
                                           l9287 1682                                             l9279 163C  
                                           l9471 1466                                             l9463 142A  
                                           l9455 13DE                                             l9439 1330  
                                           l9391 115C                                             l9383 112C  
                                           l9375 10E6                                             l9367 10C0  
                                           l9359 1094                                             l9519 2844  
                                           l8655 3B22                                             l8647 3AE6  
                                           l9551 1C2A                                             l9543 1BC8  
                                           l9535 1B80                                             l9527 1B10  
                                           l9631 24A4                                             l8479 2E7C  
                                           l8495 30DA                                             l8487 30B2  
                                           l8399 2D2E                                             l8719 1DF6  
                                           l8583 3B70                                             l8567 33FC  
                                           l8751 3738                                             l8911 301A  
                                           l8903 2FFC                                             l8735 34C4  
                                           l8591 39FE                                             l8639 3962  
                                           l8671 327C                                             l8663 323A  
                                           l8823 2692                                             l8815 2644  
                                           l9607 406C                                             l9623 2A2A  
                                           l9615 29BA                                             l9297 16FA  
                                           l9289 16B0                                             l9465 1446  
                                           l9473 146C                                             l9449 139A  
                                           l9457 13E2                                             l9393 1166  
                                           l9385 113C                                             l9377 10F6  
                                           l9369 10C6                                             l9481 2766  
                                           l8649 3AF8                                             l9561 1C82  
                                           l9553 1C48                                             l9545 1BD4  
                                           l9537 1B88                                             l9529 1B56  
                                           l9633 24E4                                             l9625 23C0  
                                           l8497 30E2                                             l8489 30C0  
                                           l8681 1CBA                                             l8585 3B84  
                                           l8577 3B54                                             l8569 3410  
                                           l8753 3796                                             l8745 371C  
                                           l8913 3030                                             l8905 2FFC  
                                           l9641 2C50                                             l8737 34E2  
                                           l8729 348E                                             l8593 39FE  
                                           l8761 212E                                             l8841 389A  
                                           l8673 328C                                             l8665 3246  
                                           l8657 320A                                             l8825 26AE  
                                           l8833 26D4                                             l8817 2660  
                                           l8809 2624                                             l9617 29D8  
                                           l9609 294E                                             l9299 1700  
                                           l9475 1470                                             l9467 1456  
                                           l9459 13FC                                             l9395 117C  
                                           l9379 1106                                             l9491 27B6  
                                           l9563 1C90                                             l9555 1C4A  
                                           l9547 1C10                                             l9539 1B94  
                                           l9635 24F0                                             l9627 23C6  
                                           l8499 30F4                                             l8691 1D0C  
                                           l8683 1CCA                                             l8587 3BA4  
                                           l8579 3B54                                             l8747 371C  
                                           l8915 3046                                             l8923 3072  
                                           l8907 3010                                             l9651 2CAE  
                                           l9643 2C60                                             l8739 34EA  
                                           l8595 3A10                                             l8771 216E  
                                           l8763 2136                                             l8843 38AC  
                                           l8851 38D4                                             l8675 328E  
                                           l8667 3254                                             l8659 321C  
                                           l8827 26CC                                             l8819 267E  
                                           l8835 274A                                             l8931 2856  
                                           l9619 29F0                                             l9469 1464  
                                           l9397 1188                                             l9389 1150  
                                           l9493 27BA                                             l9485 277A  
                                           l9565 1C92                                             l9557 1C4E  
                                           l9549 1C1C                                             l9629 23DA  
                                           l8693 1D12                                             l8685 1CD2  
                                           l8861 24F8                                             l8749 3730  
                                           l8917 305C                                             l8909 3014  
                                           l9653 2CC4                                             l9645 2C76  
                                           l9637 2C20                                             l8597 3A14  
                                           l8773 217A                                             l8781 21D8  
                                           l8765 2142                                             l8757 2118  
                                           l8845 38B4                                             l8853 390A  
                                           l8677 3298                                             l8669 325E  
                                           l8941 2896                                             l8933 285C  
                                           l9399 11A0                                             l9495 27C8  
                                           l9487 27A4                                             l9479 274E  
                                           l9559 1C72                                             l8695 1D22  
                                           l8687 1CE0                                             l8679 1CA4  
                                           l8871 254E                                             l8863 251E  
                                           l9655 2CD4                                             l9647 2C88  
                                           l9639 2C32                                             l8599 3A34  
                                           l8791 221C                                             l8775 2186  
                                           l8759 211C                                             l8847 38C4  
                                           l8839 3896                                             l8951 28EA  
                                           l8943 28B2                                             l8935 286E  
                                           l9489 27A6                                             l8697 1D2E  
                                           l8689 1CFC                                             l8881 25E6  
                                           l8873 256C                                             l8865 252C  
                                           l9657 2CF4                                             l9649 2CA8  
                                           l8785 21F8                                             l8769 2162  
                                           l8945 28BA                                             l8953 28F2  
                                           l8937 2872                                             l8699 1D36  
                                           l8875 258A                                             l8867 253A  
                                           l8971 3BF0                                             l8891 379A  
                                           l8787 2204                                             l8795 2228  
                                           l8779 2192                                             l8955 2928  
                                           l8947 28C2                                             l8939 288E  
                                           l8877 25CE                                             l8869 253E  
                                           l8885 25F8                                             l8965 3BA8  
                                           l8893 379A                                             l8981 2A5E  
                                           l8789 2210                                             l8957 293C  
                                           l8949 28D6                                             l8967 3BB4  
                                           l8895 37AE                                             l8991 2AA2  
                                           l8983 2A82                                             l8975 2A3E  
                                           STR_1 1051                                             l8969 3BD2  
                                           l8897 37B6                                             l8993 2AA6  
                                           l8977 2A44                                             STR_4 1011  
                                           l8899 3814                                             l8995 2AB6  
                                           l8979 2A56                                             STR_5 1026  
                                           STR_6 1038                                             l8997 2AC6  
                                           l8989 2A86                                             STR_7 1049  
                                           l8999 2ACC                   __end_of_CCP1_Capture_Mode_Init 3DF0  
                                           u5220 363A                                             u5221 3636  
                                           u5230 365A                                             u5231 3656  
               CCP_Capture_Mode_Read_Value@F3461 008C                                             u5240 3676  
                                           u5241 3672                                             u5410 36B4  
                                           u5250 3696                                             u5411 36B0  
                                           u5251 3692                                             u5420 2B44  
                                           u5421 2B40                                             u5430 2BEC  
                                           u5431 2BE8                                             u5440 2C10  
                                           u5441 2C0C                                             u9000 286E  
                                           u9001 286A                                             u9010 288E  
                                           u9011 288A                                             u9100 1F54  
                                           u8220 2D12                                             u9020 28B2  
                                           u9101 1F50                                             u8221 2D0E  
                                           u9021 28AE                                             u9110 1FB4  
                                           u8230 2D24                                             u9030 3BF0  
                                           u9111 1FB0                                             u8231 2D20  
                                           u9031 3BEC                                             u8320 2DDC  
                                           u8400 30F4                                             u8240 2D4C  
                                           u8304 22F2                                             u9120 3C62  
                                           u9040 2A56                                             u8321 2DD8  
                                           u8401 30F0                                             u8241 2D48  
                                           u8305 22EE                                             u9121 3C5E  
                                           u9041 2A52                                             u8330 2DF6  
                                           u8410 3112                                             u8250 2D82  
                                           u8314 234E                                             u9130 3C9C  
                                           u9050 2AB6                                             u8331 2DF2  
                                           u8411 310E                                             u8251 2D7E  
                                           u8315 234A                                             u9131 3C98  
                                           u9051 2AB2                                             u9300 158A  
                                           u8340 2E1C                                             u8420 3128  
                                           u8260 3D2E                                             u9220 2EBA  
                                           u9060 3CB6                                             u9140 3A88  
                                           u9301 1586                                             u8341 2E18  
                                           u8421 3124                                             u8261 3D2A  
                                           u9221 2EB6                                             u9061 3CB2  
                                           u9141 3A84                                             u9310 15D0  
                                           u9070 1E58                                             u8350 2E3A  
                                           u8430 314C                                             u9230 2F36  
                                           u8270 228A                                             u9150 3AE4  
                                           u9311 15CC                                             u9071 1E54  
                                           u8351 2E36                                             u8431 3148  
                                           u9231 2F32                                             u8271 2286  
                                           u9151 3AE0                                             u9400 1782  
                                           u9320 164C                                             u9240 14A6  
                                           u9080 1E9C                                             u8360 2E56  
                                           u8440 3828                                             u8280 22AC  
                                           u9160 3536                                             u8520 20EA  
                                           u8504 2034                                             u8600 3998  
                                           u9401 177E                                             u9321 1648  
                                           u9241 14A2                                             u9081 1E98  
                                           u8361 2E52                                             u8441 3824  
                                           u8281 22A8                                             u9161 3532  
                                           u8521 20E4                                             u8505 2030  
                                           u8601 3994                                             u9410 179C  
                                           u9330 1672                                             u9250 14BC  
                                           u9090 1F0E                                             u8370 2E7C  
                                           u8450 3880                                             u8290 22CA  
                                           u9170 3586                                             u8530 20EC  
                                           u8514 2096                                             u8610 39D2  
                                           u9411 1798                                             u9331 166E  
                                           u9251 14B8                                             u9091 1F0A  
                                           u8371 2E78                                             u8451 387C  
                                           u8291 22C6                                             u9171 3582  
                                           u8515 2092                                             u8611 39CE  
                                           u9420 17B2                                             u9340 16B0  
                                           u9260 14CC                                             u9500 10D4  
                                           u8380 30C0                                             u8460 3D8E  
                                           u8540 3410                                             u8620 39F6  
                                           u8700 327C                                             u9421 17AE  
                                           u9341 16AC                                             u9261 14C8  
                                           u9501 10D0                                             u8381 30BC  
                                           u8461 3D8A                                             u8541 340C  
                                           u8621 39F2                                             u8701 3278  
                                           u9430 17CE                                             u9350 16E4  
                                           u9270 151E                                             u9510 10E6  
                                           u8390 30DA                                             u8710 1CB6  
                                           u8550 3B68                                             u8470 1FCC  
                                           u8630 3920                                             u9431 17CA  
                                           u9351 16E0                                             u9271 151A  
                                           u9511 10E2                                             u8391 30D6  
                                           u8711 1CB0                                             u8551 3B64  
                                           u8471 1FC8                                             u8631 391C  
                                           u9440 181A                                             u9360 16FA  
                                           u9280 1534                                             u9600 1386  
                                           u9520 10F6                                             u8800 1E06  
                                           u8720 1CB8                                             u8480 1FEE  
                                           u8560 3A10                                             u8640 395A  
                                           u9441 1816                                             u9361 16F6  
                                           u9281 1530                                             u9601 1382  
                                           u9521 10F2                                             u8801 1E02  
                                           u8481 1FEA                                             u8561 3A0C  
                                           u8641 3956                                             u9450 184E  
                                           u9370 171A                                             u9290 1544  
                                           u9610 139A                                             u9530 112C  
                                           u8730 1CCA                                             u8490 200C  
                                           u8810 34A2                                             u8570 3A2C  
                                           u8650 397E                                             u9451 184A  
                                           u9371 1716                                             u9291 1540  
                                           u9611 1396                                             u9531 1128  
                                           u8731 1CC6                                             u8491 2008  
                                           u8811 349E                                             u8571 3A28  
                                           u8651 397A                                             u9460 1880  
                                           u9380 1740                                             u9620 13B4  
                                           u9540 113C                                             u9700 2804  
                                           u8660 3B06                                             u8740 1CE0  
                                           u8820 34C4                                             u8580 3A4C  
                                           u8900 267E                                             u9461 187C  
                                           u9381 173C                                             u9621 13B0  
                                           u9541 1138                                             u9701 2800  
                                           u8661 3B02                                             u8741 1CDC  
                                           u8821 34C0                                             u8581 3A48  
                                           u8901 267A                                             u9390 1754  
                                           u9630 13FC                                             u9550 12B6  
                                           u9470 1072                                             u9710 2824  
                                           u8670 3B42                                             u8750 1D0C  
                                           u8830 34E2                                             u8590 3A6E  
                                           u8910 26AE                                             u9391 1750  
                                           u9631 13F8                                             u9471 106E  
                                           u9711 2820                                             u8671 3B3E  
                                           u8751 1D08                                             u8831 34DE  
                                           u8591 3A6A                                             u8911 26AA  
                                           u9640 142A                                             u9560 1310  
                                           u9480 1084                                             u9720 2834  
                                           u9800 1C48                                             u8760 1D22  
                                           u8840 3730                                             u8680 3232  
                                           u8920 26CC                                             u9641 1426  
                                           u9561 130C                                             u9481 1080  
                                           u9721 2830                                             u9801 1C44  
                                           u8761 1D1E                                             u8841 372C  
                                           u8681 322E                                             u8921 26C8  
                                           u9650 1464                                             u9570 1330  
                                           u9490 1094                                             u9810 1C82  
                                           u9730 1B02                                             u8770 1DCA  
                                           u8850 212E                                             u8690 3254  
                                           u9651 1460                                             u9571 132C  
                                           u9555 12AC                                             u9491 1090  
                                           u9811 1C7E                                             u9731 1AFE  
                                           u8771 1DC6                                             u8851 212A  
                                           u8691 3250                                             u9580 1342  
                                           u9660 2766                                             u9820 1C90  
                                           u9740 1B10                                             u8780 1DDC  
                                           u8860 215E                                             u8940 38AC  
                                           u9581 133E                                             u9661 2762  
                                           u9821 1C8C                                             u9741 1B0C  
                                           u8781 1DD8                                             u8861 215A  
                                           u8941 38A8                                             u9590 1370  
                                           u9670 279A                                             u9750 1B6C  
                                           u8790 1DF6                                             u8950 251E  
                                           u8870 21F4                                             u9591 136C  
                                           u9751 1B68                                             u8791 1DF2  
                                           u8951 251A                                             u8871 21F0  
                                           u8935 2720                                             u9680 27C8  
                                           u9760 1BC2                                             u8960 256C  
                                           u8880 263C                                             u9681 27C4  
                                           u9761 1BBE                                             u8961 2568  
                                           u8881 2638                                             u9690 27DC  
                                           u9770 1C0C                                             u8970 258A  
                                           u8890 2660                                             u9691 27D8  
                                           u9675 2790                                             u9771 1C08  
                                           u8971 2586                                             u8891 265C  
                                           u9780 1C2A                                             u8980 37AE  
                                           u9781 1C26                                             u8981 37AA  
                                           u9790 1C3A                                             u9870 23DA  
                                           u8990 3010                                             u9791 1C36  
                                           u9871 23D6                                             u8991 300C  
                                           u9880 2C88                                             u9881 2C84  
                                           u9890 2CD4                                             u9891 2CD0  
                           _lcd_4bit_send_string 3C4E                    __end_of_mcal_layer_initialize 401E  
                  ??_lcd_4bit_send_enable_signal 0031                                             abs@a 002E  
                                           _lcd1 00FA                                             _led1 0057  
                                           _dbuf 0111                                             _main 3DF0  
                                           _dtoa 1CA4                                      ?i2_INT1_ISR 0001  
                                    ?i2_INT2_ISR 0001                                 __end_of_CCP1_ISR 3EF0  
                               __end_of_CCP2_ISR 3EC2                                             _prec 008A  
                                           pad@i 00C1                                             pad@p 00BE  
                                           fsr1h 0FE2                                             fsr2h 0FDA  
                                           indf1 0FE7                                             indf2 0FDF  
                                           fsr1l 0FE1                                             pad@w 00C3  
                                           fsr2l 0FD9                                             btemp 0058  
              lcd_4bit_send_char_data_pos@column 00C5                                             prodh 0FF4  
                                           prodl 0FF3                                             start 0260  
                                ___fldiv@new_exp 0147                             _RB7_InterruptHandler 0092  
                               __end_of_CCP_Init 294E                                     ___param_bank 0000  
                           ??_Timer3_Mode_Select 002A                            _lcd_4bit_send_command 371C  
                                    ?i2_TMR0_ISR 0001                                      ?i2_TMR1_ISR 0001  
                                    ?i2_TMR2_ISR 0001                                      ?i2_TMR3_ISR 0001  
                                          ??_abs 00B3                             _gpio_pin_write_logic 2272  
                 lcd_4bit_send_string_pos@column 00C5                                            ??_pad 00C0  
                               __end_of_INT0_ISR 40C2                                 __end_of_INT1_ISR 409A  
                               __end_of_INT2_ISR 4096                                            l10161 3DF4  
                                          l10163 3DF8                                            l10341 21B2  
                                          l10165 3E1A                                            l10343 2248  
                                          l10159 3DF0                                            l10345 20FE  
                                          l10337 2912                                            l10347 3086  
                                          l10339 38F4                                            l10349 23A4  
                                  ___fltol@sign1 0157                                            ?_main 0001  
                                          ?_dtoa 00C5                                  __end_of___fldiv 189C  
                                __end_of___awdiv 2E8E                                  __end_of___awmod 315E  
                                __end_of___flmul 1482                                  __end_of___fltol 2856  
                                __end_of___lldiv 32B0                                            u10417 2978  
                                          u10427 29AE                                  ___awdiv@divisor 002A  
                                          u10437 29E4                                            u10447 2A1E  
                                          u10457 2AC8                                            u10467 2CB6  
                                          i1l593 409C                                            i1l683 4094  
                                          i1l691 408C                                            i1l679 4098  
                                          i1l687 4090                                            i1l695 4088  
                                          i1l961 0076                                            i1l699 4084  
                                          i1l971 0180                                            i1l963 00B0  
                                          i1l981 0220                                            i1l973 01A0  
                                          i1l965 00EC                                            i1l975 01C0  
                                          i1l967 0128                                            i1l959 0056  
                                          i1l984 0240                                            i2l593 40BC  
                                          i1l977 01E0                                            i1l969 0160  
                                          i2l930 190E                                            i2l675 40C0  
                                          i2l683 40B4                                            i2l691 40AC  
                                          i1l979 0200                                            i2l940 1A18  
                                          i2l932 1948                                            i2l950 1AB8  
                                          i2l942 1A38                                            i2l934 1984  
                                          i2l926 18CE                                            i2l679 40B8  
                                          i2l687 40B0                                            i2l695 40A8  
                                          i2l944 1A58                                            i2l936 19C0  
                                          i2l928 18EE                                            i2l953 1AD8  
                                          i2l946 1A78                                            i2l938 19F8  
                                          i2l699 40A4                                            i2l948 1A98  
                                ___awdiv@counter 002C                              relay_turn_off@F3323 004E  
                                   vfpfcnvrt@fmt 00D4                                            _TMR0H 0FD7  
                  CCP_Capture_Mode_Init@_ccp_obj 002B                        lcd_4bit_set_cursor@column 00BF  
                            ___lmul@multiplicand 002C                                 __end_of_TMR0_ISR 4054  
                               __end_of_TMR1_ISR 4048                                 __end_of_TMR2_ISR 407C  
                     __end_of_CCP_Interrupt_Init 390E                                 __end_of_TMR3_ISR 3E5E  
                                          _flags 0047                          __end_of_Welcome_Message 2A3E  
                                          _fputc 2D00                                            _fputs 3CE8  
                         _Full_Heart_Custom_Char 0177                                            pad@fp 00BA  
                                          _width 0088                                            _putch 40C2  
                                          dtoa@d 00C7                                            dtoa@i 00D0  
                                          dtoa@p 00CB                                            dtoa@s 00CF  
                                          dtoa@w 00CD                            ?_lcd_4bit_send_string 00BC  
                                          pclath 0FFA                                            pclatu 0FFB  
                                          tablat 0FF5                                            ttemp5 0059  
                                          ttemp6 005C                                            ttemp7 0060  
                                          status 0FD8                                            wtemp8 0059  
                                __end_of_sprintf 3C4E                      __end_of_CCP1_Interrupt_Init 39FE  
                 ?_gpio_pin_direction_initialize 0028                                  __initialization 35A0  
                                   __end_of_main 3E28                                     __end_of_dtoa 1E3E  
                          ?_gpio_pin_write_logic 0028                                        ??_ADC_ISR 0013  
                              _CCP1_Callback_ISR 2F46                                    _lat_registers 00E6  
              __end_of_lcd_4bit_send_custom_char 35A0                      CCP2_Interrupt_Init@_ccp_obj 0028  
                                         ??_main 0031                                           ??_dtoa 0031  
                             ?_CCP1_Callback_ISR 0001                                    __activetblptr 0003  
                          _TMR3_InterruptHandler 0037                                 led_turn_on@F3324 0053  
                                      ??_RB4_ISR 0013                                        ??_RB5_ISR 0013  
                                      ??_RB6_ISR 0013                                        ??_RB7_ISR 0013  
                    _CCP1_Callback_ISR$intlevel1 2F50                               _RB4_pin_init_value 004D  
                              __end_ofi2_ADC_ISR 40BE                              ??_CCP1_Callback_ISR 001D  
                                         ?_fputc 0028                                           ?_fputs 00B3  
                                         _ADRESH 0FC4                                           _ADRESL 0FC3  
                               ___awdiv@dividend 0028                                           ?_putch 0001  
                                         i1l1027 4052                                           i1l1150 3FB6  
                                         i1l1126 407A                                           i1l1313 3354  
                                         i1l1173 3E5C                                           i1l1502 403A  
                                         i1l1431 3EC0                                           i1l1088 4046  
                                         i1l1426 3EEE                                           i2l1027 406A  
                                         i1l1499 2FFA                                           i1l3275 4038  
                                         i2l1150 3FD6                                           i2l1126 4080  
                                         i2l1313 33FA                                           i2l1173 3E92  
                                         i1l7101 4082                                           i2l1502 40A0  
                                         i2l1431 3F1C                                           i2l1088 405E  
                                         i1l3761 4092                                           i1l7121 4050  
                                         i1l3841 3E2C                                           i2l1426 3F4A  
                                         i1l3747 409A                                           i1l7131 4044  
                                         i1l3843 3E30                                           i1l7141 3ED6  
                                         i1l3757 4096                                           i1l3765 408E  
                                         i1l7117 4048                                           i1l3837 4076  
                                         i1l3845 3E32                                           i1l8101 020E  
                                         i1l6431 3F98                                           i1l7143 3E94  
                                         i1l7119 404C                                           i1l7127 403C  
                                         i1l3847 3E44                                           i1l3839 3E28  
                                         i1l8103 021C                                           i1l6433 3FAA  
                                         i1l7137 3EC2                                           i1l7145 3E96  
                                         i1l3769 408A                                           i1l7129 4040  
                                         i1l8105 022E                                           i1l8041 0044  
                                         i1l6435 3FAE                                           i1l7139 3EC4  
                                         i1l7147 3EA8                                           i1l8107 023C  
                                         i1l8051 0092                                           i1l8043 0052  
                                         i1l6437 3FB2                                           i1l6429 3F98  
                                         i1l8061 00E4                                           i1l8053 00A8  
                                         i1l8045 0064                                           i1l8071 0124  
                                         i1l8063 00E8                                           i1l8055 00AC  
                                         i1l8047 0072                                           i1l8039 0036  
                              __end_ofi2_RB4_ISR 40B2                                           i1l6481 32B0  
                                         i1l7097 4086                                           i1l8081 016E  
                                         i1l8073 0136                                           i1l8065 00FA  
                                         i1l8057 00BE                                           i1l8049 0084  
                                         i2l1499 3208                                           i1l6491 32FC  
                                         i1l6483 32B8                                           i1l8091 01BC  
                                         i1l8083 017C                                           i1l8075 0144  
                                         i1l8067 0108                                           i1l8059 00CC  
                                         i1l6493 3308                                           i1l6485 32CA  
                                         i1l6661 2F66                                           i1l8093 01CE  
                                         i1l8085 018E                                           i1l8077 0158  
                                         i1l8069 0120                                           i1l6495 3324  
                                         i1l6487 32DC                                           i1l6479 32B0  
                                         i1l6671 2FBA                                           i1l6663 2F7A  
                                         i1l8095 01DC                                           i1l8087 019C  
                                         i1l8079 015C                                           i1l6497 3330  
                                         i1l6489 32E0                                           i1l6673 2FCE  
                                         i1l6665 2F82                                           i1l6657 2F50  
                                         i1l8097 01EE                                           i1l8089 01AE  
                                         i1l6499 3330                                           i1l6667 2F92  
                                         i1l6659 2F62                                           i1l8099 01FC  
                                         i1l6669 2FA6                                           i2l3655 409E  
                              __end_ofi2_RB5_ISR 40AE                                           i2l7041 3188  
                                         i2l3921 40B6                                           i2l8001 19BC  
                                         i2l3915 40BA                                           i2l7051 31DC  
                                         i2l7043 3190                                           i2l7035 315E  
                                         i2l7203 40A6                                           i2l7211 4060  
                                         i2l8011 1A06                                           i2l8003 19CE  
                                         i2l7045 31A0                                           i2l7037 3170  
                                         i2l3925 40B2                                           i2l3933 40AA  
                                         i2l7213 4064                                           i2l7221 4054  
                                         i2l8021 1A54                                           i2l8013 1A14  
                                         i2l8005 19DC                                           i2l6511 3FD2  
                                         i2l6503 3FB8                                           i2l7047 31B4  
                                         i2l7039 3174                                           i2l7231 3F1E  
                                         i2l7207 40A2                                           i2l7215 4068  
                                         i2l7223 4058                                           i2l8031 1AA6  
                                         i2l8023 1A66                                           i2l8015 1A26  
                                         i2l8007 19F0                                           i2l6521 3370  
                                         i2l6505 3FB8                                           i2l7049 31C8  
                                         i2l7233 3F20                                           i2l7241 3F04  
                                         i2l3929 40AE                                           i2l7225 405C  
                                         i2l8033 1AB4                                           i2l8025 1A74  
                                         i2l8017 1A34                                           i2l8009 19F4  
                                         i2l6531 33CA                                           i2l6523 3382  
                                         i2l6515 3356                                           i2l6507 3FCA  
                                         i2l7235 3F32                                           i2l3971 3E66  
                                         i2l8035 1AC6                                           i2l8027 1A86  
                                         i2l8019 1A46                                           i2l7093 40BE  
                                         i2l6533 33D6                                           i2l6525 3386  
                                         i2l6517 3356                                           i2l6509 3FCE  
                                         i2l7237 3EF0                                           i2l3965 407C  
                                         i2l3973 3E68                                           i2l8037 1AD4  
                                         i2l8029 1A94                                           i2l6535 33D6  
                                         i2l6527 33A2                                           i2l6519 335E  
                                         i2l7239 3EF2                                           i2l3975 3E7A  
                                         i2l3967 3E5E                                __end_ofi2_RB6_ISR 40AA  
                                         i2l6529 33AE                                           i2l3969 3E62  
              HeartRate_Calculate@TimerPrescaler 015D                                __end_ofi2_RB7_ISR 40A6  
                                         i2l7971 18DC                                           i2l7981 192A  
                                         i2l7973 18EA                                           i2l7965 18AE  
                                         i2l7991 197C                                           i2l7983 1940  
                                         i2l7975 18FC                                           i2l7967 18BC  
                                         i2l7993 1980                                           i2l7985 1944  
                                         i2l7977 190A                                           i2l7969 18CA  
                                         i2l7995 1992                                           i2l7987 1956  
                                         i2l7979 191C                                           i2l7997 19A0  
                                         i2l7989 1964                                           i2l7999 19B8  
                               __end_of___xxtofl 1CA4                 __end_of_lcd_4bit_send_string_pos 3AE6  
                                  ??_Timer2_Init 002A                                    ??_Timer3_Init 002C  
                         fp_i2_TMR3_Callback_ISR 0000                     __end_of_CCP2_PWM_200KHZ_INIT 3D74  
                         ?_lcd_4bit_send_command 00B8                                     vfprintf@cfmt 013E  
                                         ___lmul 3AE6                                        ??___fldiv 013E  
                      __end_of_CCP1_Callback_ISR 2FFC                                        ??___awdiv 002C  
                                      ??___awmod 002C                                        ??___flmul 00CD  
                                      ??___fltol 0153                                        ??___lldiv 0030  
                                         _memset 1E3E                                           clear_0 35F8  
                                         clear_1 3604                                           clear_2 3610  
                               ___awdiv@quotient 002E                                  ___awmod@divisor 002A  
                                         isa$std 0001                                  ___awmod@counter 002C  
                                         pad@buf 00BC                             fp__TMR3_Callback_ISR 0000  
                                         dtoa@fp 00C5                                           fputc@c 0028  
                                      ?_CCP1_ISR 0001                                           fputs@c 00B7  
                                         fputs@i 00B8                                     __pdataCOMRAM 0057  
                                      ?_CCP2_ISR 0001                                           fputs@s 00B3  
                              Timer2_Init@_timer 0028                                     __mediumconst 0000  
                                         tblptrh 0FF7                            _CCP_Capture_Mode_Init 2118  
                                         tblptrl 0FF6                                           tblptru 0FF8  
               HeartRate_Calculate@XTAL_FREQ_MHZ 0159                      _TMR3_Callback_ISR$intlevel1 4038  
                                         putch@c 0001                                 __end_of_vfprintf 3BFC  
                         ??_lcd_4bit_send_string 0031                                        ?_CCP_Init 00C7  
                       _Hollow_Heart_Custom_Char 016F                                        ??_sprintf 0031  
                               ?_Welcome_Message 0001                                     ___xxtofl@arg 00C1  
                            _CCP2_Interrupt_Init 390E                                     ___xxtofl@exp 00C0  
                                   ___xxtofl@val 00B7                          _convert_uint8_to_string 2E8E  
                             _RB6_pin_init_value 004B                                       __accesstop 0080  
                        __end_of__initialization 3616                                        ?_INT0_ISR 0001  
                                      ?_INT1_ISR 0001                                        ?_INT2_ISR 0001  
                                  ___rparam_used 0001                                       ___fltol@f1 014F  
                     convert_uint8_to_string@cnt 015D                                 ??_lcd_send_4bits 0031  
                     convert_uint8_to_string@str 0156                      __end_ofi2_CCP1_Callback_ISR 320A  
                        _lcd_4bit_send_char_data 379A                           ??_gpio_pin_write_logic 002B  
                                 __pcstackCOMRAM 0001                                     __pidataBANK0 3FD8  
                                   __pidataBANK1 3FF2                                        ?_TMR0_ISR 0001  
                                      ?_TMR1_ISR 0001                                        ?_TMR2_ISR 0001  
                                      ?_TMR3_ISR 0001                                    __end_of_fputc 2DCA  
                                  __end_of_fputs 3D30                               _Timer3_Write_Value 3F98  
                                  __end_of_putch 40C4                             ?_CCP2_Interrupt_Init 0028  
                            __end_of_Timer2_Init 371C                              __end_of_Timer3_Init 2C1C  
                       lcd_4bit_send_command@lcd 00B8                         lcd_4bit_send_command@ret 00BB  
                  lcd_4bit_send_custom_char@_chr 00CC                              _HeartRate_Calculate 23C0  
                                   ??i2_CCP1_ISR 000F                                     ??i2_CCP2_ISR 000F  
                                     ??_CCP1_ISR 0021                                       ??_CCP2_ISR 0021  
                            ?_Timer3_Write_Value 0013                                Timer3_Init@_timer 002A  
                   ?_lcd_4bit_send_char_data_pos 00C2                                       ??_CCP_Init 00C9  
                                        ??_fputc 002C                                          ??_fputs 0031  
                        lcd_4bit_send_string@lcd 00BC                          lcd_4bit_send_string@str 00BE  
                                        ??_putch 0028                                       __pbssBANK0 0080  
                                     __pbssBANK1 0100                                     ??i2_INT1_ISR 0001  
                          _INT0_InterruptHandler 0096                                       ??_INT0_ISR 0001  
                                   ??i2_INT2_ISR 0001                                       ??_INT1_ISR 0013  
                                     ??_INT2_ISR 0013                                       __pnvCOMRAM 0056  
                           ?_HeartRate_Calculate 0159                       CCP_Interrupt_Init@_ccp_obj 002B  
                           ??_Timer3_Write_Value 0017                                _HeartRate_Display 2C1C  
                    __end_of_InterruptManagerLow 0260                               __end_ofi2_CCP1_ISR 3F4C  
                             __end_ofi2_CCP2_ISR 3F1E                                          ?___lmul 0028  
                lcd_4bit_send_custom_char@column 00CB                               ?_HeartRate_Display 0001  
                                   ??i2_TMR0_ISR 0001                                     ??i2_TMR1_ISR 0001  
                                     ??_TMR0_ISR 0013                                     ??i2_TMR2_ISR 0001  
                                     ??_TMR1_ISR 0013                                     ??i2_TMR3_ISR 0001  
                                     ??_TMR2_ISR 0013                                       ??_TMR3_ISR 0013  
                              led_turn_off@F3329 0052                            ??_CCP2_Interrupt_Init 002A  
                     i2Timer3_Write_Value@_value 0003                       i2Timer3_Write_Value@_timer 0001  
                                        _ADC_ISR 409A                                  led_toggle@F3334 0051  
                                        ?_memset 0028                                   ___lmul@product 00B3  
                   lcd_4bit_send_custom_char@lcd 00C8                     lcd_4bit_send_custom_char@row 00CA  
                            ??_HeartRate_Display 015E                                          _RB4_ISR 408E  
                                        _RB5_ISR 408A                                          _RB6_ISR 4086  
                                        _RB7_ISR 4082                           ?_CCP_Capture_Mode_Init 002B  
                             __end_ofi2_INT1_ISR 40BA                                        ?___xxtofl 00B7  
                             __end_ofi2_INT2_ISR 40B6                        ?_lcd_4bit_send_string_pos 00C2  
                           _CCP2_PWM_200KHZ_INIT 3D30                        ??_convert_uint8_to_string 0031  
                                     _btn_values 1001                               __end_ofi2_TMR0_ISR 406C  
                             __end_ofi2_TMR1_ISR 4060                               __end_ofi2_TMR2_ISR 4082  
                             __end_ofi2_TMR3_ISR 3E94                                   _tris_registers 00F0  
                           CCP_PWM_Mode_Init@ret 00C6                            ??_HeartRate_Calculate 0030  
                   ?_CCP_Capture_Mode_Read_Value 0013                        ??_lcd_4bit_send_char_data 0031  
                      __end_of_HeartRate_Display 2D00                            _mcal_layer_initialize 400C  
                             _CCP_Interrupt_Init 3896           lcd_4bit_initialize@l_data_pins_counter 00C0  
                           _ADC_InterruptHandler 0045                                          __Hparam 0000  
                                    _Timer2_Init 369E                                          __Lparam 0000  
                                    _Timer3_Init 2B2E                           HeartRate_Display@F3655 0080  
                            _gpio_pin_initialize 348E                                          ___fldiv 1482  
                                        ___awdiv 2DCA                                          ___awmod 30AE  
                                        ___flmul 1056                                          ___fltol 274E  
                                        ___lldiv 320A                              ?_CCP_Interrupt_Init 002B  
                                      ?_vfprintf 00E0                                     __psmallconst 1000  
                                        __pcinit 35A0                                          __ramtop 1000  
                                        __ptext0 3DF0                                          __ptext1 294E  
                                        __ptext2 406C                                          __ptext3 400C  
                                        __ptext4 3F4C                                          __ptext5 2B2E  
                                        __ptext6 3620                                          __ptext7 3F76  
                                        __ptext8 369E                                          __ptext9 3D30  
                ??_gpio_pin_direction_initialize 002A                                       ??___xxtofl 00BB  
                               ___awmod@dividend 0028                            ?_CCP2_PWM_200KHZ_INIT 0001  
                                        _ovf_cnt 0048                             ?_gpio_pin_initialize 00B4  
                                        _sprintf 3BFC                             ??_CCP_Interrupt_Init 002D  
                                 __pintcode_body 189C            HeartRate_Calculate@beats_Time_Seconds 0160  
                          CCP_Interrupt_Init@ret 002F                             end_of_initialization 3616  
                              lcd_send_4bits@lcd 00B4                                lcd_send_4bits@ret 00B7  
                                      i2_ADC_ISR 40BA                                          fputc@fp 002A  
                                        memset@c 002A                                          memset@k 00B3  
                                        memset@n 002C                                          memset@s 00B5  
                                        int_func 189C                                          fputs@fp 00B5  
                        ??_lcd_4bit_send_command 0031                                        i2_RB4_ISR 40AE  
                                      i2_RB5_ISR 40AA                                        i2_RB6_ISR 40A6  
                                      i2_RB7_ISR 40A2                    ??_CCP_Capture_Mode_Read_Value 0017  
                                ___lldiv@divisor 00BB                                  ___lldiv@counter 00C3  
                       ??_HeartRate_Measure_Init 0031                                __end_of_vfpfcnvrt 2624  
                __end_of_convert_uint8_to_string 2F46                                          postdec1 0FE5  
                                        postdec2 0FDD                                       _timer2_obj 00B1  
                                     _timer3_obj 00A7                                          postinc0 0FEE  
                                        postinc1 0FE6                                          postinc2 0FDE  
                               vfpfcnvrt@convarg 00DA                                       ??_vfprintf 0031  
                            _lcd_4bit_initialize 2A3E                  __end_of_lcd_4bit_send_char_data 3818  
                          _INT1_InterruptHandler 0043                                _CCP_PWM_Mode_Init 2624  
                     ?_lcd_4bit_send_custom_char 00C8                              i2_TMR3_Callback_ISR 409E  
                     lcd_4bit_send_char_data@lcd 00B8                       lcd_4bit_send_char_data@ret 00BB  
                       ??_CCP1_Capture_Mode_Init 0031                               ?_CCP_PWM_Mode_Init 00C4  
                                  ___xxtofl@sign 00BF                            ??_gpio_pin_initialize 00B6  
                                    ___fldiv@grs 0149                                      ___fldiv@rem 0142  
                   __end_ofi2_Timer3_Write_Value 3FD8                              ??_CCP_PWM_Mode_Init 0030  
                lcd_4bit_send_char_data_pos@data 00C6                                       ?i2_ADC_ISR 0001  
            CCP_Capture_Mode_Read_Value@_ccp_obj 0013            i2CCP_Capture_Mode_Read_Value@_ccp_obj 0001  
                           ?_lcd_4bit_initialize 00BC                                      ___flmul@grs 00D3  
                         ?_mcal_layer_initialize 0001         CCP_Capture_Compare_Timer_Config@_ccp_obj 0028  
                               CCP_Init@_ccp_obj 00C7                             ?i2_TMR3_Callback_ISR 0001  
                                     ?i2_RB4_ISR 0001                                       ?i2_RB5_ISR 0001  
                                     ?i2_RB6_ISR 0001                                       ?i2_RB7_ISR 0001  
                            _lcd_4bit_set_cursor 2FFC                               relay_turn_on@F3318 004F  
                    lcd_4bit_send_string_pos@lcd 00C2                      lcd_4bit_send_string_pos@row 00C4  
                    lcd_4bit_send_string_pos@str 00C6                                _Timer2_Timer_Init 3F76  
                  convert_uint16_to_string@F3472 010B                    convert_uint32_to_string@F3479 0100  
                                 __end_of___lmul 3B54                                      vfpfcnvrt@ap 00D6  
                                    vfpfcnvrt@cp 00DE                                      vfpfcnvrt@fp 00D2  
                      __end_of_CCP_PWM_Mode_Init 274E                               ?_Timer2_Timer_Init 0001  
                                  __pidataCOMRAM 40C4                           fp_i2_CCP1_Callback_ISR 0000  
                                 _timer0_preload 003B                                   __end_of_memset 1FB6  
                ??i2_CCP_Capture_Mode_Read_Value 0005                                   _timer1_preload 0039  
                                 _timer2_preload 0049                           ??_CCP2_PWM_200KHZ_INIT 0031  
                            start_initialization 35A0                                   _timer3_preload 0035  
                            ??_Timer2_Timer_Init 002C                     ?_lcd_4bit_send_enable_signal 00B4  
                           ?_lcd_4bit_set_cursor 00BC                             _RB4_InterruptHandler 003F  
                                    __end_of_abs 3DB6                                      __end_of_pad 3896  
          __end_of_gpio_pin_direction_initialize 2118                    _gpio_pin_direction_initialize 1FB6  
                           fp__CCP1_Callback_ISR 0000                                _Timer3_Timer_Init 3F4C  
                          ??_lcd_4bit_initialize 00BE                               ?_Timer3_Timer_Init 0001  
                          ??i2_TMR3_Callback_ISR 0001                              ??_Timer3_Timer_Init 002F  
                      __end_of_Timer2_Timer_Init 3F98                                      vfprintf@fmt 00E2  
                                       ??___lmul 0030                                      __pdataBANK0 00E6  
                                    __pdataBANK1 0165                     convert_uint8_to_string@F3465 0084  
                       Timer3_Write_Value@_value 0015                         Timer3_Write_Value@_timer 0013  
                                       ?_ADC_ISR 0001                                         ??_memset 002E  
                        ??_CCP_Capture_Mode_Init 002D                     __end_of_ecu_layer_initialize 402E  
                                     memset@dest 0028                     lcd_4bit_send_command@command 00BA  
                convert_uint8_to_string@Temp_str 0158                         HeartRate_Display@BPM_Str 0160  
                                      ___fldiv@a 00E2                                        ___fldiv@b 00DE  
                                       ?_RB4_ISR 0001                                         ?_RB5_ISR 0001  
                                       ?_RB6_ISR 0001                                         ?_RB7_ISR 0001  
                                      ___flmul@a 00C9                                        ___flmul@b 00C5  
                                    __pbssCOMRAM 0031                            ??_lcd_4bit_set_cursor 00C0  
                                  __pcstackBANK0 00B3                                    __pcstackBANK1 013E  
                      __end_of_Timer3_Timer_Init 3F76                     convert_uint8_to_string@value 015C  
                                    ??i2_ADC_ISR 0001                            _INT2_InterruptHandler 0041  
                 gpio_pin_write_logic@pin_config 0028                            _TMR0_InterruptHandler 0090  
                                    ??i2_RB4_ISR 0001                                      ??i2_RB5_ISR 0001  
                                    ??i2_RB6_ISR 0001                                      ??i2_RB7_ISR 0001  
                    __end_of_CCP2_Interrupt_Init 3986                     __end_of_InterruptManagerHigh 1AEC  
                                   ?_Timer2_Init 0028                                     ?_Timer3_Init 002A  
                                      _dtoa$3368 00C9                                        __pintcode 0008  
                                       ?___fldiv 00DE                                         ?___awdiv 0028  
                                       ?___awmod 0028                                         ?___flmul 00C5  
                                       ?___fltol 014F                                         ?___lldiv 00B7  
                           i2_Timer3_Write_Value 3FB8                 lcd_4bit_send_custom_char@mem_pos 00CE  
                                    __pintcodelo 0018                        gpio_pin_write_logic@logic 002A  
                                    __smallconst 1000                                         _CCP1_ISR 3EC2  
                                       _CCP2_ISR 3E94                           _HeartRate_Measure_Init 406C  
          __end_ofi2_CCP_Capture_Mode_Read_Value 33FC                    i2_CCP_Capture_Mode_Read_Value 3356  
                    __end_of_HeartRate_Calculate 24F8    CCP_Capture_Mode_Read_Value@capture_temp_value 001B  
i2CCP_Capture_Mode_Read_Value@capture_temp_value 0009                                         _CCP_Init 2856  
                            _CCP1_Interrupt_Init 3986                                         ?_sprintf 0140  
                                 _heart_rate_bpm 0055                               _RB5_pin_init_value 004C  
                          HeartRate_Display@flag 0098         CCP_Capture_Mode_Read_Value@capture_value 0015  
     i2CCP_Capture_Mode_Read_Value@capture_value 0003                                         _INT0_ISR 40BE  
                                       _INT1_ISR 4096                                         _INT2_ISR 4092  
                     __end_of_Timer3_Mode_Select 369E                           _CCP1_Capture_Mode_Init 3DB6  
                  __end_of_lcd_4bit_send_command 379A                                         i1u198_20 3E44  
                                       i1u198_21 3E40                                         i2u207_40 3E7A  
                                       i2u207_41 3E76                                         i1u560_20 32FC  
                                       i1u199_28 3E4A                                         i1u800_20 023C  
                                       i1u560_21 32F8                                         i1u199_29 3E5C  
                                       i1u800_21 0238                                         i1u561_20 3324  
                                       i1u561_21 3320                                         i2u208_48 3E80  
                                       i2u208_49 3E92                                         i1u650_28 3EAE  
                                       i1u650_29 3EC0                                         i1u580_20 2F92  
                                       i1u580_21 2F8E                                         i1u557_20 3FAA  
                                       i1u557_21 3FA6                                         i1u558_20 32CA  
                                       i1u558_21 32C6                                         i1u559_20 32DC  
                                       i1u647_20 3ED6                                         i1u559_21 32D8  
                                       i1u647_21 3ED2                                         i1u648_28 3EDC  
                                       i1u649_20 3EA8                                         i1u648_29 3EEE  
                                       i1u649_21 3EA4                                         i1u579_20 2F62  
                                       i1u771_20 0044                                         i1u579_21 2F5E  
                                       i1u771_21 0040                                         i1u780_20 00E4  
                                       i1u772_20 0052                                         i1u780_21 00E0  
                                       i1u772_21 004E                                         i1u781_20 00FA  
                                       i1u773_20 0064                                         i1u781_21 00F6  
                                       i1u773_21 0060                             _RB5_InterruptHandler 003D  
                                       i1u790_20 019C                                         i1u782_20 0108  
                                       i1u774_20 0072                                         i1u790_21 0198  
                                       i1u782_21 0104                                         i1u774_21 006E  
                                       i1u791_20 01AE                                         i1u783_20 0120  
                                       i1u775_20 0084                                         i1u791_21 01AA  
                                       i1u783_21 011C                                         i1u775_21 0080  
                                       i1u792_20 01BC                                         i1u784_20 0136  
                                       i1u776_20 0092                                         i1u792_21 01B8  
                                       i1u784_21 0132                                         i1u776_21 008E  
                                       i2u640_40 3170                                         i2u640_41 316C  
                                       i1u793_20 01CE                                         i1u785_20 0144  
                                       i1u777_20 00A8                                         i1u793_21 01CA  
                                       i1u785_21 0140                                         i1u777_21 00A4  
                                       i2u641_40 31A0                                         i2u641_41 319C  
                                       i1u794_20 01DC                                         i1u786_20 0158  
                                       i1u778_20 00BE                                         i1u794_21 01D8  
                                       i1u786_21 0154                                         i1u778_21 00BA  
                                       i2u562_40 3FCA                                         i2u562_41 3FC6  
                                       i1u795_20 01EE                                         i1u787_20 016E  
                                       i1u779_20 00CC                                         i1u795_21 01EA  
                                       i1u787_21 016A                                         i1u779_21 00C8  
                                       i2u563_40 3370                                         i2u563_41 336C  
                                       i1u796_20 01FC                                         i1u788_20 017C  
                                       i1u796_21 01F8                                         i1u788_21 0178  
                                       i2u564_40 3382                                         i2u740_40 18CA  
                                       i2u564_41 337E                                         i2u740_41 18C6  
                                       i1u797_20 020E                                         i1u789_20 018E  
                                       i1u797_21 020A                                         i1u789_21 018A  
                                       i2u565_40 33A2                                         i2u741_40 18DC  
                                       i2u565_41 339E                                         i2u741_41 18D8  
                                       i1u798_20 021C                                         i1u798_21 0218  
                                       i2u566_40 33CA                                         i2u654_40 3F32  
                                       i2u750_40 197C                                         i2u742_40 18EA  
                                       i2u566_41 33C6                                         i2u654_41 3F2E  
                                       i2u750_41 1978                                         i2u742_41 18E6  
                                       i1u799_20 022E                                         i1u799_21 022A  
                                       i2u751_40 1992                                         i2u743_40 18FC  
                                       i2u751_41 198E                                         i2u743_41 18F8  
                                       i2u655_48 3F38                                         i2u656_40 3F04  
                                       i2u760_40 1A34                                         i2u752_40 19A0  
                                       i2u744_40 190A                                         i2u655_49 3F4A  
                                       i2u656_41 3F00                                         i2u760_41 1A30  
                                       i2u752_41 199C                                         i2u744_41 1906  
                                       i2u761_40 1A46                                         i2u753_40 19B8  
                                       i2u745_40 191C                                         i2u761_41 1A42  
                                       i2u753_41 19B4                                         i2u745_41 1918  
                                       i2u657_48 3F0A                                         i2u770_40 1AD4  
                                       i2u762_40 1A54                                         i2u754_40 19CE  
                                       i2u746_40 192A                                         i2u657_49 3F1C  
                                       i2u770_41 1AD0                                         i2u762_41 1A50  
                                       i2u754_41 19CA                                         i2u746_41 1926  
                                       i2u763_40 1A66                                         i2u755_40 19DC  
                                       i2u747_40 1940                                         i2u739_40 18BC  
                                       i2u763_41 1A62                                         i2u755_41 19D8  
                                       i2u747_41 193C                                         i2u739_41 18B8  
                                       i2u764_40 1A74                                         i2u756_40 19F0  
                                       i2u748_40 1956                                         i2u764_41 1A70  
                                       i2u756_41 19EC                                         i2u748_41 1952  
                                       i2u765_40 1A86                                         i2u757_40 1A06  
                                       i2u749_40 1964                                         i2u765_41 1A82  
                                       i2u757_41 1A02                                         i2u749_41 1960  
                                       i2u766_40 1A94                                         i2u758_40 1A14  
                                       i2u766_41 1A90                                         i2u758_41 1A10  
                                       i2u767_40 1AA6                                         i2u759_40 1A26  
                                       i2u767_41 1AA2                                         i2u759_41 1A22  
                                       i2u768_40 1AB4                                         i2u768_41 1AB0  
                                       i2u769_40 1AC6                                         i2u769_41 1AC2  
                           ?_CCP1_Interrupt_Init 0028                 gpio_pin_direction_initialize@ret 0030  
                                       _TMR0_ISR 4048                            ?i2_Timer3_Write_Value 0001  
                                       _TMR1_ISR 403C                                         _TMR2_ISR 4076  
                                       _TMR3_ISR 3E28                                ??_Welcome_Message 00D0  
                                      _vfpfcnvrt 24F8                 HeartRate_Calculate@HeartRate_BPM 015E  
                       _lcd_4bit_send_string_pos 3A74                   lcd_4bit_send_char_data_pos@lcd 00C2  
                 lcd_4bit_send_char_data_pos@ret 00C7          gpio_pin_direction_initialize@pin_config 0028  
                 lcd_4bit_send_char_data_pos@row 00C4                      ??_lcd_4bit_send_custom_char 0031  
                       ?_convert_uint8_to_string 0156                           gpio_pin_initialize@ret 00B7  
            __end_of_lcd_4bit_send_char_data_pos 3CE8                      _lcd_4bit_send_char_data_pos 3C9E  
                        ??_mcal_layer_initialize 0031                          gpio_pin_write_logic@ret 00B3  
                              ___lmul@multiplier 0028                         ?_lcd_4bit_send_char_data 00B8  
                                      copy_data0 35B4                                        copy_data1 35D4  
                           _ecu_layer_initialize 401E                    ??_lcd_4bit_send_char_data_pos 0031  
                 HeartRate_Display@HeartRate_BPM 015F             lcd_4bit_send_custom_char@lcd_counter 00CF  
                             _RB7_pin_init_value 004A                                _TMR3_Callback_ISR 402E  
                                       __Hrparam 0000                                       vfprintf@ap 00E4  
                                       __Lrparam 0000                                       vfprintf@fp 00E0  
                          ??_CCP1_Interrupt_Init 002A                               ?_TMR3_Callback_ISR 0001  
                    CCP1_Interrupt_Init@_ccp_obj 0028                            _CCP1_InterruptHandler 0033  
                         lcd_4bit_set_cursor@lcd 00BC                                       ?_vfpfcnvrt 00D2  
                         lcd_4bit_set_cursor@row 00BE                                         _ccp1_obj 009A  
                                       _ccp2_obj 0131                              ??_TMR3_Callback_ISR 0013  
                      CCP_PWM_Mode_Init@_ccp_obj 00C4                      __end_of_gpio_pin_initialize 351E  
                             __end_of_btn_values 1011                            _TMR1_InterruptHandler 008E  
                                       _cap_flag 0099                                       sprintf@fmt 0142  
                                       ___xxtofl 1AEC                             _InterruptManagerHigh 0008  
                                       __ptext10 3DB6                                         __ptext11 2856  
                                       __ptext20 2A3E                                         __ptext12 2624  
                                       __ptext21 348E                                         __ptext13 320A  
                                       __ptext30 379A                                         __ptext22 1FB6  
                                       __ptext14 3896                                         __ptext31 33FC  
                                       __ptext23 2C1C                                         __ptext15 390E  
                                       __ptext40 3CE8                                         __ptext32 3B54  
                                       __ptext24 3A74                                         __ptext16 3986  
                                       __ptext41 2D00                                         __ptext33 2272  
                                       __ptext25 3C4E                                         __ptext17 2118  
                                       __ptext50 274E                                         __ptext42 40C2  
                                       __ptext34 2E8E                                         __ptext26 351E  
                                       __ptext18 39FE                                         __ptext51 1056  
                                       __ptext43 3D74                                         __ptext35 3BFC  
                                       __ptext27 3C9E                                         __ptext19 401E  
                                       __ptext60 4086                                         __ptext52 1482  
                                       __ptext44 30AE                                         __ptext36 3BA8  
                                       __ptext28 2FFC                                         __ptext61 408A  
                                       __ptext45 2DCA                                         __ptext37 24F8  
                                       __ptext29 371C                                         __ptext70 409A  
                                       __ptext62 408E                                         __ptext54 3E28  
                                       __ptext46 1E3E                                         __ptext38 1CA4  
                                       __ptext63 4092                                         __ptext55 402E  
                                       __ptext47 23C0                                         __ptext39 3818  
                                       __ptext80 40AE                                         __ptext72 3E5E  
                                       __ptext64 4096                                         __ptext56 4076  
                                       __ptext48 1AEC                                         __ptext81 40B2  
                                       __ptext73 409E                                         __ptext65 3E94  
                                       __ptext57 403C                                         __ptext49 3AE6  
                                       __ptext90 0000                                         __ptext82 40B6  
                                       __ptext74 407C                                         __ptext66 3EC2  
                                       __ptext58 4048                                         __ptext83 3EF0  
                                       __ptext75 4054                                         __ptext67 2F46  
                                       __ptext59 4082                                         __ptext84 3F1E  
                                       __ptext76 4060                                         __ptext68 3F98  
                                       __ptext85 315E                                         __ptext77 40A2  
                                       __ptext69 32B0                                         __ptext86 3FB8  
                                       __ptext78 40A6                                         __ptext87 3356  
                                       __ptext79 40AA                                         __ptext88 40BA  
                                       __ptext89 40BE                         CCP_Capture_Mode_Init@ret 002F  
                            i2_CCP1_Callback_ISR 315E              __end_of_CCP_Capture_Mode_Read_Value 3356  
                 ?i2_CCP_Capture_Mode_Read_Value 0001                      _CCP_Capture_Mode_Read_Value 32B0  
                          ?_ecu_layer_initialize 0001                        __end_of_TMR3_Callback_ISR 403C  
                      _lcd_4bit_send_custom_char 351E                                      CCP_Init@ret 00CB  
                         ??i2_Timer3_Write_Value 0005                                         isa$xinst 0000  
                                       int$flags 0058                     __end_of_lcd_4bit_send_string 3C9E  
                                       _vfprintf 3BA8                             ?i2_CCP1_Callback_ISR 0001  
                                 _lcd_send_4bits 33FC                         Timer3_Mode_Select@_timer 0028  
                  __end_of_CCP_Capture_Mode_Init 2272                                       i2_CCP1_ISR 3F1E  
                                     i2_CCP2_ISR 3EF0                      __end_of_lcd_4bit_initialize 2B2E  
                          ?_InterruptManagerHigh 0001                             _RB6_InterruptHandler 0094  
                                 Timer2_Init@ret 002B                     __end_of_gpio_pin_write_logic 23C0  
                         HeartRate_Calculate@BPM 0164                      __end_ofi2_TMR3_Callback_ISR 40A2  
                                       intlevel1 0000                                         intlevel2 0000  
                                      sprintf@ap 0148                                   Timer3_Init@ret 002E  
                            _InterruptManagerLow 0018                   lcd_4bit_send_enable_signal@lcd 00B4  
                 lcd_4bit_send_enable_signal@ret 00B6                                 ___lldiv@dividend 00B7  
                                     i2_INT1_ISR 40B6                                       i2_INT2_ISR 40B2  
       __end_of_CCP_Capture_Compare_Timer_Config 3A74               ??_CCP_Capture_Compare_Timer_Config 002A  
              ?_CCP_Capture_Compare_Timer_Config 0028                 _CCP_Capture_Compare_Timer_Config 39FE  
                                     i2_TMR0_ISR 4060                                       i2_TMR1_ISR 4054  
                         __end_of_lcd_send_4bits 348E                                       i2_TMR2_ISR 407C  
                                     i2_TMR3_ISR 3E5E                            ??i2_CCP1_Callback_ISR 000B  
                                    ??_vfpfcnvrt 00D8                      __end_of_lcd_4bit_set_cursor 30AE  
                           ?_InterruptManagerLow 0001                          ?_HeartRate_Measure_Init 0001  
                                       sprintf@f 014A                                         sprintf@s 0140  
                               ___lldiv@quotient 00BF                                   _port_registers 0165  
                          _CCP2_InterruptHandler 0031                           ??_ecu_layer_initialize 0031  
                     __end_of_Timer3_Write_Value 3FB8                          ?_CCP1_Capture_Mode_Init 0001  
                    lcd_4bit_send_char_data@data 00BA                                  _Welcome_Message 294E  
                     ??_lcd_4bit_send_string_pos 0031                           lcd_4bit_initialize@lcd 00BC  
                         lcd_4bit_initialize@ret 00C1  
